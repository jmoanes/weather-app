{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,E,E,O,C,qB,W,O,C,G,E,E,O,C,c,W,O,C,G,E,E,O,C,iB,W,O,C,G,E,E,O,C,kB,W,O,C,G,E,E,O,C,kB,W,O,C,G,E,E,O,C,e,W,O,C,G,E,E,O,C,wB,W,O,C,GCCO,IAAM,EAAY,CACvB,GAAI,CACF,KAAM,UACN,KAAM,2BACN,aAAc,CAEZ,kBAAmB,kCACnB,aAAc,SACd,MAAO,QACP,SAAU,SACV,WAAY,gBACZ,aAAc,+CACd,qBAAsB,gDAGtB,IAAK,MACL,IAAK,MACL,YAAa,cACb,SAAU,WACV,UAAW,aACX,SAAU,WACV,WAAY,aACZ,QAAS,UACT,OAAQ,SAGR,UAAW,aACX,UAAW,aAGX,YAAa,oBACb,kBAAmB,0DACnB,SAAU,YACV,GAAI,KACJ,UAAW,mBACX,QAAS,UACT,eAAgB,QAGhB,SAAU,WACV,eAAgB,iBAClB,CACF,EACA,GAAI,CACF,KAAM,UACN,KAAM,2BACN,aAAc,CACZ,kBAAmB,8BACnB,aAAc,SACd,MAAO,MACP,SAAU,SACV,WAAY,wBACZ,aAAc,gDACd,qBAAsB,qDACtB,IAAK,MACL,IAAK,MACL,YAAa,cACb,SAAU,UACV,UAAW,uBACX,SAAU,UACV,WAAY,cACZ,QAAS,WACT,OAAQ,YACR,UAAW,kBACX,UAAW,kBACX,YAAa,kBACb,kBAAmB,0EACnB,SAAU,YACV,GAAI,MACJ,UAAW,wBACX,QAAS,UACT,eAAgB,QAChB,SAAU,SACV,eAAgB,oBAClB,CACF,EACA,GAAI,CACF,KAAM,WACN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,EACA,IAAK,CACH,IAAK,KACL,MAAO,KACP,YAAa,eACf,EACA,IAAK,CACH,IAAK,KACL,MAAO,KACP,YAAa,iBACf,EAGA,IAAK,CACH,IAAK,KACL,MAAO,KACP,YAAa,8BACf,EACA,IAAK,CACH,IAAK,KACL,MAAO,KACP,YAAa,wBACf,EACA,IAAK,CACH,IAAK,KACL,MAAO,KACP,YAAa,8BACf,EACA,IAAK,CACH,IAAK,IACL,MAAO,IACP,YAAa,oBACf,EACA,IAAK,CACH,IAAK,IACL,MAAO,IACP,YAAa,cACf,EACA,IAAK,CACH,IAAK,IACL,MAAO,IACP,YAAa,oBACf,EACA,IAAK,CACH,IAAK,IACL,MAAO,IACP,YAAa,qBACf,EACA,IAAK,CACH,IAAK,KACL,MAAO,KACP,YAAa,iCACf,EACA,IAAK,CACH,IAAK,KACL,MAAO,KACP,YAAa,2BACf,EACA,IAAK,CACH,IAAK,KACL,MAAO,KACP,YAAa,iCACf,EAGA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,yBACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,SACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,yBACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,8BACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,cACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,8BACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,yBACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,+BACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,gBACf,EAGA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,YACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,eACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,sBACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,iBACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,cACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,eACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,6BACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,aACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,6BACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,oBACf,EAGA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,YACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,MACf,EACA,IAAK,CACH,IAAK,KACL,MAAO,KACP,YAAa,YACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,OACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,oBACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,cACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,qBACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,eACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,mBACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,aACf,EACA,IAAK,CACH,IAAK,KACL,MAAO,KACP,YAAa,mBACf,EAGA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,MACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,OACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,MACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,kBACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,KACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,MACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,MACf,EACA,IAAK,CACH,IAAK,gBACL,MAAO,gBACP,YAAa,cACf,EACA,IAAK,CACH,IAAK,eACL,MAAO,eACP,YAAa,SACf,EACA,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","sources":["<anon>","src/js/i18n.js","src/js/app.js","src/js/ui/header.js","src/js/api.js","src/js/ui/home.js","src/js/ui/weatherIcons.js","src/js/ui/fiveDays.js","src/js/ui/quote.js","src/js/ui/chart.js","src/js/ui/footer.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirebbde\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirebbde\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"7t7Z8\", function(module, exports) {\n\n$parcel$export(module.exports, \"getCurrentLanguage\", function () { return $57016f834fb7504d$export$604ba5624273df44; });\n$parcel$export(module.exports, \"setLanguage\", function () { return $57016f834fb7504d$export$4b6bf64406ec64af; });\n$parcel$export(module.exports, \"getTranslation\", function () { return $57016f834fb7504d$export$202e99f82f7f0395; });\n$parcel$export(module.exports, \"getLanguageName\", function () { return $57016f834fb7504d$export$b2c54cc5f2ff61e9; });\n$parcel$export(module.exports, \"getLanguageFlag\", function () { return $57016f834fb7504d$export$16fc5dbe8103e2d0; });\n$parcel$export(module.exports, \"initLanguage\", function () { return $57016f834fb7504d$export$544ea8661fa0df65; });\n$parcel$export(module.exports, \"getAvailableLanguages\", function () { return $57016f834fb7504d$export$b16cb594c618e247; });\n// Internationalization (i18n) for Weather App\nconst $57016f834fb7504d$export$d0d68bb9ed2c643d = {\n    en: {\n        name: 'English',\n        flag: \"\\uD83C\\uDDFA\\uD83C\\uDDF8\",\n        translations: {\n            // Header\n            searchPlaceholder: 'Search for a city or country...',\n            searchButton: 'Search',\n            today: 'TODAY',\n            fiveDays: '5 DAYS',\n            selectCity: 'Select a city',\n            pleaseSearch: 'Please search for a city to see the weather.',\n            pleaseSearchForecast: 'Please search for a city to see the forecast.',\n            // Weather\n            min: 'min',\n            max: 'max',\n            temperature: 'Temperature',\n            humidity: 'Humidity',\n            windSpeed: 'Wind Speed',\n            pressure: 'Pressure',\n            visibility: 'Visibility',\n            sunrise: 'Sunrise',\n            sunset: 'Sunset',\n            // Navigation\n            showChart: 'Show Chart',\n            hideChart: 'Hide Chart',\n            // Footer\n            footerTitle: 'Weather Dashboard',\n            footerDescription: 'Get accurate weather information for any city worldwide',\n            madeWith: 'Made with',\n            by: 'by',\n            developer: 'Weather App Team',\n            version: 'Version',\n            currentVersion: '1.0.0',\n            // Language names\n            language: 'Language',\n            selectLanguage: 'Select Language'\n        }\n    },\n    es: {\n        name: \"Espa\\xf1ol\",\n        flag: \"\\uD83C\\uDDEA\\uD83C\\uDDF8\",\n        translations: {\n            searchPlaceholder: \"Buscar una ciudad o pa\\xeds...\",\n            searchButton: 'Buscar',\n            today: 'HOY',\n            fiveDays: \"5 D\\xcdAS\",\n            selectCity: 'Selecciona una ciudad',\n            pleaseSearch: 'Por favor busca una ciudad para ver el clima.',\n            pleaseSearchForecast: \"Por favor busca una ciudad para ver el pron\\xf3stico.\",\n            min: \"m\\xedn\",\n            max: \"m\\xe1x\",\n            temperature: 'Temperatura',\n            humidity: 'Humedad',\n            windSpeed: 'Velocidad del Viento',\n            pressure: \"Presi\\xf3n\",\n            visibility: 'Visibilidad',\n            sunrise: 'Amanecer',\n            sunset: 'Atardecer',\n            showChart: \"Mostrar Gr\\xe1fico\",\n            hideChart: \"Ocultar Gr\\xe1fico\",\n            footerTitle: 'Panel del Clima',\n            footerDescription: \"Obt\\xe9n informaci\\xf3n meteorol\\xf3gica precisa para cualquier ciudad del mundo\",\n            madeWith: 'Hecho con',\n            by: 'por',\n            developer: 'Equipo de Weather App',\n            version: \"Versi\\xf3n\",\n            currentVersion: '1.0.0',\n            language: 'Idioma',\n            selectLanguage: 'Seleccionar Idioma'\n        }\n    },\n    fr: {\n        name: \"Fran\\xe7ais\",\n        flag: \"\\uD83C\\uDDEB\\uD83C\\uDDF7\",\n        translations: {\n            searchPlaceholder: 'Rechercher une ville ou un pays...',\n            searchButton: 'Rechercher',\n            today: 'AUJOURD\\'HUI',\n            fiveDays: '5 JOURS',\n            selectCity: \"S\\xe9lectionnez une ville\",\n            pleaseSearch: \"Veuillez rechercher une ville pour voir la m\\xe9t\\xe9o.\",\n            pleaseSearchForecast: \"Veuillez rechercher une ville pour voir les pr\\xe9visions.\",\n            min: 'min',\n            max: 'max',\n            temperature: \"Temp\\xe9rature\",\n            humidity: \"Humidit\\xe9\",\n            windSpeed: 'Vitesse du Vent',\n            pressure: 'Pression',\n            visibility: \"Visibilit\\xe9\",\n            sunrise: 'Lever du Soleil',\n            sunset: 'Coucher du Soleil',\n            showChart: 'Afficher le Graphique',\n            hideChart: 'Masquer le Graphique',\n            footerTitle: \"Tableau de Bord M\\xe9t\\xe9o\",\n            footerDescription: \"Obtenez des informations m\\xe9t\\xe9orologiques pr\\xe9cises pour n'importe quelle ville du monde\",\n            madeWith: 'Fait avec',\n            by: 'par',\n            developer: \"\\xc9quipe Weather App\",\n            version: 'Version',\n            currentVersion: '1.0.0',\n            language: 'Langue',\n            selectLanguage: \"S\\xe9lectionner la Langue\"\n        }\n    },\n    de: {\n        name: 'Deutsch',\n        flag: \"\\uD83C\\uDDE9\\uD83C\\uDDEA\",\n        translations: {\n            searchPlaceholder: 'Nach einer Stadt oder einem Land suchen...',\n            searchButton: 'Suchen',\n            today: 'HEUTE',\n            fiveDays: '5 TAGE',\n            selectCity: \"W\\xe4hlen Sie eine Stadt\",\n            pleaseSearch: 'Bitte suchen Sie nach einer Stadt, um das Wetter zu sehen.',\n            pleaseSearchForecast: 'Bitte suchen Sie nach einer Stadt, um die Vorhersage zu sehen.',\n            min: 'min',\n            max: 'max',\n            temperature: 'Temperatur',\n            humidity: 'Luftfeuchtigkeit',\n            windSpeed: 'Windgeschwindigkeit',\n            pressure: 'Druck',\n            visibility: 'Sichtweite',\n            sunrise: 'Sonnenaufgang',\n            sunset: 'Sonnenuntergang',\n            showChart: 'Diagramm Anzeigen',\n            hideChart: 'Diagramm Ausblenden',\n            footerTitle: 'Wetter-Dashboard',\n            footerDescription: \"Erhalten Sie genaue Wetterinformationen f\\xfcr jede Stadt weltweit\",\n            madeWith: 'Gemacht mit',\n            by: 'von',\n            developer: 'Weather App Team',\n            version: 'Version',\n            currentVersion: '1.0.0',\n            language: 'Sprache',\n            selectLanguage: \"Sprache Ausw\\xe4hlen\"\n        }\n    },\n    it: {\n        name: 'Italiano',\n        flag: \"\\uD83C\\uDDEE\\uD83C\\uDDF9\",\n        translations: {\n            searchPlaceholder: \"Cerca una citt\\xe0 o un paese...\",\n            searchButton: 'Cerca',\n            today: 'OGGI',\n            fiveDays: '5 GIORNI',\n            selectCity: \"Seleziona una citt\\xe0\",\n            pleaseSearch: \"Per favore cerca una citt\\xe0 per vedere il meteo.\",\n            pleaseSearchForecast: \"Per favore cerca una citt\\xe0 per vedere le previsioni.\",\n            min: 'min',\n            max: 'max',\n            temperature: 'Temperatura',\n            humidity: \"Umidit\\xe0\",\n            windSpeed: \"Velocit\\xe0 del Vento\",\n            pressure: 'Pressione',\n            visibility: \"Visibilit\\xe0\",\n            sunrise: 'Alba',\n            sunset: 'Tramonto',\n            showChart: 'Mostra Grafico',\n            hideChart: 'Nascondi Grafico',\n            footerTitle: 'Dashboard Meteo',\n            footerDescription: \"Ottieni informazioni meteorologiche precise per qualsiasi citt\\xe0 nel mondo\",\n            madeWith: 'Fatto con',\n            by: 'da',\n            developer: 'Team Weather App',\n            version: 'Versione',\n            currentVersion: '1.0.0',\n            language: 'Lingua',\n            selectLanguage: 'Seleziona Lingua'\n        }\n    },\n    pt: {\n        name: \"Portugu\\xeas\",\n        flag: \"\\uD83C\\uDDF5\\uD83C\\uDDF9\",\n        translations: {\n            searchPlaceholder: \"Pesquisar uma cidade ou pa\\xeds...\",\n            searchButton: 'Pesquisar',\n            today: 'HOJE',\n            fiveDays: '5 DIAS',\n            selectCity: 'Selecione uma cidade',\n            pleaseSearch: 'Por favor pesquise uma cidade para ver o clima.',\n            pleaseSearchForecast: \"Por favor pesquise uma cidade para ver a previs\\xe3o.\",\n            min: \"m\\xedn\",\n            max: \"m\\xe1x\",\n            temperature: 'Temperatura',\n            humidity: 'Umidade',\n            windSpeed: 'Velocidade do Vento',\n            pressure: \"Press\\xe3o\",\n            visibility: 'Visibilidade',\n            sunrise: 'Nascer do Sol',\n            sunset: \"P\\xf4r do Sol\",\n            showChart: \"Mostrar Gr\\xe1fico\",\n            hideChart: \"Ocultar Gr\\xe1fico\",\n            footerTitle: 'Painel do Clima',\n            footerDescription: \"Obtenha informa\\xe7\\xf5es meteorol\\xf3gicas precisas para qualquer cidade do mundo\",\n            madeWith: 'Feito com',\n            by: 'por',\n            developer: 'Equipe Weather App',\n            version: \"Vers\\xe3o\",\n            currentVersion: '1.0.0',\n            language: 'Idioma',\n            selectLanguage: 'Selecionar Idioma'\n        }\n    },\n    ru: {\n        name: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\",\n        flag: \"\\uD83C\\uDDF7\\uD83C\\uDDFA\",\n        translations: {\n            searchPlaceholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430 \\u0438\\u043B\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u044B...\",\n            searchButton: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n            today: \"\\u0421\\u0415\\u0413\\u041E\\u0414\\u041D\\u042F\",\n            fiveDays: \"5 \\u0414\\u041D\\u0415\\u0419\",\n            selectCity: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\",\n            pleaseSearch: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0443\\u0432\\u0438\\u0434\\u0435\\u0442\\u044C \\u043F\\u043E\\u0433\\u043E\\u0434\\u0443.\",\n            pleaseSearchForecast: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0443\\u0432\\u0438\\u0434\\u0435\\u0442\\u044C \\u043F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437.\",\n            min: \"\\u043C\\u0438\\u043D\",\n            max: \"\\u043C\\u0430\\u043A\\u0441\",\n            temperature: \"\\u0422\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430\",\n            humidity: \"\\u0412\\u043B\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\",\n            windSpeed: \"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u0412\\u0435\\u0442\\u0440\\u0430\",\n            pressure: \"\\u0414\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\",\n            visibility: \"\\u0412\\u0438\\u0434\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\",\n            sunrise: \"\\u0412\\u043E\\u0441\\u0445\\u043E\\u0434\",\n            sunset: \"\\u0417\\u0430\\u043A\\u0430\\u0442\",\n            showChart: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0413\\u0440\\u0430\\u0444\\u0438\\u043A\",\n            hideChart: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \\u0413\\u0440\\u0430\\u0444\\u0438\\u043A\",\n            footerTitle: \"\\u041F\\u043E\\u0433\\u043E\\u0434\\u043D\\u0430\\u044F \\u041F\\u0430\\u043D\\u0435\\u043B\\u044C\",\n            footerDescription: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u0435 \\u0442\\u043E\\u0447\\u043D\\u0443\\u044E \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u043F\\u043E\\u0433\\u043E\\u0434\\u0435 \\u0434\\u043B\\u044F \\u043B\\u044E\\u0431\\u043E\\u0433\\u043E \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430 \\u0432 \\u043C\\u0438\\u0440\\u0435\",\n            madeWith: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u043D\\u043E \\u0441\",\n            by: \"\\u043E\\u0442\",\n            developer: \"\\u041A\\u043E\\u043C\\u0430\\u043D\\u0434\\u0430 Weather App\",\n            version: \"\\u0412\\u0435\\u0440\\u0441\\u0438\\u044F\",\n            currentVersion: '1.0.0',\n            language: \"\\u042F\\u0437\\u044B\\u043A\",\n            selectLanguage: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u042F\\u0437\\u044B\\u043A\"\n        }\n    },\n    ja: {\n        name: \"\\u65E5\\u672C\\u8A9E\",\n        flag: \"\\uD83C\\uDDEF\\uD83C\\uDDF5\",\n        translations: {\n            searchPlaceholder: \"\\u90FD\\u5E02\\u3084\\u56FD\\u3092\\u691C\\u7D22...\",\n            searchButton: \"\\u691C\\u7D22\",\n            today: \"\\u4ECA\\u65E5\",\n            fiveDays: \"5\\u65E5\\u9593\",\n            selectCity: \"\\u90FD\\u5E02\\u3092\\u9078\\u629E\",\n            pleaseSearch: \"\\u5929\\u6C17\\u3092\\u898B\\u308B\\u306B\\u306F\\u90FD\\u5E02\\u3092\\u691C\\u7D22\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\",\n            pleaseSearchForecast: \"\\u4E88\\u5831\\u3092\\u898B\\u308B\\u306B\\u306F\\u90FD\\u5E02\\u3092\\u691C\\u7D22\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\",\n            min: \"\\u6700\\u4F4E\",\n            max: \"\\u6700\\u9AD8\",\n            temperature: \"\\u6C17\\u6E29\",\n            humidity: \"\\u6E7F\\u5EA6\",\n            windSpeed: \"\\u98A8\\u901F\",\n            pressure: \"\\u6C17\\u5727\",\n            visibility: \"\\u8996\\u754C\",\n            sunrise: \"\\u65E5\\u306E\\u51FA\",\n            sunset: \"\\u65E5\\u306E\\u5165\\u308A\",\n            showChart: \"\\u30B0\\u30E9\\u30D5\\u3092\\u8868\\u793A\",\n            hideChart: \"\\u30B0\\u30E9\\u30D5\\u3092\\u96A0\\u3059\",\n            footerTitle: \"\\u5929\\u6C17\\u30C0\\u30C3\\u30B7\\u30E5\\u30DC\\u30FC\\u30C9\",\n            footerDescription: \"\\u4E16\\u754C\\u4E2D\\u306E\\u3069\\u306E\\u90FD\\u5E02\\u3067\\u3082\\u6B63\\u78BA\\u306A\\u5929\\u6C17\\u60C5\\u5831\\u3092\\u53D6\\u5F97\",\n            madeWith: \"\\u3067\\u4F5C\\u6210\",\n            by: 'by',\n            developer: \"Weather App \\u30C1\\u30FC\\u30E0\",\n            version: \"\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\",\n            currentVersion: '1.0.0',\n            language: \"\\u8A00\\u8A9E\",\n            selectLanguage: \"\\u8A00\\u8A9E\\u3092\\u9078\\u629E\"\n        }\n    },\n    ko: {\n        name: \"\\uD55C\\uAD6D\\uC5B4\",\n        flag: \"\\uD83C\\uDDF0\\uD83C\\uDDF7\",\n        translations: {\n            searchPlaceholder: \"\\uB3C4\\uC2DC\\uB098 \\uAD6D\\uAC00 \\uAC80\\uC0C9...\",\n            searchButton: \"\\uAC80\\uC0C9\",\n            today: \"\\uC624\\uB298\",\n            fiveDays: \"5\\uC77C\",\n            selectCity: \"\\uB3C4\\uC2DC\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\",\n            pleaseSearch: \"\\uB0A0\\uC528\\uB97C \\uBCF4\\uB824\\uBA74 \\uB3C4\\uC2DC\\uB97C \\uAC80\\uC0C9\\uD558\\uC138\\uC694.\",\n            pleaseSearchForecast: \"\\uC608\\uBCF4\\uB97C \\uBCF4\\uB824\\uBA74 \\uB3C4\\uC2DC\\uB97C \\uAC80\\uC0C9\\uD558\\uC138\\uC694.\",\n            min: \"\\uCD5C\\uC800\",\n            max: \"\\uCD5C\\uACE0\",\n            temperature: \"\\uAE30\\uC628\",\n            humidity: \"\\uC2B5\\uB3C4\",\n            windSpeed: \"\\uD48D\\uC18D\",\n            pressure: \"\\uAE30\\uC555\",\n            visibility: \"\\uAC00\\uC2DC\\uAC70\\uB9AC\",\n            sunrise: \"\\uC77C\\uCD9C\",\n            sunset: \"\\uC77C\\uBAB0\",\n            showChart: \"\\uCC28\\uD2B8 \\uD45C\\uC2DC\",\n            hideChart: \"\\uCC28\\uD2B8 \\uC228\\uAE30\\uAE30\",\n            footerTitle: \"\\uB0A0\\uC528 \\uB300\\uC2DC\\uBCF4\\uB4DC\",\n            footerDescription: \"\\uC804 \\uC138\\uACC4 \\uC5B4\\uB290 \\uB3C4\\uC2DC\\uB4E0 \\uC815\\uD655\\uD55C \\uB0A0\\uC528 \\uC815\\uBCF4\\uB97C \\uC5BB\\uC73C\\uC138\\uC694\",\n            madeWith: \"\\uB85C \\uC81C\\uC791\",\n            by: 'by',\n            developer: \"Weather App \\uD300\",\n            version: \"\\uBC84\\uC804\",\n            currentVersion: '1.0.0',\n            language: \"\\uC5B8\\uC5B4\",\n            selectLanguage: \"\\uC5B8\\uC5B4 \\uC120\\uD0DD\"\n        }\n    },\n    zh: {\n        name: \"\\u4E2D\\u6587\",\n        flag: \"\\uD83C\\uDDE8\\uD83C\\uDDF3\",\n        translations: {\n            searchPlaceholder: \"\\u641C\\u7D22\\u57CE\\u5E02\\u6216\\u56FD\\u5BB6...\",\n            searchButton: \"\\u641C\\u7D22\",\n            today: \"\\u4ECA\\u5929\",\n            fiveDays: \"5\\u5929\",\n            selectCity: \"\\u9009\\u62E9\\u57CE\\u5E02\",\n            pleaseSearch: \"\\u8BF7\\u641C\\u7D22\\u57CE\\u5E02\\u4EE5\\u67E5\\u770B\\u5929\\u6C14\\u3002\",\n            pleaseSearchForecast: \"\\u8BF7\\u641C\\u7D22\\u57CE\\u5E02\\u4EE5\\u67E5\\u770B\\u9884\\u62A5\\u3002\",\n            min: \"\\u6700\\u4F4E\",\n            max: \"\\u6700\\u9AD8\",\n            temperature: \"\\u6E29\\u5EA6\",\n            humidity: \"\\u6E7F\\u5EA6\",\n            windSpeed: \"\\u98CE\\u901F\",\n            pressure: \"\\u6C14\\u538B\",\n            visibility: \"\\u80FD\\u89C1\\u5EA6\",\n            sunrise: \"\\u65E5\\u51FA\",\n            sunset: \"\\u65E5\\u843D\",\n            showChart: \"\\u663E\\u793A\\u56FE\\u8868\",\n            hideChart: \"\\u9690\\u85CF\\u56FE\\u8868\",\n            footerTitle: \"\\u5929\\u6C14\\u4EEA\\u8868\\u677F\",\n            footerDescription: \"\\u83B7\\u53D6\\u5168\\u7403\\u4EFB\\u4F55\\u57CE\\u5E02\\u7684\\u51C6\\u786E\\u5929\\u6C14\\u4FE1\\u606F\",\n            madeWith: \"\\u5236\\u4F5C\",\n            by: 'by',\n            developer: \"Weather App \\u56E2\\u961F\",\n            version: \"\\u7248\\u672C\",\n            currentVersion: '1.0.0',\n            language: \"\\u8BED\\u8A00\",\n            selectLanguage: \"\\u9009\\u62E9\\u8BED\\u8A00\"\n        }\n    },\n    ar: {\n        name: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\",\n        flag: \"\\uD83C\\uDDF8\\uD83C\\uDDE6\",\n        translations: {\n            searchPlaceholder: \"\\u0627\\u0644\\u0628\\u062D\\u062B \\u0639\\u0646 \\u0645\\u062F\\u064A\\u0646\\u0629 \\u0623\\u0648 \\u0628\\u0644\\u062F...\",\n            searchButton: \"\\u0628\\u062D\\u062B\",\n            today: \"\\u0627\\u0644\\u064A\\u0648\\u0645\",\n            fiveDays: \"5 \\u0623\\u064A\\u0627\\u0645\",\n            selectCity: \"\\u0627\\u062E\\u062A\\u0631 \\u0645\\u062F\\u064A\\u0646\\u0629\",\n            pleaseSearch: \"\\u064A\\u0631\\u062C\\u0649 \\u0627\\u0644\\u0628\\u062D\\u062B \\u0639\\u0646 \\u0645\\u062F\\u064A\\u0646\\u0629 \\u0644\\u0631\\u0624\\u064A\\u0629 \\u0627\\u0644\\u0637\\u0642\\u0633.\",\n            pleaseSearchForecast: \"\\u064A\\u0631\\u062C\\u0649 \\u0627\\u0644\\u0628\\u062D\\u062B \\u0639\\u0646 \\u0645\\u062F\\u064A\\u0646\\u0629 \\u0644\\u0631\\u0624\\u064A\\u0629 \\u0627\\u0644\\u062A\\u0648\\u0642\\u0639\\u0627\\u062A.\",\n            min: \"\\u0627\\u0644\\u062D\\u062F \\u0627\\u0644\\u0623\\u062F\\u0646\\u0649\",\n            max: \"\\u0627\\u0644\\u062D\\u062F \\u0627\\u0644\\u0623\\u0642\\u0635\\u0649\",\n            temperature: \"\\u062F\\u0631\\u062C\\u0629 \\u0627\\u0644\\u062D\\u0631\\u0627\\u0631\\u0629\",\n            humidity: \"\\u0627\\u0644\\u0631\\u0637\\u0648\\u0628\\u0629\",\n            windSpeed: \"\\u0633\\u0631\\u0639\\u0629 \\u0627\\u0644\\u0631\\u064A\\u0627\\u062D\",\n            pressure: \"\\u0627\\u0644\\u0636\\u063A\\u0637\",\n            visibility: \"\\u0627\\u0644\\u0631\\u0624\\u064A\\u0629\",\n            sunrise: \"\\u0634\\u0631\\u0648\\u0642 \\u0627\\u0644\\u0634\\u0645\\u0633\",\n            sunset: \"\\u063A\\u0631\\u0648\\u0628 \\u0627\\u0644\\u0634\\u0645\\u0633\",\n            showChart: \"\\u0625\\u0638\\u0647\\u0627\\u0631 \\u0627\\u0644\\u0631\\u0633\\u0645 \\u0627\\u0644\\u0628\\u064A\\u0627\\u0646\\u064A\",\n            hideChart: \"\\u0625\\u062E\\u0641\\u0627\\u0621 \\u0627\\u0644\\u0631\\u0633\\u0645 \\u0627\\u0644\\u0628\\u064A\\u0627\\u0646\\u064A\",\n            footerTitle: \"\\u0644\\u0648\\u062D\\u0629 \\u0627\\u0644\\u0637\\u0642\\u0633\",\n            footerDescription: \"\\u0627\\u062D\\u0635\\u0644 \\u0639\\u0644\\u0649 \\u0645\\u0639\\u0644\\u0648\\u0645\\u0627\\u062A \\u062F\\u0642\\u064A\\u0642\\u0629 \\u0639\\u0646 \\u0627\\u0644\\u0637\\u0642\\u0633 \\u0644\\u0623\\u064A \\u0645\\u062F\\u064A\\u0646\\u0629 \\u0641\\u064A \\u0627\\u0644\\u0639\\u0627\\u0644\\u0645\",\n            madeWith: \"\\u0635\\u0646\\u0639 \\u0628\\u0640\",\n            by: \"\\u0628\\u0648\\u0627\\u0633\\u0637\\u0629\",\n            developer: \"\\u0641\\u0631\\u064A\\u0642 \\u062A\\u0637\\u0628\\u064A\\u0642 \\u0627\\u0644\\u0637\\u0642\\u0633\",\n            version: \"\\u0627\\u0644\\u0625\\u0635\\u062F\\u0627\\u0631\",\n            currentVersion: '1.0.0',\n            language: \"\\u0627\\u0644\\u0644\\u063A\\u0629\",\n            selectLanguage: \"\\u0627\\u062E\\u062A\\u0631 \\u0627\\u0644\\u0644\\u063A\\u0629\"\n        }\n    },\n    hi: {\n        name: \"\\u0939\\u093F\\u0928\\u094D\\u0926\\u0940\",\n        flag: \"\\uD83C\\uDDEE\\uD83C\\uDDF3\",\n        translations: {\n            searchPlaceholder: \"\\u0936\\u0939\\u0930 \\u092F\\u093E \\u0926\\u0947\\u0936 \\u0916\\u094B\\u091C\\u0947\\u0902...\",\n            searchButton: \"\\u0916\\u094B\\u091C\\u0947\\u0902\",\n            today: \"\\u0906\\u091C\",\n            fiveDays: \"5 \\u0926\\u093F\\u0928\",\n            selectCity: \"\\u0936\\u0939\\u0930 \\u091A\\u0941\\u0928\\u0947\\u0902\",\n            pleaseSearch: \"\\u0915\\u0943\\u092A\\u092F\\u093E \\u092E\\u094C\\u0938\\u092E \\u0926\\u0947\\u0916\\u0928\\u0947 \\u0915\\u0947 \\u0932\\u093F\\u090F \\u0936\\u0939\\u0930 \\u0916\\u094B\\u091C\\u0947\\u0902\\u0964\",\n            pleaseSearchForecast: \"\\u0915\\u0943\\u092A\\u092F\\u093E \\u092A\\u0942\\u0930\\u094D\\u0935\\u093E\\u0928\\u0941\\u092E\\u093E\\u0928 \\u0926\\u0947\\u0916\\u0928\\u0947 \\u0915\\u0947 \\u0932\\u093F\\u090F \\u0936\\u0939\\u0930 \\u0916\\u094B\\u091C\\u0947\\u0902\\u0964\",\n            min: \"\\u0928\\u094D\\u092F\\u0942\\u0928\\u0924\\u092E\",\n            max: \"\\u0905\\u0927\\u093F\\u0915\\u0924\\u092E\",\n            temperature: \"\\u0924\\u093E\\u092A\\u092E\\u093E\\u0928\",\n            humidity: \"\\u0906\\u0930\\u094D\\u0926\\u094D\\u0930\\u0924\\u093E\",\n            windSpeed: \"\\u0939\\u0935\\u093E \\u0915\\u0940 \\u0917\\u0924\\u093F\",\n            pressure: \"\\u0926\\u092C\\u093E\\u0935\",\n            visibility: \"\\u0926\\u0943\\u0936\\u094D\\u092F\\u0924\\u093E\",\n            sunrise: \"\\u0938\\u0942\\u0930\\u094D\\u092F\\u094B\\u0926\\u092F\",\n            sunset: \"\\u0938\\u0942\\u0930\\u094D\\u092F\\u093E\\u0938\\u094D\\u0924\",\n            showChart: \"\\u091A\\u093E\\u0930\\u094D\\u091F \\u0926\\u093F\\u0916\\u093E\\u090F\\u0902\",\n            hideChart: \"\\u091A\\u093E\\u0930\\u094D\\u091F \\u091B\\u093F\\u092A\\u093E\\u090F\\u0902\",\n            footerTitle: \"\\u092E\\u094C\\u0938\\u092E \\u0921\\u0948\\u0936\\u092C\\u094B\\u0930\\u094D\\u0921\",\n            footerDescription: \"\\u0926\\u0941\\u0928\\u093F\\u092F\\u093E \\u0915\\u0947 \\u0915\\u093F\\u0938\\u0940 \\u092D\\u0940 \\u0936\\u0939\\u0930 \\u0915\\u0947 \\u0932\\u093F\\u090F \\u0938\\u091F\\u0940\\u0915 \\u092E\\u094C\\u0938\\u092E \\u0915\\u0940 \\u091C\\u093E\\u0928\\u0915\\u093E\\u0930\\u0940 \\u092A\\u094D\\u0930\\u093E\\u092A\\u094D\\u0924 \\u0915\\u0930\\u0947\\u0902\",\n            madeWith: \"\\u0915\\u0947 \\u0938\\u093E\\u0925 \\u092C\\u0928\\u093E\\u092F\\u093E\",\n            by: \"\\u0926\\u094D\\u0935\\u093E\\u0930\\u093E\",\n            developer: \"Weather App \\u091F\\u0940\\u092E\",\n            version: \"\\u0938\\u0902\\u0938\\u094D\\u0915\\u0930\\u0923\",\n            currentVersion: '1.0.0',\n            language: \"\\u092D\\u093E\\u0937\\u093E\",\n            selectLanguage: \"\\u092D\\u093E\\u0937\\u093E \\u091A\\u0941\\u0928\\u0947\\u0902\"\n        }\n    }\n};\n// Current language\nlet $57016f834fb7504d$var$currentLanguage = 'en';\nfunction $57016f834fb7504d$export$604ba5624273df44() {\n    return $57016f834fb7504d$var$currentLanguage;\n}\nfunction $57016f834fb7504d$export$4b6bf64406ec64af(lang) {\n    if ($57016f834fb7504d$export$d0d68bb9ed2c643d[lang]) {\n        $57016f834fb7504d$var$currentLanguage = lang;\n        localStorage.setItem('weatherAppLanguage', lang);\n        $57016f834fb7504d$var$updateUILanguage();\n    }\n}\nfunction $57016f834fb7504d$export$202e99f82f7f0395(key) {\n    const lang = $57016f834fb7504d$export$d0d68bb9ed2c643d[$57016f834fb7504d$var$currentLanguage];\n    return lang ? lang.translations[key] || key : key;\n}\nfunction $57016f834fb7504d$export$b2c54cc5f2ff61e9(langCode) {\n    return $57016f834fb7504d$export$d0d68bb9ed2c643d[langCode] ? $57016f834fb7504d$export$d0d68bb9ed2c643d[langCode].name : langCode;\n}\nfunction $57016f834fb7504d$export$16fc5dbe8103e2d0(langCode) {\n    return $57016f834fb7504d$export$d0d68bb9ed2c643d[langCode] ? $57016f834fb7504d$export$d0d68bb9ed2c643d[langCode].flag : \"\\uD83C\\uDF10\";\n}\nfunction $57016f834fb7504d$export$544ea8661fa0df65() {\n    const savedLang = localStorage.getItem('weatherAppLanguage');\n    if (savedLang && $57016f834fb7504d$export$d0d68bb9ed2c643d[savedLang]) $57016f834fb7504d$var$currentLanguage = savedLang;\n    else {\n        // Auto-detect language from browser\n        const browserLang = navigator.language.split('-')[0];\n        if ($57016f834fb7504d$export$d0d68bb9ed2c643d[browserLang]) $57016f834fb7504d$var$currentLanguage = browserLang;\n    }\n}\n// Update UI language\nfunction $57016f834fb7504d$var$updateUILanguage() {\n    // Trigger a custom event to notify components\n    window.dispatchEvent(new CustomEvent('languageChanged', {\n        detail: {\n            language: $57016f834fb7504d$var$currentLanguage\n        }\n    }));\n}\nfunction $57016f834fb7504d$export$b16cb594c618e247() {\n    return Object.keys($57016f834fb7504d$export$d0d68bb9ed2c643d);\n}\n\n});\n\n// Header functionality for the weather app\nlet $d16ff8997fd7b72f$var$savedCities = [\n    'Kyiv',\n    'Paris',\n    'Vinnytsia',\n    'Warsaw'\n];\nlet $d16ff8997fd7b72f$var$currentCity = 'Kyiv';\nlet $d16ff8997fd7b72f$var$hiddenCities = []; // Track cities that are added but hidden\n// Search state variables - simplified since we're not using real-time search\nlet $d16ff8997fd7b72f$var$searchResults = [];\nlet $d16ff8997fd7b72f$var$currentPage = 0;\nlet $d16ff8997fd7b72f$var$itemsPerPage = 4;\nlet $d16ff8997fd7b72f$var$totalPages = 0;\n// Country data for dropdown suggestions\nconst $d16ff8997fd7b72f$var$countryData = [\n    {\n        name: 'Afghanistan',\n        code: 'AF',\n        cities: [\n            'Kabul',\n            'Kandahar',\n            'Herat'\n        ]\n    },\n    {\n        name: 'Albania',\n        code: 'AL',\n        cities: [\n            'Tirana',\n            \"Durr\\xebs\",\n            \"Vlor\\xeb\"\n        ]\n    },\n    {\n        name: 'Algeria',\n        code: 'DZ',\n        cities: [\n            'Algiers',\n            'Oran',\n            'Constantine'\n        ]\n    },\n    {\n        name: 'Argentina',\n        code: 'AR',\n        cities: [\n            'Buenos Aires',\n            \"C\\xf3rdoba\",\n            'Rosario'\n        ]\n    },\n    {\n        name: 'Australia',\n        code: 'AU',\n        cities: [\n            'Sydney',\n            'Melbourne',\n            'Brisbane'\n        ]\n    },\n    {\n        name: 'Austria',\n        code: 'AT',\n        cities: [\n            'Vienna',\n            'Graz',\n            'Linz'\n        ]\n    },\n    {\n        name: 'Belgium',\n        code: 'BE',\n        cities: [\n            'Brussels',\n            'Antwerp',\n            'Ghent'\n        ]\n    },\n    {\n        name: 'Brazil',\n        code: 'BR',\n        cities: [\n            \"S\\xe3o Paulo\",\n            'Rio de Janeiro',\n            \"Bras\\xedlia\"\n        ]\n    },\n    {\n        name: 'Canada',\n        code: 'CA',\n        cities: [\n            'Toronto',\n            'Montreal',\n            'Vancouver'\n        ]\n    },\n    {\n        name: 'Chile',\n        code: 'CL',\n        cities: [\n            'Santiago',\n            \"Valpara\\xedso\",\n            \"Concepci\\xf3n\"\n        ]\n    },\n    {\n        name: 'China',\n        code: 'CN',\n        cities: [\n            'Beijing',\n            'Shanghai',\n            'Guangzhou'\n        ]\n    },\n    {\n        name: 'Colombia',\n        code: 'CO',\n        cities: [\n            \"Bogot\\xe1\",\n            \"Medell\\xedn\",\n            'Cali'\n        ]\n    },\n    {\n        name: 'Czech Republic',\n        code: 'CZ',\n        cities: [\n            'Prague',\n            'Brno',\n            'Ostrava'\n        ]\n    },\n    {\n        name: 'Denmark',\n        code: 'DK',\n        cities: [\n            'Copenhagen',\n            'Aarhus',\n            'Odense'\n        ]\n    },\n    {\n        name: 'Egypt',\n        code: 'EG',\n        cities: [\n            'Cairo',\n            'Alexandria',\n            'Giza'\n        ]\n    },\n    {\n        name: 'Finland',\n        code: 'FI',\n        cities: [\n            'Helsinki',\n            'Espoo',\n            'Tampere'\n        ]\n    },\n    {\n        name: 'France',\n        code: 'FR',\n        cities: [\n            'Paris',\n            'Marseille',\n            'Lyon'\n        ]\n    },\n    {\n        name: 'Germany',\n        code: 'DE',\n        cities: [\n            'Berlin',\n            'Hamburg',\n            'Munich'\n        ]\n    },\n    {\n        name: 'Greece',\n        code: 'GR',\n        cities: [\n            'Athens',\n            'Thessaloniki',\n            'Patras'\n        ]\n    },\n    {\n        name: 'Hungary',\n        code: 'HU',\n        cities: [\n            'Budapest',\n            'Debrecen',\n            'Szeged'\n        ]\n    },\n    {\n        name: 'India',\n        code: 'IN',\n        cities: [\n            'Mumbai',\n            'Delhi',\n            'Bangalore'\n        ]\n    },\n    {\n        name: 'Indonesia',\n        code: 'ID',\n        cities: [\n            'Jakarta',\n            'Surabaya',\n            'Bandung'\n        ]\n    },\n    {\n        name: 'Ireland',\n        code: 'IE',\n        cities: [\n            'Dublin',\n            'Cork',\n            'Galway'\n        ]\n    },\n    {\n        name: 'Italy',\n        code: 'IT',\n        cities: [\n            'Rome',\n            'Milan',\n            'Naples'\n        ]\n    },\n    {\n        name: 'Japan',\n        code: 'JP',\n        cities: [\n            'Tokyo',\n            'Osaka',\n            'Nagoya'\n        ]\n    },\n    {\n        name: 'Kenya',\n        code: 'KE',\n        cities: [\n            'Nairobi',\n            'Mombasa',\n            'Kisumu'\n        ]\n    },\n    {\n        name: 'Malaysia',\n        code: 'MY',\n        cities: [\n            'Kuala Lumpur',\n            'George Town',\n            'Johor Bahru'\n        ]\n    },\n    {\n        name: 'Mexico',\n        code: 'MX',\n        cities: [\n            'Mexico City',\n            'Guadalajara',\n            'Monterrey'\n        ]\n    },\n    {\n        name: 'Morocco',\n        code: 'MA',\n        cities: [\n            'Casablanca',\n            'Rabat',\n            'Fez'\n        ]\n    },\n    {\n        name: 'Netherlands',\n        code: 'NL',\n        cities: [\n            'Amsterdam',\n            'Rotterdam',\n            'The Hague'\n        ]\n    },\n    {\n        name: 'New Zealand',\n        code: 'NZ',\n        cities: [\n            'Auckland',\n            'Wellington',\n            'Christchurch'\n        ]\n    },\n    {\n        name: 'Nigeria',\n        code: 'NG',\n        cities: [\n            'Lagos',\n            'Kano',\n            'Ibadan'\n        ]\n    },\n    {\n        name: 'Norway',\n        code: 'NO',\n        cities: [\n            'Oslo',\n            'Bergen',\n            'Trondheim'\n        ]\n    },\n    {\n        name: 'Philippines',\n        code: 'PH',\n        cities: [\n            'Manila',\n            'Quezon City',\n            'Davao City'\n        ]\n    },\n    {\n        name: 'Poland',\n        code: 'PL',\n        cities: [\n            'Warsaw',\n            \"Krak\\xf3w\",\n            \"\\u0141\\xf3d\\u017A\"\n        ]\n    },\n    {\n        name: 'Portugal',\n        code: 'PT',\n        cities: [\n            'Lisbon',\n            'Porto',\n            'Braga'\n        ]\n    },\n    {\n        name: 'Romania',\n        code: 'RO',\n        cities: [\n            'Bucharest',\n            'Cluj-Napoca',\n            \"Timi\\u0219oara\"\n        ]\n    },\n    {\n        name: 'Russia',\n        code: 'RU',\n        cities: [\n            'Moscow',\n            'Saint Petersburg',\n            'Novosibirsk'\n        ]\n    },\n    {\n        name: 'Saudi Arabia',\n        code: 'SA',\n        cities: [\n            'Riyadh',\n            'Jeddah',\n            'Mecca'\n        ]\n    },\n    {\n        name: 'Singapore',\n        code: 'SG',\n        cities: [\n            'Singapore'\n        ]\n    },\n    {\n        name: 'South Africa',\n        code: 'ZA',\n        cities: [\n            'Johannesburg',\n            'Cape Town',\n            'Durban'\n        ]\n    },\n    {\n        name: 'South Korea',\n        code: 'KR',\n        cities: [\n            'Seoul',\n            'Busan',\n            'Incheon'\n        ]\n    },\n    {\n        name: 'Spain',\n        code: 'ES',\n        cities: [\n            'Madrid',\n            'Barcelona',\n            'Valencia'\n        ]\n    },\n    {\n        name: 'Sweden',\n        code: 'SE',\n        cities: [\n            'Stockholm',\n            'Gothenburg',\n            \"Malm\\xf6\"\n        ]\n    },\n    {\n        name: 'Switzerland',\n        code: 'CH',\n        cities: [\n            'Zurich',\n            'Geneva',\n            'Basel'\n        ]\n    },\n    {\n        name: 'Thailand',\n        code: 'TH',\n        cities: [\n            'Bangkok',\n            'Chiang Mai',\n            'Pattaya'\n        ]\n    },\n    {\n        name: 'Turkey',\n        code: 'TR',\n        cities: [\n            'Istanbul',\n            'Ankara',\n            'Izmir'\n        ]\n    },\n    {\n        name: 'Ukraine',\n        code: 'UA',\n        cities: [\n            'Kyiv',\n            'Kharkiv',\n            'Odesa'\n        ]\n    },\n    {\n        name: 'United Arab Emirates',\n        code: 'AE',\n        cities: [\n            'Dubai',\n            'Abu Dhabi',\n            'Sharjah'\n        ]\n    },\n    {\n        name: 'United Kingdom',\n        code: 'GB',\n        cities: [\n            'London',\n            'Birmingham',\n            'Manchester'\n        ]\n    },\n    {\n        name: 'United States',\n        code: 'US',\n        cities: [\n            'New York',\n            'Los Angeles',\n            'Chicago'\n        ]\n    },\n    {\n        name: 'Vietnam',\n        code: 'VN',\n        cities: [\n            'Ho Chi Minh City',\n            'Hanoi',\n            'Da Nang'\n        ]\n    }\n];\nfunction $d16ff8997fd7b72f$export$311ccb8ac074141f(onCitySelect) {\n    const headerHTML = `\n    <header class=\"header\">\n      \n      <div class=\"header-searchbar\">\n        <div class=\"search-input-wrapper\" style=\"width: 100%; max-width: 1000px; margin: 0 auto; position: relative;\">\n          <span class=\"searchbar-icon-inside\" style=\"z-index: 5;\">\\u{1F50D}</span>\n          <input type=\"text\" class=\"search-input-rounded\" placeholder=\"Search for a city or country...\" id=\"city-search\" autocomplete=\"off\" spellcheck=\"false\" maxlength=\"100\" style=\"position: relative; z-index: 1; background: transparent !important; color: black !important; border: none !important; padding: 16px 110px 16px 44px !important; width: 100% !important; box-sizing: border-box !important; font-size: 16px !important; border-radius: 25px !important; outline: none !important;\">\n          <button class=\"search-btn-inside\" id=\"search-btn\" style=\"background: #1976d2 !important; color: white !important; border: none !important; border-radius: 22px !important; height: 45px !important; width: auto !important; min-width: 96px !important; padding: 0 16px !important; display: flex !important; align-items: center !important; justify-content: center !important; cursor: pointer !important; margin-right: 8px !important; box-shadow: none !important; transition: none !important; z-index: 6;\">\n            <span class=\"search-label\" style=\"font-weight: 700; letter-spacing: 0.3px;\">Search</span>\n          </button>\n          <!-- Enhanced Country Dropdown Container (aligned to input wrapper) -->\n          <div class=\"country-dropdown-container\" id=\"country-dropdown-container\" style=\"display: none; position: absolute; top: calc(100% + 8px); left: 0; width: 100%; background: #ffffff; border: 1px solid #e5e7eb; border-radius: 16px; box-shadow: 0 12px 32px rgba(0,0,0,0.12); z-index: 10000; max-height: 320px; overflow-y: auto; backdrop-filter: blur(8px);\">\n          <!-- Country suggestions will be populated here -->\n        </div>\n        </div>\n        \n        <!-- Quick Country Access Buttons -->\n        <div class=\"quick-countries\" style=\"display: flex; gap: 8px; margin-top: 12px; flex-wrap: wrap; justify-content: center;\">\n          <button class=\"quick-country-btn\" data-country=\"US\" style=\"padding: 6px 12px; background: #e3f2fd; color: #1976d2; border: 1px solid #bbdefb; border-radius: 20px; cursor: pointer; font-size: 12px; font-weight: 500; transition: all 0.2s ease;\">\\u{1F1FA}\\u{1F1F8} USA</button>\n          <button class=\"quick-country-btn\" data-country=\"GB\" style=\"padding: 6px 12px; background: #e3f2fd; color: #1976d2; border: 1px solid #bbdefb; border-radius: 20px; cursor: pointer; font-size: 12px; font-weight: 500; transition: all 0.2s ease;\">\\u{1F1EC}\\u{1F1E7} UK</button>\n          <button class=\"quick-country-btn\" data-country=\"PH\" style=\"padding: 6px 12px; background: #e3f2fd; color: #1976d2; border: 1px solid #bbdefb; border-radius: 20px; cursor: pointer; font-size: 12px; font-weight: 500; transition: all 0.2s ease;\">\\u{1F1F5}\\u{1F1ED} Philippines</button>\n          <button class=\"quick-country-btn\" data-country=\"JP\" style=\"padding: 6px 12px; background: #e3f2fd; color: #1976d2; border: 1px solid #bbdefb; border-radius: 20px; cursor: pointer; font-size: 12px; font-weight: 500; transition: all 0.2s ease;\">\\u{1F1EF}\\u{1F1F5} Japan</button>\n          <button class=\"quick-country-btn\" data-country=\"AU\" style=\"padding: 6px 12px; background: #e3f2fd; color: #1976d2; border: 1px solid #bbdefb; border-radius: 20px; cursor: pointer; font-size: 12px; font-weight: 500; transition: all 0.2s ease;\">\\u{1F1E6}\\u{1F1FA} Australia</button>\n        </div>\n        \n        <!-- Search Results Container - Hidden since we're not using real-time search -->\n        <div class=\"search-results-container\" id=\"search-results-container\" style=\"display: none;\">\n          <!-- Search results functionality removed for better user experience -->\n        </div>\n      </div>\n      \n      <div class=\"header-cities-chips-container\">\n        <button class=\"scroll-arrow scroll-left\" id=\"scroll-left\">\\u{2039}</button>\n        <div class=\"header-cities-chips-scroll\">\n          <div class=\"header-cities-chips\" id=\"cities-chips\">\n            ${$d16ff8997fd7b72f$var$savedCities.map((city)=>`\n              <button class=\"header-city-chip ${city === $d16ff8997fd7b72f$var$currentCity ? 'selected' : ''}\" data-city=\"${city}\">\n                ${city}\n                <span class=\"chip-close\" data-city=\"${city}\">\\xd7</span>\n              </button>\n            `).join('')}\n          </div>\n        </div>\n        <button class=\"scroll-arrow scroll-right\" id=\"scroll-right\">\\u{203A}</button>\n        <button class=\"country-button\" id=\"country-button\" style=\"display: none;\" title=\"Country Info - Double click or press 'N' to scroll to next country\">\\u{1F30D}</button>\n      </div>\n    </header>\n  `;\n    // Find or create header container\n    let headerContainer = document.querySelector('.header-searchbar-root');\n    if (!headerContainer) {\n        headerContainer = document.createElement('div');\n        headerContainer.className = 'header-searchbar-root';\n        document.body.insertBefore(headerContainer, document.body.firstChild);\n    }\n    headerContainer.innerHTML = headerHTML;\n    // Initialize event listeners\n    $d16ff8997fd7b72f$var$initializeHeaderEvents(onCitySelect);\n}\nfunction $d16ff8997fd7b72f$var$initializeHeaderEvents(onCitySelect) {\n    const searchInput = document.getElementById('city-search');\n    const searchBtn = document.getElementById('search-btn');\n    const citiesChips = document.getElementById('cities-chips');\n    const scrollLeft = document.getElementById('scroll-left');\n    const scrollRight = document.getElementById('scroll-right');\n    const countryButton = document.getElementById('country-button');\n    const searchWrapper = document.querySelector('.search-input-wrapper');\n    const countryDropdown = document.getElementById('country-dropdown-container');\n    let hoverHideTimeout;\n    const keepCountryText = true;\n    // Search functionality - completely clean and simple\n    if (searchInput) {\n        console.log('Found search input:', searchInput);\n        // Basic setup - ensure the input is editable\n        searchInput.setAttribute('autocomplete', 'off');\n        searchInput.setAttribute('spellcheck', 'false');\n        searchInput.setAttribute('type', 'text');\n        searchInput.setAttribute('inputmode', 'text');\n        // Remove any potential interference\n        searchInput.removeAttribute('disabled');\n        searchInput.removeAttribute('readonly');\n        searchInput.style.pointerEvents = 'auto';\n        searchInput.style.userSelect = 'auto';\n        searchInput.style.caretColor = '#000';\n        // Ensure the input is not inside a form that might interfere\n        if (searchInput.form) searchInput.form.removeAttribute('autocomplete');\n        // Only handle Enter key - no other interference\n        searchInput.addEventListener('keypress', (e)=>{\n            if (e.key === 'Enter') {\n                const city = searchInput.value.trim();\n                if (city) $d16ff8997fd7b72f$var$handleCitySelect(city, onCitySelect, true);\n            }\n        });\n        // Add input event listener for dropdown suggestions\n        searchInput.addEventListener('input', (e)=>{\n            const query = e.target.value.trim().toLowerCase();\n            if (query.length >= 2) $d16ff8997fd7b72f$var$showCountryDropdown(query, onCitySelect);\n            else if (query.length === 0) // Show popular countries when input is empty\n            $d16ff8997fd7b72f$var$showPopularCountries(onCitySelect);\n            else $d16ff8997fd7b72f$var$hideCountryDropdown();\n        });\n        // Show popular countries when input is focused\n        searchInput.addEventListener('focus', ()=>{\n            if (searchInput.value.trim().length === 0) $d16ff8997fd7b72f$var$showPopularCountries(onCitySelect);\n        });\n        // Hide dropdown when input loses focus (with small delay for click)\n        searchInput.addEventListener('blur', ()=>{\n            setTimeout(()=>$d16ff8997fd7b72f$var$hideCountryDropdown(), 200);\n        });\n        // Show dropdown on hover over input wrapper\n        if (searchWrapper && countryDropdown) {\n            searchWrapper.addEventListener('mouseenter', ()=>{\n                clearTimeout(hoverHideTimeout);\n                const current = searchInput.value.trim();\n                if (current.length >= 2) $d16ff8997fd7b72f$var$showCountryDropdown(current.toLowerCase(), onCitySelect, keepCountryText);\n                else $d16ff8997fd7b72f$var$showPopularCountries(onCitySelect, keepCountryText);\n            });\n            searchWrapper.addEventListener('mouseleave', ()=>{\n                hoverHideTimeout = setTimeout(()=>{\n                    if (!countryDropdown.matches(':hover')) $d16ff8997fd7b72f$var$hideCountryDropdown();\n                }, 150);\n            });\n            countryDropdown.addEventListener('mouseenter', ()=>{\n                clearTimeout(hoverHideTimeout);\n            });\n            countryDropdown.addEventListener('mouseleave', ()=>{\n                hoverHideTimeout = setTimeout(()=>{\n                    if (!searchWrapper.matches(':hover')) $d16ff8997fd7b72f$var$hideCountryDropdown();\n                }, 150);\n            });\n        }\n    // No other event listeners that could interfere with typing\n    // Removed auto-focus to avoid showing dropdown on view switches\n    }\n    if (searchBtn) searchBtn.addEventListener('click', ()=>{\n        const city = searchInput.value.trim();\n        if (city) {\n            // Show loading state\n            const originalContent = searchBtn.innerHTML;\n            searchBtn.innerHTML = '<span style=\"color: white !important; font-size: 16px !important;\">\\u23F3</span>';\n            searchBtn.style.background = '#666 !important';\n            searchBtn.disabled = true;\n            // Perform search\n            $d16ff8997fd7b72f$var$handleCitySelect(city, onCitySelect, true);\n            // Reset button after a short delay\n            setTimeout(()=>{\n                searchBtn.innerHTML = originalContent;\n                searchBtn.style.background = '#1976d2 !important';\n                searchBtn.disabled = false;\n            }, 2000);\n        }\n    });\n    // Add event listeners for quick country buttons\n    const quickCountryBtns = document.querySelectorAll('.quick-country-btn');\n    quickCountryBtns.forEach((btn)=>{\n        btn.addEventListener('click', ()=>{\n            const countryCode = btn.dataset.country;\n            const country = $d16ff8997fd7b72f$var$countryData.find((c)=>c.code === countryCode);\n            if (country) {\n                // Immediately show country name in input field\n                searchInput.value = country.name;\n                searchInput.placeholder = `Search cities in ${country.name}...`;\n                searchInput.focus();\n                // Show cities in that country\n                $d16ff8997fd7b72f$var$showCitiesInCountry(countryCode, country.name, onCitySelect);\n                // Add visual feedback\n                btn.style.background = '#1976d2';\n                btn.style.color = 'white';\n                btn.style.transform = 'scale(1.05)';\n                btn.style.boxShadow = '0 4px 12px rgba(25, 118, 210, 0.4)';\n                setTimeout(()=>{\n                    btn.style.background = '#e3f2fd';\n                    btn.style.color = '#1976d2';\n                    btn.style.transform = 'scale(1)';\n                    btn.style.boxShadow = 'none';\n                }, 1000);\n            }\n        });\n        // Add hover effects for quick country buttons\n        btn.addEventListener('mouseenter', ()=>{\n            btn.style.transform = 'translateY(-2px)';\n            btn.style.boxShadow = '0 4px 12px rgba(25, 118, 210, 0.3)';\n        });\n        btn.addEventListener('mouseleave', ()=>{\n            btn.style.transform = 'translateY(0)';\n            btn.style.boxShadow = 'none';\n        });\n    });\n    // Removed external main search and clear buttons in favor of the inline search button\n    // City chips functionality\n    if (citiesChips) citiesChips.addEventListener('click', (e)=>{\n        if (e.target.classList.contains('header-city-chip')) {\n            const city = e.target.dataset.city;\n            $d16ff8997fd7b72f$var$handleCitySelect(city, onCitySelect);\n        } else if (e.target.classList.contains('chip-close')) {\n            const city = e.target.dataset.city;\n            $d16ff8997fd7b72f$var$removeCity(city);\n        }\n    });\n    // Enhanced scroll functionality\n    if (scrollLeft) scrollLeft.addEventListener('click', ()=>{\n        console.log('Left scroll arrow clicked'); // Debug log\n        const scrollAmount = Math.min(200, citiesChips.scrollLeft);\n        citiesChips.scrollBy({\n            left: -scrollAmount,\n            behavior: 'smooth'\n        });\n        // Show country button when scroll arrow is pressed\n        $d16ff8997fd7b72f$var$showCountryButton();\n    });\n    if (scrollRight) scrollRight.addEventListener('click', ()=>{\n        console.log('Right scroll arrow clicked'); // Debug log\n        const maxScroll = citiesChips.scrollWidth - citiesChips.clientWidth;\n        const remainingScroll = maxScroll - citiesChips.scrollLeft;\n        const scrollAmount = Math.min(200, remainingScroll);\n        citiesChips.scrollBy({\n            left: scrollAmount,\n            behavior: 'smooth'\n        });\n        // Show country button when scroll arrow is pressed\n        $d16ff8997fd7b72f$var$showCountryButton();\n    });\n    // Add country button scrolling functionality\n    let countryButtonScrollTimeout;\n    if (countryButton) {\n        countryButton.addEventListener('click', ()=>{\n            $d16ff8997fd7b72f$var$handleCountryButtonClick();\n        });\n        // Add scroll to next country functionality\n        countryButton.addEventListener('dblclick', ()=>{\n            $d16ff8997fd7b72f$var$scrollToNextCountry();\n        });\n    }\n    // Update scroll arrows visibility\n    $d16ff8997fd7b72f$var$updateScrollArrows();\n    citiesChips.addEventListener('scroll', $d16ff8997fd7b72f$var$updateScrollArrows);\n    // Add keyboard support for scrolling\n    citiesChips.addEventListener('keydown', (e)=>{\n        if (e.key === 'ArrowLeft') {\n            e.preventDefault();\n            scrollLeft.click();\n        } else if (e.key === 'ArrowRight') {\n            e.preventDefault();\n            scrollRight.click();\n        } else if (e.key === 'Enter' && e.target.classList.contains('header-city-chip')) {\n            // Handle Enter key on city chips\n            const city = e.target.dataset.city;\n            if (city) $d16ff8997fd7b72f$var$handleCitySelect(city, onCitySelect);\n        }\n    });\n    // Add global keyboard support for country button scrolling\n    // REMOVED: This was interfering with typing in the search input\n    // document.addEventListener('keydown', (e) => {\n    //   if (e.key === 'n' || e.key === 'N') {\n    //     // Press 'N' to scroll to next country\n    //     e.preventDefault();\n    //     scrollToNextCountry();\n    //   }\n    // });\n    // Pagination controls - simplified since we're not using real-time search\n    const paginationPrev = document.getElementById('pagination-prev');\n    const paginationNext = document.getElementById('pagination-next');\n    // These are kept for potential future use but not actively used\n    if (paginationPrev) paginationPrev.addEventListener('click', ()=>{\n        console.log('Previous page clicked');\n    });\n    if (paginationNext) paginationNext.addEventListener('click', ()=>{\n        console.log('Next page clicked');\n    });\n    // Add touch/swipe support for mobile\n    let startX = 0;\n    let isDragging = false;\n    citiesChips.addEventListener('touchstart', (e)=>{\n        startX = e.touches[0].clientX;\n        isDragging = true;\n    });\n    citiesChips.addEventListener('touchmove', (e)=>{\n        if (!isDragging) return;\n        e.preventDefault();\n        const currentX = e.touches[0].clientX;\n        const diff = startX - currentX;\n        citiesChips.scrollLeft += diff;\n        startX = currentX;\n    });\n    citiesChips.addEventListener('touchend', ()=>{\n        isDragging = false;\n    });\n}\nfunction $d16ff8997fd7b72f$var$handleCitySelect(city, onCitySelect, isFromSearch = false) {\n    $d16ff8997fd7b72f$var$currentCity = city;\n    // Hide country button when a new city is selected\n    $d16ff8997fd7b72f$var$hideCountryButton();\n    // Add city to saved cities if not already there\n    if (!$d16ff8997fd7b72f$var$savedCities.includes(city) && !$d16ff8997fd7b72f$var$hiddenCities.includes(city)) {\n        if (isFromSearch) {\n            // If from search, add to bottom of hidden cities\n            $d16ff8997fd7b72f$var$hiddenCities.push(city);\n            $d16ff8997fd7b72f$var$updateCityChips(); // Update to show hidden chips\n        } else {\n            // If from chip click or next button, add to visible cities\n            $d16ff8997fd7b72f$var$savedCities.unshift(city);\n            if ($d16ff8997fd7b72f$var$savedCities.length > 10) $d16ff8997fd7b72f$var$savedCities.pop();\n            $d16ff8997fd7b72f$var$updateCityChips();\n        }\n    } else if ($d16ff8997fd7b72f$var$savedCities.includes(city)) {\n        // Move selected city to front\n        $d16ff8997fd7b72f$var$savedCities = $d16ff8997fd7b72f$var$savedCities.filter((c)=>c !== city);\n        $d16ff8997fd7b72f$var$savedCities.unshift(city);\n        $d16ff8997fd7b72f$var$updateCityChips();\n    }\n    // Clear search input only if it's not a country selection\n    const searchInput = document.getElementById('city-search');\n    if (searchInput && !searchInput.value.includes(' - ')) searchInput.value = '';\n    // Call the callback\n    if (onCitySelect) onCitySelect(city);\n}\nfunction $d16ff8997fd7b72f$var$removeCity(city) {\n    $d16ff8997fd7b72f$var$savedCities = $d16ff8997fd7b72f$var$savedCities.filter((c)=>c !== city);\n    $d16ff8997fd7b72f$var$hiddenCities = $d16ff8997fd7b72f$var$hiddenCities.filter((c)=>c !== city); // Also remove from hidden cities\n    if ($d16ff8997fd7b72f$var$currentCity === city) $d16ff8997fd7b72f$var$currentCity = $d16ff8997fd7b72f$var$savedCities[0] || 'Kyiv';\n    $d16ff8997fd7b72f$var$updateCityChips();\n}\nfunction $d16ff8997fd7b72f$var$updateCityChips() {\n    const citiesChips = document.getElementById('cities-chips');\n    if (citiesChips) {\n        // Combine visible cities and hidden cities (hidden ones are at the bottom and hidden)\n        const visibleChips = $d16ff8997fd7b72f$var$savedCities.map((city)=>`\n      <button class=\"header-city-chip ${city === $d16ff8997fd7b72f$var$currentCity ? 'selected' : ''}\" data-city=\"${city}\">\n        ${city}\n        <span class=\"chip-close\" data-city=\"${city}\">\\xd7</span>\n      </button>\n    `);\n        const hiddenChips = $d16ff8997fd7b72f$var$hiddenCities.map((city)=>`\n      <button class=\"header-city-chip hidden-chip ${city === $d16ff8997fd7b72f$var$currentCity ? 'selected' : ''}\" data-city=\"${city}\">\n        ${city}\n        <span class=\"chip-close\" data-city=\"${city}\">\\xd7</span>\n      </button>\n    `);\n        citiesChips.innerHTML = [\n            ...visibleChips,\n            ...hiddenChips\n        ].join('');\n    }\n}\nfunction $d16ff8997fd7b72f$var$updateScrollArrows() {\n    const citiesChips = document.getElementById('cities-chips');\n    const scrollLeft = document.getElementById('scroll-left');\n    const scrollRight = document.getElementById('scroll-right');\n    if (citiesChips && scrollLeft && scrollRight) {\n        const isAtStart = citiesChips.scrollLeft <= 5; // Small threshold for better UX\n        const isAtEnd = citiesChips.scrollLeft >= citiesChips.scrollWidth - citiesChips.clientWidth - 5;\n        const hasOverflow = citiesChips.scrollWidth > citiesChips.clientWidth;\n        // Show/hide arrows with smooth transitions\n        scrollLeft.style.display = isAtStart || !hasOverflow ? 'none' : 'flex';\n        scrollRight.style.display = isAtEnd || !hasOverflow ? 'none' : 'flex';\n        // Add visual feedback\n        scrollLeft.style.opacity = isAtStart ? '0.5' : '1';\n        scrollRight.style.opacity = isAtEnd ? '0.5' : '1';\n    }\n}\nfunction $d16ff8997fd7b72f$var$showCountryButton() {\n    const countryButton = document.getElementById('country-button');\n    if (countryButton) {\n        console.log('Showing country button'); // Debug log\n        // Force the button to be visible\n        countryButton.style.display = 'flex';\n        countryButton.style.visibility = 'visible';\n        countryButton.style.opacity = '1';\n        countryButton.style.transform = 'translateY(-50%) scale(1)';\n        countryButton.style.animation = 'fadeInScale 0.3s ease-out';\n        // Ensure it's above other elements\n        countryButton.style.zIndex = '1000';\n        // Update the title to include scrolling functionality hint\n        countryButton.title = 'Country Info - Double click or press \"N\" to scroll to next country';\n        console.log('Country button styles applied:', {\n            display: countryButton.style.display,\n            opacity: countryButton.style.opacity,\n            visibility: countryButton.style.visibility\n        });\n    // Country button will stay visible until next scroll arrow press or manual click\n    } else console.log('Country button not found'); // Debug log\n}\nfunction $d16ff8997fd7b72f$var$hideCountryButton() {\n    const countryButton = document.getElementById('country-button');\n    if (countryButton) {\n        console.log('Hiding country button'); // Debug log\n        countryButton.style.animation = 'fadeOutScale 0.3s ease-out';\n        countryButton.style.opacity = '0';\n        setTimeout(()=>{\n            countryButton.style.display = 'none';\n            countryButton.style.visibility = 'hidden';\n        }, 300);\n    }\n}\nfunction $d16ff8997fd7b72f$var$handleCountryButtonClick() {\n    // Get current city and show country information\n    const city = $d16ff8997fd7b72f$var$currentCity;\n    if (city) {\n        // You can implement country information display here\n        // For now, let's show a simple alert with the city name\n        alert(`Country information for ${city} would be displayed here.`);\n        // Hide the button after clicking\n        $d16ff8997fd7b72f$var$hideCountryButton();\n    }\n}\nfunction $d16ff8997fd7b72f$var$scrollToNextCountry() {\n    const citiesChips = document.getElementById('cities-chips');\n    const countryButton = document.getElementById('country-button');\n    if (!citiesChips) return;\n    // Add scrolling visual feedback to country button\n    if (countryButton) {\n        countryButton.classList.add('scrolling');\n        setTimeout(()=>{\n            countryButton.classList.remove('scrolling');\n        }, 1500);\n    }\n    // Get all city chips\n    const cityChips = citiesChips.querySelectorAll('.header-city-chip');\n    if (cityChips.length === 0) return;\n    // Find the currently selected city chip\n    const currentChip = citiesChips.querySelector('.header-city-chip.selected');\n    if (!currentChip) return;\n    // Find the next city chip\n    const currentIndex = Array.from(cityChips).indexOf(currentChip);\n    const nextIndex = (currentIndex + 1) % cityChips.length;\n    const nextChip = cityChips[nextIndex];\n    if (nextChip) {\n        // Scroll to the next city chip\n        nextChip.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n            inline: 'center'\n        });\n        // Select the next city\n        const nextCity = nextChip.dataset.city;\n        if (nextCity) // Simulate a click on the next city chip\n        setTimeout(()=>{\n            nextChip.click();\n        }, 300);\n    }\n}\nfunction $d16ff8997fd7b72f$export$730c8c29b498f630() {\n    console.log('Testing country button show function');\n    $d16ff8997fd7b72f$var$showCountryButton();\n}\n// Search and pagination functions - simplified since we're not using real-time search\nfunction $d16ff8997fd7b72f$var$performSearch(query, onCitySelect) {\n    // This function is kept for potential future use but not actively used\n    // since we removed real-time search functionality\n    console.log('Search function called with:', query);\n}\nfunction $d16ff8997fd7b72f$var$displaySearchResults() {\n    // This function is kept for potential future use but simplified\n    console.log('Display search results called');\n}\nfunction $d16ff8997fd7b72f$var$showSearchResults() {\n    const searchResultsContainer = document.getElementById('search-results-container');\n    if (searchResultsContainer) searchResultsContainer.style.display = 'block';\n}\nfunction $d16ff8997fd7b72f$var$hideSearchResults() {\n    const searchResultsContainer = document.getElementById('search-results-container');\n    if (searchResultsContainer) searchResultsContainer.style.display = 'none';\n}\n// Country dropdown functions\nfunction $d16ff8997fd7b72f$var$showCountryDropdown(query, onCitySelect, keepCountryText = true) {\n    const dropdownContainer = document.getElementById('country-dropdown-container');\n    if (!dropdownContainer) return;\n    const searchInput = document.getElementById('city-search');\n    // Filter countries and cities based on query\n    const suggestions = [];\n    $d16ff8997fd7b72f$var$countryData.forEach((country)=>{\n        // Check if country name matches\n        if (country.name.toLowerCase().includes(query)) suggestions.push({\n            type: 'country',\n            name: country.name,\n            code: country.code,\n            display: `${country.name} (${country.code})`\n        });\n        // Check if any cities match\n        country.cities.forEach((city)=>{\n            if (city.toLowerCase().includes(query)) suggestions.push({\n                type: 'city',\n                name: city,\n                country: country.name,\n                code: country.code,\n                display: `${city}, ${country.name}`\n            });\n        });\n    });\n    // Limit suggestions to 10 items\n    const limitedSuggestions = suggestions.slice(0, 10);\n    if (limitedSuggestions.length > 0) {\n        const suggestionsHTML = limitedSuggestions.map((item)=>`\n      <div class=\"dropdown-item\" data-type=\"${item.type}\" data-name=\"${item.name}\" data-country=\"${item.country || ''}\" data-code=\"${item.code}\" style=\"padding: 16px 20px; border-bottom: 1px solid #f0f0f0; cursor: pointer; transition: all 0.2s ease; background: white;\">\n        <div style=\"font-weight: 600; color: #333; font-size: 14px; margin-bottom: 4px;\">${item.display}</div>\n        <div style=\"font-size: 12px; color: #666; display: flex; align-items: center; gap: 8px;\">\n          <span style=\"padding: 4px 8px; background: ${item.type === 'city' ? '#e3f2fd' : '#f3e5f5'}; color: ${item.type === 'city' ? '#1976d2' : '#7b1fa2'}; border-radius: 12px; font-weight: 500; font-size: 11px;\">\n            ${item.type === 'city' ? \"\\uD83C\\uDFD9\\uFE0F City\" : \"\\uD83C\\uDF0D Country\"}\n          </span>\n        </div>\n      </div>\n    `).join('');\n        dropdownContainer.innerHTML = suggestionsHTML;\n        dropdownContainer.style.display = 'block';\n        // Add click event listeners to dropdown items\n        const dropdownItems = dropdownContainer.querySelectorAll('.dropdown-item');\n        dropdownItems.forEach((item)=>{\n            item.addEventListener('click', ()=>{\n                const name = item.dataset.name;\n                const country = item.dataset.country;\n                const code = item.dataset.code;\n                if (item.dataset.type === 'city') {\n                    // For cities, search with city name and keep country visible\n                    if (country) searchInput.value = `${country} - ${name}`;\n                    else searchInput.value = name;\n                    if (onCitySelect) $d16ff8997fd7b72f$var$handleCitySelect(name, onCitySelect, true);\n                } else {\n                    // For countries, show cities in that country and keep country visible\n                    searchInput.value = name;\n                    searchInput.placeholder = `Search cities in ${name}...`;\n                    // Keep the country text in input visible (do not trigger search here)\n                    searchInput.focus();\n                    $d16ff8997fd7b72f$var$showCitiesInCountry(code, name, onCitySelect);\n                }\n                $d16ff8997fd7b72f$var$hideCountryDropdown();\n            });\n            // Add hover effect\n            item.addEventListener('mouseenter', ()=>{\n                item.style.backgroundColor = '#f8f9fa';\n                item.style.transform = 'translateX(4px)';\n                item.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';\n                // Auto-select country after hover delay\n                if (item.dataset.type === 'country') {\n                    clearTimeout(item.hoverTimeout);\n                    // Add visual indicator for hover-to-select\n                    item.style.borderLeft = '4px solid #1976d2';\n                    item.style.paddingLeft = '16px';\n                    item.style.backgroundColor = '#e3f2fd';\n                    item.classList.add('country-hover');\n                    // Add auto-selection countdown indicator\n                    const countdownEl = document.createElement('div');\n                    countdownEl.className = 'auto-select-countdown';\n                    countdownEl.style.cssText = 'position: absolute; right: 16px; top: 50%; transform: translateY(-50%); background: #1976d2; color: white; border-radius: 50%; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; font-size: 10px; font-weight: bold; animation: countdown-pulse 0.5s ease-in-out infinite;';\n                    countdownEl.textContent = '3';\n                    item.appendChild(countdownEl);\n                    let countdown = 3;\n                    const countdownInterval = setInterval(()=>{\n                        countdown--;\n                        countdownEl.textContent = countdown;\n                        if (countdown <= 0) {\n                            clearInterval(countdownInterval);\n                            countdownEl.remove();\n                        }\n                    }, 167); // 500ms / 3 = ~167ms per countdown step\n                    item.hoverTimeout = setTimeout(()=>{\n                        const name = item.dataset.name;\n                        const code = item.dataset.code;\n                        // Add auto-selection animation\n                        item.classList.add('auto-select');\n                        // Auto-enter country name in input field\n                        searchInput.value = name;\n                        searchInput.placeholder = `Search cities in ${name}...`;\n                        searchInput.focus();\n                        // Show cities in that country\n                        $d16ff8997fd7b72f$var$showCitiesInCountry(code, name, onCitySelect);\n                        // Remove animation class after animation completes\n                        setTimeout(()=>{\n                            item.classList.remove('auto-select');\n                        }, 1000);\n                    }, 500); // 500ms delay for auto-selection\n                }\n            });\n            item.addEventListener('mouseleave', ()=>{\n                item.style.backgroundColor = 'white';\n                item.style.transform = 'translateX(0)';\n                item.style.boxShadow = 'none';\n                // Clear hover timeout when mouse leaves\n                if (item.hoverTimeout) clearTimeout(item.hoverTimeout);\n                // Reset visual indicators for hover-to-select\n                if (item.dataset.type === 'country') {\n                    item.style.borderLeft = 'none';\n                    item.style.paddingLeft = '20px';\n                    item.style.backgroundColor = 'white';\n                    item.classList.remove('country-hover');\n                    // Remove countdown element if it exists\n                    const countdownEl = item.querySelector('.auto-select-countdown');\n                    if (countdownEl) countdownEl.remove();\n                }\n            });\n        });\n    } else $d16ff8997fd7b72f$var$hideCountryDropdown();\n}\nfunction $d16ff8997fd7b72f$var$hideCountryDropdown() {\n    const dropdownContainer = document.getElementById('country-dropdown-container');\n    if (dropdownContainer) dropdownContainer.style.display = 'none';\n}\nfunction $d16ff8997fd7b72f$var$showPopularCountries(onCitySelect, keepCountryText = true) {\n    const dropdownContainer = document.getElementById('country-dropdown-container');\n    if (!dropdownContainer) return;\n    const searchInput = document.getElementById('city-search');\n    // Popular countries to show by default\n    const popularCountries = [\n        {\n            name: 'United States',\n            code: 'US',\n            cities: [\n                'New York',\n                'Los Angeles',\n                'Chicago'\n            ]\n        },\n        {\n            name: 'United Kingdom',\n            code: 'GB',\n            cities: [\n                'London',\n                'Birmingham',\n                'Manchester'\n            ]\n        },\n        {\n            name: 'Philippines',\n            code: 'PH',\n            cities: [\n                'Manila',\n                'Quezon City',\n                'Davao City'\n            ]\n        },\n        {\n            name: 'Japan',\n            code: 'JP',\n            cities: [\n                'Tokyo',\n                'Osaka',\n                'Nagoya'\n            ]\n        },\n        {\n            name: 'Australia',\n            code: 'AU',\n            cities: [\n                'Sydney',\n                'Melbourne',\n                'Brisbane'\n            ]\n        },\n        {\n            name: 'Canada',\n            code: 'CA',\n            cities: [\n                'Toronto',\n                'Montreal',\n                'Vancouver'\n            ]\n        },\n        {\n            name: 'Germany',\n            code: 'DE',\n            cities: [\n                'Berlin',\n                'Hamburg',\n                'Munich'\n            ]\n        },\n        {\n            name: 'France',\n            code: 'FR',\n            cities: [\n                'Paris',\n                'Marseille',\n                'Lyon'\n            ]\n        }\n    ];\n    const popularHTML = `\n    <div style=\"padding: 16px 20px; border-bottom: 2px solid #e3f2fd; background: #f8f9fa;\">\n      <div style=\"font-weight: 700; color: #1976d2; font-size: 14px; margin-bottom: 12px; text-align: center;\">\\u{1F30D} Popular Countries</div>\n    </div>\n    ${popularCountries.map((country)=>`\n      <div class=\"dropdown-item popular-country\" data-type=\"country\" data-name=\"${country.name}\" data-code=\"${country.code}\" style=\"padding: 16px 20px; border-bottom: 1px solid #f0f0f0; cursor: pointer; transition: all 0.2s ease; background: white;\">\n        <div style=\"font-weight: 600; color: #333; font-size: 14px; margin-bottom: 4px; display: flex; align-items: center; gap: 8px;\">\n          <span style=\"font-size: 18px;\">${$d16ff8997fd7b72f$var$getCountryFlag(country.code)}</span>\n          ${country.name} (${country.code})\n        </div>\n        <div style=\"font-size: 12px; color: #666; display: flex; align-items: center; gap: 8px;\">\n          <span style=\"padding: 4px 8px; background: #f3e5f5; color: #7b1fa2; border-radius: 12px; font-weight: 500; font-size: 11px;\">\n            \\u{1F30D} Country\n          </span>\n          <span style=\"color: #666;\">${country.cities.length} major cities</span>\n        </div>\n      </div>\n    `).join('')}\n  `;\n    dropdownContainer.innerHTML = popularHTML;\n    dropdownContainer.style.display = 'block';\n    // Add click event listeners to popular country items\n    const popularItems = dropdownContainer.querySelectorAll('.popular-country');\n    popularItems.forEach((item)=>{\n        item.addEventListener('click', ()=>{\n            const name = item.dataset.name;\n            const code = item.dataset.code;\n            // Keep country visible in input field\n            searchInput.value = name;\n            searchInput.focus();\n            // Show cities in that country\n            $d16ff8997fd7b72f$var$showCitiesInCountry(code, name, onCitySelect);\n        });\n        // Add hover effect\n        item.addEventListener('mouseenter', ()=>{\n            item.style.backgroundColor = '#f8f9fa';\n            item.style.transform = 'translateX(4px)';\n            item.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';\n            // Auto-select country after hover delay\n            clearTimeout(item.hoverTimeout);\n            // Add visual indicator for hover-to-select\n            item.style.borderLeft = '4px solid #1976d2';\n            item.style.paddingLeft = '16px';\n            item.style.backgroundColor = '#e3f2fd';\n            item.classList.add('country-hover');\n            // Add auto-selection countdown indicator\n            const countdownEl = document.createElement('div');\n            countdownEl.className = 'auto-select-countdown';\n            countdownEl.style.cssText = 'position: absolute; right: 16px; top: 50%; transform: translateY(-50%); background: #1976d2; color: white; border-radius: 50%; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; font-size: 10px; font-weight: bold; animation: countdown-pulse 0.5s ease-in-out infinite;';\n            countdownEl.textContent = '3';\n            item.appendChild(countdownEl);\n            let countdown = 3;\n            const countdownInterval = setInterval(()=>{\n                countdown--;\n                countdownEl.textContent = countdown;\n                if (countdown <= 0) {\n                    clearInterval(countdownInterval);\n                    countdownEl.remove();\n                }\n            }, 167); // 500ms / 3 = ~167ms per countdown step\n            item.hoverTimeout = setTimeout(()=>{\n                const name = item.dataset.name;\n                const code = item.dataset.code;\n                // Add auto-selection animation\n                item.classList.add('auto-select');\n                // Auto-enter country name in input field\n                searchInput.value = name;\n                searchInput.placeholder = `Search cities in ${name}...`;\n                searchInput.focus();\n                // Show cities in that country\n                $d16ff8997fd7b72f$var$showCitiesInCountry(code, name, onCitySelect);\n                // Remove animation class after animation completes\n                setTimeout(()=>{\n                    item.classList.remove('auto-select');\n                }, 1000);\n            }, 500); // 500ms delay for auto-selection\n        });\n        item.addEventListener('mouseleave', ()=>{\n            item.style.backgroundColor = 'white';\n            item.style.transform = 'translateX(0)';\n            item.style.boxShadow = 'none';\n            // Clear hover timeout when mouse leaves\n            if (item.hoverTimeout) clearTimeout(item.hoverTimeout);\n            // Reset visual indicators for hover-to-select\n            item.style.borderLeft = 'none';\n            item.style.paddingLeft = '20px';\n            item.style.backgroundColor = 'white';\n            item.classList.remove('country-hover');\n            // Remove countdown element if it exists\n            const countdownEl = item.querySelector('.auto-select-countdown');\n            if (countdownEl) countdownEl.remove();\n        });\n    });\n}\nfunction $d16ff8997fd7b72f$var$getCountryFlag(countryCode) {\n    const flagMap = {\n        'US': \"\\uD83C\\uDDFA\\uD83C\\uDDF8\",\n        'GB': \"\\uD83C\\uDDEC\\uD83C\\uDDE7\",\n        'PH': \"\\uD83C\\uDDF5\\uD83C\\uDDED\",\n        'JP': \"\\uD83C\\uDDEF\\uD83C\\uDDF5\",\n        'AU': \"\\uD83C\\uDDE6\\uD83C\\uDDFA\",\n        'CA': \"\\uD83C\\uDDE8\\uD83C\\uDDE6\",\n        'DE': \"\\uD83C\\uDDE9\\uD83C\\uDDEA\",\n        'FR': \"\\uD83C\\uDDEB\\uD83C\\uDDF7\",\n        'IT': \"\\uD83C\\uDDEE\\uD83C\\uDDF9\",\n        'ES': \"\\uD83C\\uDDEA\\uD83C\\uDDF8\",\n        'NL': \"\\uD83C\\uDDF3\\uD83C\\uDDF1\",\n        'SE': \"\\uD83C\\uDDF8\\uD83C\\uDDEA\",\n        'NO': \"\\uD83C\\uDDF3\\uD83C\\uDDF4\",\n        'DK': \"\\uD83C\\uDDE9\\uD83C\\uDDF0\",\n        'FI': \"\\uD83C\\uDDEB\\uD83C\\uDDEE\",\n        'CH': \"\\uD83C\\uDDE8\\uD83C\\uDDED\",\n        'AT': \"\\uD83C\\uDDE6\\uD83C\\uDDF9\",\n        'BE': \"\\uD83C\\uDDE7\\uD83C\\uDDEA\"\n    };\n    return flagMap[countryCode] || \"\\uD83C\\uDF0D\";\n}\nfunction $d16ff8997fd7b72f$var$showCitiesInCountry(countryCode, countryName, onCitySelect) {\n    const country = $d16ff8997fd7b72f$var$countryData.find((c)=>c.code === countryCode);\n    if (!country) return;\n    const dropdownContainer = document.getElementById('country-dropdown-container');\n    if (!dropdownContainer) return;\n    const searchInput = document.getElementById('city-search');\n    const citiesHTML = `\n    <div style=\"padding: 16px 20px; border-bottom: 2px solid #e3f2fd; background: #f8f9fa;\">\n      <div style=\"font-weight: 700; color: #1976d2; font-size: 14px; margin-bottom: 12px; text-align: center; display: flex; align-items: center; justify-content: space-between;\">\n        <span>\\u{1F3D9}\\u{FE0F} Cities in ${countryName}</span>\n        <button class=\"back-to-countries\" style=\"padding: 4px 8px; background: #1976d2; color: white; border: none; border-radius: 6px; font-size: 11px; cursor: pointer; font-weight: 500;\">\\u{2190} Back</button>\n      </div>\n    </div>\n    ${country.cities.map((city)=>`\n      <div class=\"dropdown-item\" data-type=\"city\" data-name=\"${city}\" data-country=\"${countryName}\" data-code=\"${countryCode}\" style=\"padding: 16px 20px; border-bottom: 1px solid #f0f0f0; cursor: pointer; transition: all 0.2s ease; background: white;\">\n        <div style=\"font-weight: 600; color: #333; font-size: 14px; margin-bottom: 4px;\">${city}</div>\n        <div style=\"font-size: 12px; color: #666; display: flex; align-items: center; gap: 8px;\">\n          <span style=\"padding: 4px 8px; background: #e3f2fd; color: #1976d2; border-radius: 12px; font-weight: 500; font-size: 11px;\">\n            \\u{1F3D9}\\u{FE0F} City in ${countryName}\n          </span>\n        </div>\n      </div>\n    `).join('')}\n  `;\n    dropdownContainer.innerHTML = citiesHTML;\n    dropdownContainer.style.display = 'block';\n    // Add click event listener for back button\n    const backButton = dropdownContainer.querySelector('.back-to-countries');\n    if (backButton) backButton.addEventListener('click', ()=>{\n        $d16ff8997fd7b72f$var$showPopularCountries(onCitySelect);\n    });\n    // Add click event listeners\n    const dropdownItems = dropdownContainer.querySelectorAll('.dropdown-item');\n    dropdownItems.forEach((item)=>{\n        item.addEventListener('click', ()=>{\n            const name = item.dataset.name;\n            const country = item.dataset.country;\n            // Keep country visible in input field\n            searchInput.value = `${country} - ${name}`;\n            if (onCitySelect) $d16ff8997fd7b72f$var$handleCitySelect(name, onCitySelect, true);\n            $d16ff8997fd7b72f$var$hideCountryDropdown();\n        });\n        // Add hover effect\n        item.addEventListener('mouseenter', ()=>{\n            item.style.backgroundColor = '#f8f9fa';\n            item.style.transform = 'translateX(4px)';\n            item.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';\n        });\n        item.addEventListener('mouseleave', ()=>{\n            item.style.backgroundColor = 'white';\n            item.style.transform = 'translateX(0)';\n            item.style.boxShadow = 'none';\n        });\n    });\n}\n\n\n// OpenWeatherMap API logic\n// Replace 'YOUR_API_KEY' with your actual OpenWeatherMap API key\nconst $56ca17bb174b0ce3$var$API_KEY = 'ccac33176c75e16a3b3c977b0ca6365c';\nconst $56ca17bb174b0ce3$var$BASE_URL = 'https://api.openweathermap.org/data/2.5/';\nasync function $56ca17bb174b0ce3$export$59ee9e79053c2d96(cityName) {\n    const url = `${$56ca17bb174b0ce3$var$BASE_URL}weather?q=${encodeURIComponent(cityName)}&appid=${$56ca17bb174b0ce3$var$API_KEY}&units=metric`;\n    const response = await fetch(url);\n    if (!response.ok) throw new Error('City not found');\n    return response.json();\n}\nasync function $56ca17bb174b0ce3$export$27118674b1c306e(cityName) {\n    const url = `${$56ca17bb174b0ce3$var$BASE_URL}forecast?q=${encodeURIComponent(cityName)}&appid=${$56ca17bb174b0ce3$var$API_KEY}&units=metric`;\n    const response = await fetch(url);\n    if (!response.ok) throw new Error('City not found');\n    return response.json();\n}\n// Pixabay API logic\nconst $56ca17bb174b0ce3$var$PIXABAY_API_KEY = '51325887-dff4e6da46d9f05f769d357a1'; // <-- Replace with your Pixabay API key\nconst $56ca17bb174b0ce3$var$PIXABAY_BASE_URL = 'https://pixabay.com/api/';\nasync function $56ca17bb174b0ce3$export$f13749ff409e4cfa(cityName, weatherDesc, countryName) {\n    // Try multiple search strategies for better results\n    const searchQueries = [\n        // Primary search with country and weather\n        `${cityName} ${countryName || ''} ${weatherDesc || ''} cityscape skyline`.trim(),\n        // City with country\n        `${cityName} ${countryName || ''} cityscape skyline`.trim(),\n        // Just city with weather\n        `${cityName} ${weatherDesc || ''} cityscape`.trim(),\n        // Simple city search\n        `${cityName} cityscape skyline`,\n        // Fallback to just city\n        `${cityName} city`\n    ];\n    for (const query of searchQueries){\n        if (!query.trim()) continue;\n        const url = `${$56ca17bb174b0ce3$var$PIXABAY_BASE_URL}?key=${$56ca17bb174b0ce3$var$PIXABAY_API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&category=places&per_page=5&safesearch=true&min_width=1200&min_height=800`;\n        try {\n            const response = await fetch(url);\n            if (!response.ok) continue;\n            const data = await response.json();\n            if (data.hits && data.hits.length > 0) {\n                // Prefer high-quality images\n                const bestImage = data.hits.find((hit)=>hit.largeImageURL && hit.imageWidth >= 1200 && hit.imageHeight >= 800) || data.hits[0];\n                return bestImage.largeImageURL || bestImage.webformatURL;\n            }\n        } catch (e) {\n            continue;\n        }\n    }\n    return null;\n}\n\n\n// Weather Icon Mapping System\n// Maps OpenWeatherMap weather codes to realistic weather icons\nconst $f746a5b36ce367c2$export$6eec93b7f9719fb8 = {\n    // Clear sky\n    800: {\n        day: \"\\u2600\\uFE0F\",\n        night: \"\\uD83C\\uDF19\",\n        description: 'clear sky'\n    },\n    // Clouds\n    801: {\n        day: \"\\uD83C\\uDF24\\uFE0F\",\n        night: \"\\uD83C\\uDF24\\uFE0F\",\n        description: 'few clouds'\n    },\n    802: {\n        day: \"\\u26C5\",\n        night: \"\\u26C5\",\n        description: 'scattered clouds'\n    },\n    803: {\n        day: \"\\u2601\\uFE0F\",\n        night: \"\\u2601\\uFE0F\",\n        description: 'broken clouds'\n    },\n    804: {\n        day: \"\\u2601\\uFE0F\",\n        night: \"\\u2601\\uFE0F\",\n        description: 'overcast clouds'\n    },\n    // Rain\n    200: {\n        day: \"\\u26C8\\uFE0F\",\n        night: \"\\u26C8\\uFE0F\",\n        description: 'thunderstorm with light rain'\n    },\n    201: {\n        day: \"\\u26C8\\uFE0F\",\n        night: \"\\u26C8\\uFE0F\",\n        description: 'thunderstorm with rain'\n    },\n    202: {\n        day: \"\\u26C8\\uFE0F\",\n        night: \"\\u26C8\\uFE0F\",\n        description: 'thunderstorm with heavy rain'\n    },\n    210: {\n        day: \"\\u26A1\",\n        night: \"\\u26A1\",\n        description: 'light thunderstorm'\n    },\n    211: {\n        day: \"\\u26A1\",\n        night: \"\\u26A1\",\n        description: 'thunderstorm'\n    },\n    212: {\n        day: \"\\u26A1\",\n        night: \"\\u26A1\",\n        description: 'heavy thunderstorm'\n    },\n    221: {\n        day: \"\\u26A1\",\n        night: \"\\u26A1\",\n        description: 'ragged thunderstorm'\n    },\n    230: {\n        day: \"\\u26C8\\uFE0F\",\n        night: \"\\u26C8\\uFE0F\",\n        description: 'thunderstorm with light drizzle'\n    },\n    231: {\n        day: \"\\u26C8\\uFE0F\",\n        night: \"\\u26C8\\uFE0F\",\n        description: 'thunderstorm with drizzle'\n    },\n    232: {\n        day: \"\\u26C8\\uFE0F\",\n        night: \"\\u26C8\\uFE0F\",\n        description: 'thunderstorm with heavy drizzle'\n    },\n    // Drizzle\n    300: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'light intensity drizzle'\n    },\n    301: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'drizzle'\n    },\n    302: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'heavy intensity drizzle'\n    },\n    310: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'light intensity drizzle rain'\n    },\n    311: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'drizzle rain'\n    },\n    312: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'heavy intensity drizzle rain'\n    },\n    313: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'shower rain and drizzle'\n    },\n    314: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'heavy shower rain and drizzle'\n    },\n    321: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'shower drizzle'\n    },\n    // Rain\n    500: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'light rain'\n    },\n    501: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'moderate rain'\n    },\n    502: {\n        day: \"\\uD83C\\uDF27\\uFE0F\",\n        night: \"\\uD83C\\uDF27\\uFE0F\",\n        description: 'heavy intensity rain'\n    },\n    503: {\n        day: \"\\uD83C\\uDF27\\uFE0F\",\n        night: \"\\uD83C\\uDF27\\uFE0F\",\n        description: 'very heavy rain'\n    },\n    504: {\n        day: \"\\uD83C\\uDF27\\uFE0F\",\n        night: \"\\uD83C\\uDF27\\uFE0F\",\n        description: 'extreme rain'\n    },\n    511: {\n        day: \"\\uD83C\\uDF28\\uFE0F\",\n        night: \"\\uD83C\\uDF28\\uFE0F\",\n        description: 'freezing rain'\n    },\n    520: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'light intensity shower rain'\n    },\n    521: {\n        day: \"\\uD83C\\uDF26\\uFE0F\",\n        night: \"\\uD83C\\uDF26\\uFE0F\",\n        description: 'shower rain'\n    },\n    522: {\n        day: \"\\uD83C\\uDF27\\uFE0F\",\n        night: \"\\uD83C\\uDF27\\uFE0F\",\n        description: 'heavy intensity shower rain'\n    },\n    531: {\n        day: \"\\uD83C\\uDF27\\uFE0F\",\n        night: \"\\uD83C\\uDF27\\uFE0F\",\n        description: 'ragged shower rain'\n    },\n    // Snow\n    600: {\n        day: \"\\uD83C\\uDF28\\uFE0F\",\n        night: \"\\uD83C\\uDF28\\uFE0F\",\n        description: 'light snow'\n    },\n    601: {\n        day: \"\\uD83C\\uDF28\\uFE0F\",\n        night: \"\\uD83C\\uDF28\\uFE0F\",\n        description: 'snow'\n    },\n    602: {\n        day: \"\\u2744\\uFE0F\",\n        night: \"\\u2744\\uFE0F\",\n        description: 'heavy snow'\n    },\n    611: {\n        day: \"\\uD83C\\uDF28\\uFE0F\",\n        night: \"\\uD83C\\uDF28\\uFE0F\",\n        description: 'sleet'\n    },\n    612: {\n        day: \"\\uD83C\\uDF28\\uFE0F\",\n        night: \"\\uD83C\\uDF28\\uFE0F\",\n        description: 'light shower sleet'\n    },\n    613: {\n        day: \"\\uD83C\\uDF28\\uFE0F\",\n        night: \"\\uD83C\\uDF28\\uFE0F\",\n        description: 'shower sleet'\n    },\n    615: {\n        day: \"\\uD83C\\uDF28\\uFE0F\",\n        night: \"\\uD83C\\uDF28\\uFE0F\",\n        description: 'light rain and snow'\n    },\n    616: {\n        day: \"\\uD83C\\uDF28\\uFE0F\",\n        night: \"\\uD83C\\uDF28\\uFE0F\",\n        description: 'rain and snow'\n    },\n    620: {\n        day: \"\\uD83C\\uDF28\\uFE0F\",\n        night: \"\\uD83C\\uDF28\\uFE0F\",\n        description: 'light shower snow'\n    },\n    621: {\n        day: \"\\uD83C\\uDF28\\uFE0F\",\n        night: \"\\uD83C\\uDF28\\uFE0F\",\n        description: 'shower snow'\n    },\n    622: {\n        day: \"\\u2744\\uFE0F\",\n        night: \"\\u2744\\uFE0F\",\n        description: 'heavy shower snow'\n    },\n    // Atmosphere\n    701: {\n        day: \"\\uD83C\\uDF2B\\uFE0F\",\n        night: \"\\uD83C\\uDF2B\\uFE0F\",\n        description: 'mist'\n    },\n    711: {\n        day: \"\\uD83C\\uDF2B\\uFE0F\",\n        night: \"\\uD83C\\uDF2B\\uFE0F\",\n        description: 'smoke'\n    },\n    721: {\n        day: \"\\uD83C\\uDF2B\\uFE0F\",\n        night: \"\\uD83C\\uDF2B\\uFE0F\",\n        description: 'haze'\n    },\n    731: {\n        day: \"\\uD83C\\uDF2B\\uFE0F\",\n        night: \"\\uD83C\\uDF2B\\uFE0F\",\n        description: 'sand/dust whirls'\n    },\n    741: {\n        day: \"\\uD83C\\uDF2B\\uFE0F\",\n        night: \"\\uD83C\\uDF2B\\uFE0F\",\n        description: 'fog'\n    },\n    751: {\n        day: \"\\uD83C\\uDF2B\\uFE0F\",\n        night: \"\\uD83C\\uDF2B\\uFE0F\",\n        description: 'sand'\n    },\n    761: {\n        day: \"\\uD83C\\uDF2B\\uFE0F\",\n        night: \"\\uD83C\\uDF2B\\uFE0F\",\n        description: 'dust'\n    },\n    762: {\n        day: \"\\uD83C\\uDF2B\\uFE0F\",\n        night: \"\\uD83C\\uDF2B\\uFE0F\",\n        description: 'volcanic ash'\n    },\n    771: {\n        day: \"\\uD83D\\uDCA8\",\n        night: \"\\uD83D\\uDCA8\",\n        description: 'squalls'\n    },\n    781: {\n        day: \"\\uD83C\\uDF2A\\uFE0F\",\n        night: \"\\uD83C\\uDF2A\\uFE0F\",\n        description: 'tornado'\n    }\n};\nfunction $f746a5b36ce367c2$export$6c248343c6ec5612(weatherCode, isDay = true) {\n    const weather = $f746a5b36ce367c2$export$6eec93b7f9719fb8[weatherCode];\n    if (!weather) return \"\\uD83C\\uDF24\\uFE0F\"; // Default icon\n    // Use day icon for day, night icon for night\n    return isDay ? weather.day : weather.night;\n}\nfunction $f746a5b36ce367c2$export$73a8fc0c6456a7ec(weatherCode) {\n    const weather = $f746a5b36ce367c2$export$6eec93b7f9719fb8[weatherCode];\n    return weather ? weather.description : 'unknown';\n}\nfunction $f746a5b36ce367c2$export$f319bb611cd8b108(weatherCode, isDay = true, temperature = null) {\n    const baseIcon = $f746a5b36ce367c2$export$6c248343c6ec5612(weatherCode, isDay);\n    // Add temperature-based enhancements\n    if (temperature !== null) {\n        if (temperature < 0) {\n            // Cold weather enhancements\n            if (weatherCode >= 200 && weatherCode < 600) return \"\\uD83C\\uDF28\\uFE0F\"; // Snow for cold rain\n        } else if (temperature > 30) {\n            // Hot weather enhancements\n            if (weatherCode === 800) return \"\\uD83D\\uDD25\"; // Hot sun\n        }\n    }\n    return baseIcon;\n}\nfunction $f746a5b36ce367c2$export$63730142efd75083(weatherCode, hour) {\n    const isDay = hour >= 6 && hour <= 18;\n    return $f746a5b36ce367c2$export$6c248343c6ec5612(weatherCode, isDay);\n}\nfunction $f746a5b36ce367c2$export$6aaf74e9f2e467ff(weatherCode, intensity = 'normal') {\n    const baseIcon = $f746a5b36ce367c2$export$6c248343c6ec5612(weatherCode, true);\n    switch(intensity){\n        case 'light':\n            return baseIcon + \"\\uD83D\\uDCA7\";\n        case 'moderate':\n            return baseIcon + \"\\uD83D\\uDCA7\\uD83D\\uDCA7\";\n        case 'heavy':\n            return baseIcon + \"\\uD83D\\uDCA7\\uD83D\\uDCA7\\uD83D\\uDCA7\";\n        default:\n            return baseIcon;\n    }\n}\n\n\nfunction $b811239e8917e3e0$export$6a7f938a907484cc(weatherData) {\n    if (!weatherData) return '<div class=\"error\">No weather data available.</div>';\n    const { name: name, main: main, weather: weather, sys: sys } = weatherData;\n    const temp = Math.round(main.temp);\n    const min = Math.round(main.temp_min);\n    const max = Math.round(main.temp_max);\n    const desc = weather[0].description;\n    const weatherCode = weather[0].id;\n    const icon = (0, $f746a5b36ce367c2$export$6c248343c6ec5612)(weatherCode, true); // Use realistic weather icon\n    const country = sys && sys.country ? sys.country : '';\n    // Helper function to get country name from code\n    const countryNames = {\n        'TH': 'Thailand',\n        'US': 'United States',\n        'GB': 'United Kingdom',\n        'FR': 'France',\n        'UA': 'Ukraine',\n        'PL': 'Poland',\n        'AU': 'Australia',\n        'CA': 'Canada',\n        'DE': 'Germany',\n        'IT': 'Italy',\n        'ES': 'Spain',\n        'JP': 'Japan',\n        'CN': 'China',\n        'IN': 'India',\n        'BR': 'Brazil',\n        'MX': 'Mexico',\n        'RU': 'Russia',\n        'KR': 'South Korea',\n        'NL': 'Netherlands',\n        'SE': 'Sweden',\n        'NO': 'Norway',\n        'DK': 'Denmark',\n        'FI': 'Finland',\n        'CH': 'Switzerland',\n        'AT': 'Austria',\n        'BE': 'Belgium',\n        'PT': 'Portugal',\n        'GR': 'Greece',\n        'IE': 'Ireland',\n        'NZ': 'New Zealand'\n    };\n    const countryName = countryNames[country] || country;\n    const isMobile = window.innerWidth <= 768;\n    return `\n    <section class=\"today-weather-card\">\n      <div class=\"weather-card-overlay\">\n        <div class=\"weather-card-header\">\n          <div style=\"display:flex;flex-direction:column;align-items:flex-start;gap:4px;\">\n            <span class=\"weather-city\">${name}</span>\n            ${countryName ? `<span style=\"font-size:${isMobile ? '0.85rem' : '0.95rem'};color:#ffd54f;font-weight:500;opacity:0.9;letter-spacing:0.3px;\">${countryName}</span>` : ''}\n          </div>\n          <span class=\"weather-icon\" style=\"font-size: 3rem; display: flex; align-items: center; justify-content: center;\">${icon}</span>\n        </div>\n        <div class=\"weather-temp-main\">${temp}&deg;C</div>\n        <div class=\"weather-minmax\">min <b>${min}&deg;</b> &nbsp; max <b>${max}&deg;</b></div>\n        <div class=\"weather-desc\">${desc}</div>\n      </div>\n    </section>\n  `;\n}\n\n\n\nfunction $8705a20b2c226359$export$d95ef65713a50ea7(forecastData, allExpanded = false, showChart = false, cityName = '', countryName = '') {\n    if (!forecastData || !forecastData.list) return '<div class=\"error\">No forecast data available.</div>';\n    // Group forecast by day\n    const days = {};\n    forecastData.list.forEach((item)=>{\n        const date = item.dt_txt.split(' ')[0];\n        if (!days[date]) days[date] = [];\n        days[date].push(item);\n    });\n    // Get one forecast per day (e.g., 12:00)\n    let daily = Object.keys(days).map((date)=>{\n        const noon = days[date].find((item)=>item.dt_txt.includes('12:00:00')) || days[date][0];\n        // Find min/max for the day\n        const temps = days[date].map((i)=>i.main.temp);\n        const min = Math.round(Math.min(...temps));\n        const max = Math.round(Math.max(...temps));\n        return {\n            date: date,\n            ...noon,\n            min: min,\n            max: max,\n            all: days[date]\n        };\n    }).slice(0, 5);\n    // Sort so Sunday is always first\n    daily = daily.sort((a, b)=>{\n        const getDayIdx = (date)=>new Date(date).getDay();\n        const aIdx = getDayIdx(a.date);\n        const bIdx = getDayIdx(b.date);\n        if (aIdx === 0 && bIdx !== 0) return -1;\n        if (aIdx !== 0 && bIdx === 0) return 1;\n        return aIdx - bIdx;\n    });\n    const dayNames = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ];\n    // Create location header\n    const locationHeader = cityName ? `\n    <div class=\"forecast-location-header\" style=\"text-align:center; margin-bottom:24px; padding:0 16px;\">\n      <div class=\"forecast-city-name\" style=\"font-size:1.4rem; font-weight:700; color:#fff; margin-bottom:4px; letter-spacing:0.5px;\">${cityName}</div>\n      ${countryName ? `<div class=\"forecast-country-name\" style=\"font-size:1rem; color:#ffd54f; font-weight:500; opacity:0.9; letter-spacing:0.3px;\">${countryName}</div>` : ''}\n    </div>\n  ` : '';\n    return `\n    <section class=\"five-days-forecast\">\n      ${locationHeader}\n      <div class=\"forecast-cards\">\n        ${daily.map((day, idx)=>{\n        const temp = Math.round(day.main.temp);\n        const desc = day.weather[0].description;\n        const weatherCode = day.weather[0].id;\n        const icon = (0, $f746a5b36ce367c2$export$6c248343c6ec5612)(weatherCode, true); // Use realistic weather icon\n        const isExpanded = allExpanded;\n        // Get day name and highlight if today\n        const d = new Date(day.date);\n        const dayName = dayNames[d.getDay()];\n        const isToday = d.toDateString() === new Date().toDateString();\n        return `\n            <div class=\"forecast-card\" data-date=\"${day.date}\" data-expanded=\"${isExpanded}\">\n              <div class=\"forecast-day${isToday ? ' today' : ''}\">${dayName}</div>\n              <div class=\"forecast-date\">${day.date.slice(8, 10)} ${d.toLocaleString('default', {\n            month: 'short'\n        })}</div>\n              <span style=\"font-size: 2.5rem; display: flex; align-items: center; justify-content: center; margin-bottom: 16px;\">${icon}</span>\n              <div class=\"forecast-minmax\">min <span>${day.min}&deg;</span><span class=\"minmax-divider\"></span>max <span>${day.max}&deg;</span></div>\n              <div class=\"forecast-desc\">${desc}</div>\n              <button class=\"more-info-btn\" data-date=\"${day.date}\">${isExpanded ? 'Hide Info' : 'more info'}</button>\n              ${isExpanded ? `<div class=\"more-info-section\" style=\"align-self: flex-start;\">${day.all.slice(0, 7).map((item)=>`\n                <div class='more-info-mini-card'>\n                  <div class='mini-time'>${item.dt_txt.slice(11, 16)}</div>\n                  <span style=\"font-size: 1rem;\">${(0, $f746a5b36ce367c2$export$6c248343c6ec5612)(item.weather[0].id, true)}</span>\n                  <div class='mini-temp'>${Math.round(item.main.temp)}&deg;</div>\n                  <div class='mini-detail'>\\u{1F321}\\u{FE0F} ${item.main.pressure} mm</div>\n                  <div class='mini-detail'>\\u{1F4A7} ${item.main.humidity}%</div>\n                  <div class='mini-detail'>\\u{1F4A8} ${Math.round(item.wind.speed)} m/s</div>\n                </div>\n              `).join('')}</div>` : ''}\n            </div>\n          `;\n    }).join('')}\n      </div>\n      <div class=\"show-chart-btn-container\">\n        <button id=\"show-chart-btn\" class=\"nav-btn\">\n          <span class=\"chart-btn-text\">${showChart ? 'Hide Chart' : 'Show Chart'}</span>\n          <span class=\"chart-btn-icon\">${showChart ? \"\\uD83D\\uDCC9\" : \"\\uD83D\\uDCC8\"}</span>\n        </button>\n      </div>\n    </section> \n  `;\n}\n\n\n// Quotes logic\nconst $41971cb266c44f05$var$quotes = [\n    {\n        text: \"Wherever you go, no matter what the weather, always bring your own sunshine.\",\n        author: \"Anthony J. D'Angelo\"\n    },\n    {\n        text: \"Sunshine is delicious, rain is refreshing, wind braces us up, snow is exhilarating.\",\n        author: \"John Ruskin\"\n    },\n    {\n        text: \"There is no such thing as bad weather, only different kinds of good weather.\",\n        author: \"John Ruskin\"\n    },\n    {\n        text: \"Some people feel the rain. Others just get wet.\",\n        author: \"Bob Marley\"\n    },\n    {\n        text: \"To appreciate the beauty of a snowflake it is necessary to stand out in the cold.\",\n        author: \"Aristotle\"\n    },\n    {\n        text: \"Climate is what we expect, weather is what we get.\",\n        author: \"Mark Twain\"\n    },\n    {\n        text: \"The sound of the rain needs no translation.\",\n        author: \"Alan Watts\"\n    }\n];\nfunction $41971cb266c44f05$export$b8de66447d69562a() {\n    const q = $41971cb266c44f05$var$quotes[Math.floor(Math.random() * $41971cb266c44f05$var$quotes.length)];\n    return `<div class=\"quote-section\">\\u{201C}${q.text}\\u{201D}<br><span class=\"quote-author\">\\u{2014} ${q.author}</span></div>`;\n}\n\n\n// Chart logic for 5-day forecast\n/**\n * Render a professional SVG line chart for 5-day forecast temperatures\n * @param {Object} forecastData - Data from OpenWeatherMap 5-day forecast API   \n * @returns {string} HTML string with SVG chart\n */ function $3a18ccca1ddc6901$export$56d61a8703f2b62d(forecastData) {\n    if (!forecastData || !forecastData.list) return '';\n    // Group forecast by day and get 12:00 temp\n    const days = {};\n    forecastData.list.forEach((item)=>{\n        const date = item.dt_txt.split(' ')[0];\n        if (!days[date]) days[date] = [];\n        days[date].push(item);\n    });\n    // Use up to 5 days if available, fallback to as many as possible\n    const daily = Object.keys(days).map((date)=>{\n        const noon = days[date].find((item)=>item.dt_txt.includes('12:00:00')) || days[date][0];\n        return {\n            date: date,\n            temp: Math.round(noon.main.temp),\n            humidity: noon.main.humidity,\n            wind: Math.round(noon.wind.speed * 10) / 10,\n            pressure: Math.round(noon.main.pressure / 10) * 10\n        };\n    }).slice(0, 5);\n    if (daily.length < 2) return `<div class='forecast-chart-section' style='background:linear-gradient(135deg,#1a2332 0%,#26334d 50%,#202a3a 100%);border-radius:20px;padding:40px 32px;box-shadow:0 12px 40px rgba(0,0,0,0.25),0 6px 20px rgba(0,0,0,0.2);max-width:720px;width:100%;margin:32px auto 0 auto;display:flex;flex-direction:column;align-items:center;justify-content:center;border:1px solid rgba(255,255,255,0.08);backdrop-filter:blur(10px);'>\n      <div style='font-size:1.25rem;font-weight:700;color:#fff;letter-spacing:0.8px;text-align:center;margin-bottom:12px;font-family:\"Inter\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,sans-serif;text-shadow:0 2px 4px rgba(0,0,0,0.3);'>5-Day Weather Analytics</div>\n      <div style='color:#fff;opacity:0.75;font-size:1.1rem;text-align:center;margin:32px 0;font-weight:500;letter-spacing:0.3px;'>Insufficient data to generate comprehensive chart.</div>\n    </div>`;\n    // Responsive chart dimensions\n    const isMobile = window.innerWidth <= 768;\n    const w = isMobile ? 360 : 720;\n    const h = isMobile ? 280 : 400;\n    const pad = isMobile ? 50 : 70;\n    // All data arrays\n    const temps = daily.map((d)=>d.temp);\n    const humidities = daily.map((d)=>d.humidity);\n    const winds = daily.map((d)=>d.wind);\n    const pressures = daily.map((d)=>d.pressure);\n    // Find global min/max for y-axis with better scaling\n    const allY = temps.concat(humidities, winds, pressures);\n    const minY = Math.floor(Math.min(...allY) * 0.95);\n    const maxY = Math.ceil(Math.max(...allY) * 1.05);\n    // Map all values to y coordinate\n    function mapY(val) {\n        return pad + (maxY - val) / (maxY - minY) * (h - 2 * pad);\n    }\n    // Map x coordinate\n    function mapX(i) {\n        return pad + i * ((w - 2 * pad) / (daily.length - 1));\n    }\n    // Points for each series\n    const tempPoints = temps.map((temp, i)=>({\n            x: mapX(i),\n            y: mapY(temp)\n        }));\n    const humidityPoints = humidities.map((humidity, i)=>({\n            x: mapX(i),\n            y: mapY(humidity)\n        }));\n    const windPoints = winds.map((wind, i)=>({\n            x: mapX(i),\n            y: mapY(wind)\n        }));\n    const pressurePoints = pressures.map((pressure, i)=>({\n            x: mapX(i),\n            y: mapY(pressure)\n        }));\n    // Smooth path for temperature line\n    function getSmoothPath(pts) {\n        if (pts.length < 2) return '';\n        let d = `M${pts[0].x},${pts[0].y}`;\n        for(let i = 1; i < pts.length; i++){\n            const prev = pts[i - 1], curr = pts[i];\n            const cpx = (prev.x + curr.x) / 2;\n            d += ` C${cpx},${prev.y} ${cpx},${curr.y} ${curr.x},${curr.y}`;\n        }\n        return d;\n    }\n    const tempPath = getSmoothPath(tempPoints);\n    const humidityPath = getSmoothPath(humidityPoints);\n    const windPath = getSmoothPath(windPoints);\n    const pressurePath = getSmoothPath(pressurePoints);\n    // X axis labels (day names with year)\n    const xLabels = daily.map((d)=>{\n        const dt = new Date(d.date);\n        const dateYear = dt.getFullYear();\n        if (isMobile) {\n            const dayName = dt.toLocaleDateString('en-US', {\n                weekday: 'short'\n            }).substring(0, 3);\n            return `${dayName} '${dateYear.toString().slice(-2)}`;\n        } else {\n            const dayName = dt.toLocaleDateString('en-US', {\n                weekday: 'short'\n            });\n            return `${dayName} '${dateYear.toString().slice(-2)}`;\n        }\n    });\n    // Y axis ticks\n    const yTicks = isMobile ? 5 : 6;\n    const yVals = Array.from({\n        length: yTicks\n    }, (_, i)=>minY + i * (maxY - minY) / (yTicks - 1));\n    // Build SVG\n    return `\n    <div class=\"forecast-chart-section\" style=\"background:linear-gradient(135deg,#1a2332 0%,#26334d 50%,#202a3a 100%);border-radius:20px;padding:${isMobile ? '32px 24px 28px 24px' : '48px 40px 40px 40px'};box-shadow:0 16px 48px rgba(0,0,0,0.3),0 8px 24px rgba(0,0,0,0.25);max-width:100%;width:100%;margin:24px auto 0 auto;display:flex;flex-direction:column;align-items:center;justify-content:center;border:1px solid rgba(255,255,255,0.08);backdrop-filter:blur(12px);\">\n      <div style=\"font-size:${isMobile ? '1.1rem' : '1.3rem'};font-weight:700;color:#fff;letter-spacing:0.8px;text-align:center;margin-bottom:${isMobile ? '20px' : '24px'};font-family:'Inter',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;text-shadow:0 2px 4px rgba(0,0,0,0.3);\">5-Day Weather Analytics</div>\n      <div style=\"display:flex;align-items:center;gap:${isMobile ? '12px' : '16px'};margin-bottom:${isMobile ? '20px' : '24px'};font-size:${isMobile ? '0.75rem' : '0.85rem'};flex-wrap:wrap;justify-content:center;font-weight:600;font-family:'Inter',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;padding:16px 20px;background:rgba(255,255,255,0.05);border-radius:12px;border:1px solid rgba(255,255,255,0.1);backdrop-filter:blur(8px);\">\n        <span style=\"color:#fff;opacity:0.9;font-size:${isMobile ? '0.7rem' : '0.8rem'};font-weight:700;margin-right:8px;letter-spacing:0.4px;text-transform:uppercase;\">Metrics:</span>\n        <span style=\"display:flex;align-items:center;margin:0 4px;padding:6px 12px;background:rgba(255,152,0,0.15);border-radius:8px;border:1px solid rgba(255,152,0,0.3);\"><svg width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\"><rect width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\" fill=\"#ff9800\" rx=\"1\"/></svg> <span style=\"color:#fff;margin-left:6px;font-size:${isMobile ? '0.7rem' : '0.8rem'};font-weight:600;letter-spacing:0.2px;\">Temperature (\\xb0C)</span></span>\n        <span style=\"display:flex;align-items:center;margin:0 4px;padding:6px 12px;background:rgba(25,118,210,0.15);border-radius:8px;border:1px solid rgba(25,118,210,0.3);\"><svg width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\"><rect width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\" fill=\"#1976d2\" rx=\"1\"/></svg> <span style=\"color:#fff;margin-left:6px;font-size:${isMobile ? '0.7rem' : '0.8rem'};font-weight:600;letter-spacing:0.2px;\">Humidity (%)</span></span>\n        <span style=\"display:flex;align-items:center;margin:0 4px;padding:6px 12px;background:rgba(255,214,0,0.15);border-radius:8px;border:1px solid rgba(255,214,0,0.3);\"><svg width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\"><rect width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\" fill=\"#ffd600\" rx=\"1\"/></svg> <span style=\"color:#fff;margin-left:6px;font-size:${isMobile ? '0.7rem' : '0.8rem'};font-weight:600;letter-spacing:0.2px;\">Wind (m/s)</span></span>\n        <span style=\"display:flex;align-items:center;margin:0 4px;padding:6px 12px;background:rgba(67,160,71,0.15);border-radius:8px;border:1px solid rgba(67,160,71,0.3);\"><svg width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\"><rect width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\" fill=\"#43a047\" rx=\"1\"/></svg> <span style=\"color:#fff;margin-left:6px;font-size:${isMobile ? '0.7rem' : '0.8rem'};font-weight:600;letter-spacing:0.2px;\">Pressure (hPa)</span></span>\n      </div>\n      <div style=\"width:100%;overflow-x:auto;\">\n        <svg width=\"100%\" height=\"${h}\" viewBox=\"0 0 ${w} ${h}\" class=\"forecast-chart\" style=\"background:none;max-width:100%;display:block;margin:0 auto;\">\n          <defs>\n            <filter id=\"chartDropShadow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\n              <feDropShadow dx=\"0\" dy=\"3\" stdDeviation=\"4\" flood-color=\"#000\" flood-opacity=\"0.25\"/>\n            </filter>\n            <filter id=\"glowEffect\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n            <linearGradient id=\"chartBg\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stop-color=\"#26334d\" stop-opacity=\"0.1\"/>\n              <stop offset=\"50%\" stop-color=\"#202a3a\" stop-opacity=\"0.08\"/>\n              <stop offset=\"100%\" stop-color=\"#1a2332\" stop-opacity=\"0.12\"/>\n            </linearGradient>\n            <linearGradient id=\"tempGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stop-color=\"#ff9800\" stop-opacity=\"0.8\"/>\n              <stop offset=\"100%\" stop-color=\"#ff5722\" stop-opacity=\"1\"/>\n            </linearGradient>\n            <linearGradient id=\"humidityGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stop-color=\"#1976d2\" stop-opacity=\"0.8\"/>\n              <stop offset=\"100%\" stop-color=\"#1565c0\" stop-opacity=\"1\"/>\n            </linearGradient>\n            <linearGradient id=\"windGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stop-color=\"#ffd600\" stop-opacity=\"0.8\"/>\n              <stop offset=\"100%\" stop-color=\"#ffc107\" stop-opacity=\"1\"/>\n            </linearGradient>\n            <linearGradient id=\"pressureGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stop-color=\"#43a047\" stop-opacity=\"0.8\"/>\n              <stop offset=\"100%\" stop-color=\"#388e3c\" stop-opacity=\"1\"/>\n            </linearGradient>\n          </defs>\n          \n          <!-- Background -->\n          <rect x=\"0\" y=\"0\" width=\"${w}\" height=\"${h}\" fill=\"url(#chartBg)\" rx=\"20\"/>\n          \n          <!-- Grid lines -->\n          ${yVals.map((v, i)=>`<line x1=\"${pad}\" y1=\"${pad + i * (h - 2 * pad) / (yTicks - 1)}\" x2=\"${w - pad}\" y2=\"${pad + i * (h - 2 * pad) / (yTicks - 1)}\" stroke=\"#fff\" stroke-width=\"0.8\" opacity=\"0.08\" />`).join('')}\n          ${tempPoints.map((p, i)=>`<line x1=\"${p.x}\" y1=\"${pad}\" x2=\"${p.x}\" y2=\"${h - pad}\" stroke=\"#fff\" stroke-width=\"0.6\" opacity=\"0.06\" />`).join('')}\n          \n          <!-- X and Y axis lines -->\n          <line x1=\"${pad}\" y1=\"${pad}\" x2=\"${w - pad}\" y2=\"${pad}\" stroke=\"#fff\" stroke-width=\"1.2\" opacity=\"0.2\" />\n          <line x1=\"${pad}\" y1=\"${pad}\" x2=\"${pad}\" y2=\"${h - pad}\" stroke=\"#fff\" stroke-width=\"1.2\" opacity=\"0.2\" />\n          \n          <!-- Y axis labels -->\n          ${yVals.map((v, i)=>`<text x=\"${pad - 24}\" y=\"${pad + i * (h - 2 * pad) / (yTicks - 1) + 3}\" text-anchor=\"end\" font-size=\"5\" font-weight=\"700\" fill=\"#fff\" opacity=\"0.9\" font-family='Inter',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif stroke=\"#000\" stroke-width=\"1\" letter-spacing=\"0.3\" filter=\"drop-shadow(0 1px 2px rgba(0,0,0,0.8))\">${v.toFixed(0)}</text>`).join('')}\n          \n          <!-- X axis labels -->\n          ${tempPoints.map((p, i)=>`<text x=\"${p.x}\" y=\"${h - pad + 22}\" text-anchor=\"middle\" font-size=\"5\" font-weight=\"700\" fill=\"#fff\" opacity=\"0.9\" font-family='Inter',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif stroke=\"#000\" stroke-width=\"1\" letter-spacing=\"0.3\" filter=\"drop-shadow(0 1px 2px rgba(0,0,0,0.8))\">${xLabels[i]}</text>`).join('')}\n          \n          <!-- Temperature line with gradient -->\n          <path d=\"${tempPath}\" fill=\"none\" stroke=\"url(#tempGradient)\" stroke-width=\"${isMobile ? '4' : '5'}\" stroke-linecap=\"round\" stroke-linejoin=\"round\" filter=\"url(#chartDropShadow)\" />\n          ${tempPoints.map((p)=>`<circle class=\"chart-point\" cx=\"${p.x}\" cy=\"${p.y}\" r=\"${isMobile ? '6' : '8'}\" fill=\"#26334d\" stroke=\"url(#tempGradient)\" stroke-width=\"3\" filter=\"url(#glowEffect)\" style=\"transition:all 0.2s ease;\" />`).join('')}\n          \n          <!-- Humidity line with gradient -->\n          <path d=\"${humidityPath}\" fill=\"none\" stroke=\"url(#humidityGradient)\" stroke-width=\"${isMobile ? '3' : '4'}\" stroke-dasharray=\"8 6\" stroke-linecap=\"round\" stroke-linejoin=\"round\" filter=\"url(#chartDropShadow)\" />\n          ${humidityPoints.map((p)=>`<circle cx=\"${p.x}\" cy=\"${p.y}\" r=\"${isMobile ? '5' : '6'}\" fill=\"#26334d\" stroke=\"url(#humidityGradient)\" stroke-width=\"2.5\" filter=\"url(#glowEffect)\" />`).join('')}\n          \n          <!-- Wind line with gradient -->\n          <path d=\"${windPath}\" fill=\"none\" stroke=\"url(#windGradient)\" stroke-width=\"${isMobile ? '3' : '4'}\" stroke-dasharray=\"3 8\" stroke-linecap=\"round\" stroke-linejoin=\"round\" filter=\"url(#chartDropShadow)\" />\n          ${windPoints.map((p)=>`<circle cx=\"${p.x}\" cy=\"${p.y}\" r=\"${isMobile ? '5' : '6'}\" fill=\"#26334d\" stroke=\"url(#windGradient)\" stroke-width=\"2.5\" filter=\"url(#glowEffect)\" />`).join('')}\n          \n          <!-- Pressure line with gradient -->\n          <path d=\"${pressurePath}\" fill=\"none\" stroke=\"url(#pressureGradient)\" stroke-width=\"${isMobile ? '3' : '4'}\" stroke-dasharray=\"2 6\" stroke-linecap=\"round\" stroke-linejoin=\"round\" filter=\"url(#chartDropShadow)\" />\n          ${pressurePoints.map((p)=>`<circle cx=\"${p.x}\" cy=\"${p.y}\" r=\"${isMobile ? '5' : '6'}\" fill=\"#26334d\" stroke=\"url(#pressureGradient)\" stroke-width=\"2.5\" filter=\"url(#glowEffect)\" />`).join('')}\n        </svg>\n      </div>\n    </div>\n  `;\n}\n\n\n\nvar $7t7Z8 = parcelRequire(\"7t7Z8\");\nfunction $7619bfc5988c6f4f$export$f78842bd8df93f12() {\n    const currentLang = (0, $7t7Z8.getCurrentLanguage)();\n    const availableLanguages = (0, $7t7Z8.getAvailableLanguages)();\n    const footerHTML = `\n    <footer class=\"app-footer\">\n      <div class=\"footer-container\">\n        <div class=\"footer-main\">\n          <div class=\"footer-section\">\n            <h3 class=\"footer-title\">Weather Dashboard Pro</h3>\n            <p class=\"footer-description\">Your comprehensive weather companion providing real-time forecasts, detailed analytics, and beautiful visualizations. Stay informed with accurate weather data powered by advanced meteorological technology.</p>\n          </div>\n          \n          <div class=\"footer-section\">\n            <h4 class=\"footer-subtitle\">${(0, $7t7Z8.getTranslation)('language')}</h4>\n            <div class=\"language-selector\">\n              <button class=\"language-btn current\" data-lang=\"${currentLang}\">\n                ${(0, $7t7Z8.getLanguageFlag)(currentLang)} ${(0, $7t7Z8.getLanguageName)(currentLang)}\n              </button>\n              <div class=\"language-dropdown\">\n                ${availableLanguages.map((lang)=>lang !== currentLang ? `<button class=\"language-option\" data-lang=\"${lang}\">\n                      ${(0, $7t7Z8.getLanguageFlag)(lang)} ${(0, $7t7Z8.getLanguageName)(lang)}\n                    </button>` : '').join('')}\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"footer-bottom\">\n          <div class=\"footer-info\">\n            <span class=\"footer-text\">Made with \\u{2764}\\u{FE0F} by Weather Dashboard Team</span>\n            <span class=\"footer-version\">Version 2.0 \\u{2022} Powered by OpenWeatherMap API</span>\n          </div>\n        </div>\n      </div>\n    </footer>\n  `;\n    return footerHTML;\n}\n\nfunction $7619bfc5988c6f4f$export$4134ea2413952409() {\n    // Add event listeners for language switching\n    document.addEventListener('click', (e)=>{\n        if (e.target.classList.contains('language-option')) {\n            const lang = e.target.dataset.lang;\n            if (lang) // Import and call setLanguage function\n            Promise.resolve((parcelRequire(\"7t7Z8\"))).then(({ setLanguage: setLanguage })=>{\n                setLanguage(lang);\n            });\n        }\n    });\n    // Add event listener for language dropdown toggle\n    document.addEventListener('click', (e)=>{\n        if (e.target.classList.contains('language-btn')) {\n            const dropdown = e.target.nextElementSibling;\n            if (dropdown && dropdown.classList.contains('language-dropdown')) dropdown.classList.toggle('show');\n        }\n    });\n    // Close dropdown when clicking outside\n    document.addEventListener('click', (e)=>{\n        if (!e.target.closest('.language-selector')) {\n            const dropdowns = document.querySelectorAll('.language-dropdown');\n            dropdowns.forEach((dropdown)=>dropdown.classList.remove('show'));\n        }\n    });\n}\n\n\n\nvar $7t7Z8 = parcelRequire(\"7t7Z8\");\n// Main app logic\nlet $ce77af30fc9a6e63$var$DEFAULT_CITY = 'Kyiv';\nlet $ce77af30fc9a6e63$var$DEFAULT_COUNTRY = 'UA';\nlet $ce77af30fc9a6e63$var$currentCity = '';\nlet $ce77af30fc9a6e63$var$currentView = 'today'; // 'today' or 'fiveDays'\nlet $ce77af30fc9a6e63$var$expandedDate = '';\nlet $ce77af30fc9a6e63$var$allExpanded = false;\nlet $ce77af30fc9a6e63$var$showChart = false;\nlet $ce77af30fc9a6e63$var$errorMessage = '';\nlet $ce77af30fc9a6e63$var$lastWeatherData = null;\nlet $ce77af30fc9a6e63$var$lastForecastData = null;\nfunction $ce77af30fc9a6e63$var$renderDashboard(weatherData, forecastData) {\n    // Weather Card\n    let weatherCardHTML = '';\n    let navButtonsHTML = '';\n    if ($ce77af30fc9a6e63$var$currentView === 'today') {\n        if (weatherData) {\n            weatherCardHTML = (0, $b811239e8917e3e0$export$6a7f938a907484cc)(weatherData);\n            navButtonsHTML = `\n        <div id=\"nav-buttons\">\n          <button id=\"btn-today\" class=\"nav-btn active\">${(0, $7t7Z8.getTranslation)('today')}</button>\n          <button id=\"btn-five-days\" class=\"nav-btn\">${(0, $7t7Z8.getTranslation)('fiveDays')}</button>\n        </div>\n      `;\n        } else {\n            weatherCardHTML = `<section class=\"today-weather-card\"><div class=\"weather-card-overlay\"><div class=\"weather-card-header\"><span class=\"weather-city\">${(0, $7t7Z8.getTranslation)('selectCity')}</span></div><div class=\"weather-temp-main\">--\\xb0C</div><div class=\"weather-minmax\">${(0, $7t7Z8.getTranslation)('min')} --\\xb0 / ${(0, $7t7Z8.getTranslation)('max')} --\\xb0</div></div></section>`;\n            navButtonsHTML = '';\n        }\n    } else {\n        weatherCardHTML = '';\n        navButtonsHTML = `\n      <div id=\"nav-buttons\">\n        <button id=\"btn-today\" class=\"nav-btn\">${(0, $7t7Z8.getTranslation)('today')}</button>\n        <button id=\"btn-five-days\" class=\"nav-btn active\">${(0, $7t7Z8.getTranslation)('fiveDays')}</button>\n        </div>\n      `;\n    }\n    // Main Content (Today or 5 Days)\n    let mainContentHTML = '';\n    if ($ce77af30fc9a6e63$var$currentView === 'today') {\n        if (weatherData) mainContentHTML = '';\n        else mainContentHTML = `<div class=\"welcome-centered\"><div class=\"welcome-message\">${(0, $7t7Z8.getTranslation)('pleaseSearch')}</div></div>`;\n    } else if ($ce77af30fc9a6e63$var$currentView === 'fiveDays') {\n        if (forecastData) {\n            // Get country information from weather data\n            let countryName = '';\n            if (weatherData && weatherData.sys && weatherData.sys.country) {\n                const countryCode = weatherData.sys.country;\n                // Use the same country names mapping from header.js\n                const countryNames = {\n                    'TH': 'Thailand',\n                    'US': 'United States',\n                    'GB': 'United Kingdom',\n                    'FR': 'France',\n                    'UA': 'Ukraine',\n                    'PL': 'Poland',\n                    'AU': 'Australia',\n                    'CA': 'Canada',\n                    'DE': 'Germany',\n                    'IT': 'Italy',\n                    'ES': 'Spain',\n                    'JP': 'Japan',\n                    'CN': 'China',\n                    'IN': 'India',\n                    'BR': 'Brazil',\n                    'MX': 'Mexico',\n                    'RU': 'Russia',\n                    'KR': 'South Korea',\n                    'NL': 'Netherlands',\n                    'SE': 'Sweden',\n                    'NO': 'Norway',\n                    'DK': 'Denmark',\n                    'FI': 'Finland',\n                    'CH': 'Switzerland',\n                    'AT': 'Austria',\n                    'BE': 'Belgium',\n                    'PT': 'Portugal',\n                    'GR': 'Greece',\n                    'IE': 'Ireland',\n                    'NZ': 'New Zealand',\n                    'VN': 'Vietnam',\n                    'SG': 'Singapore',\n                    'MY': 'Malaysia',\n                    'ID': 'Indonesia',\n                    'PH': 'Philippines',\n                    'TR': 'Turkey',\n                    'SA': 'Saudi Arabia',\n                    'AE': 'United Arab Emirates',\n                    'EG': 'Egypt',\n                    'ZA': 'South Africa',\n                    'NG': 'Nigeria',\n                    'KE': 'Kenya',\n                    'MA': 'Morocco',\n                    'TN': 'Tunisia',\n                    'DZ': 'Algeria',\n                    'LY': 'Libya',\n                    'SD': 'Sudan',\n                    'ET': 'Ethiopia',\n                    'GH': 'Ghana',\n                    'CI': 'Ivory Coast',\n                    'SN': 'Senegal',\n                    'ML': 'Mali',\n                    'BF': 'Burkina Faso',\n                    'NE': 'Niger',\n                    'TD': 'Chad',\n                    'CF': 'Central African Republic',\n                    'CM': 'Cameroon',\n                    'GQ': 'Equatorial Guinea',\n                    'GA': 'Gabon',\n                    'CG': 'Republic of the Congo',\n                    'CD': 'Democratic Republic of the Congo',\n                    'AO': 'Angola',\n                    'ZM': 'Zambia',\n                    'ZW': 'Zimbabwe',\n                    'BW': 'Botswana',\n                    'NA': 'Namibia',\n                    'SZ': 'Eswatini',\n                    'LS': 'Lesotho',\n                    'MG': 'Madagascar',\n                    'MU': 'Mauritius',\n                    'SC': 'Seychelles',\n                    'KM': 'Comoros',\n                    'DJ': 'Djibouti',\n                    'SO': 'Somalia',\n                    'ER': 'Eritrea',\n                    'SS': 'South Sudan',\n                    'RW': 'Rwanda',\n                    'BI': 'Burundi',\n                    'TZ': 'Tanzania',\n                    'UG': 'Uganda',\n                    'MZ': 'Mozambique',\n                    'MW': 'Malawi'\n                };\n                countryName = countryNames[countryCode] || countryCode;\n            }\n            mainContentHTML = (0, $8705a20b2c226359$export$d95ef65713a50ea7)(forecastData, $ce77af30fc9a6e63$var$allExpanded, $ce77af30fc9a6e63$var$showChart, $ce77af30fc9a6e63$var$currentCity, countryName);\n            if ($ce77af30fc9a6e63$var$showChart) mainContentHTML += (0, $3a18ccca1ddc6901$export$56d61a8703f2b62d)(forecastData);\n        } else mainContentHTML = `<div class=\"welcome-centered\"><div class=\"welcome-message\">${(0, $7t7Z8.getTranslation)('pleaseSearchForecast')}</div></div>`;\n    }\n    // Date/Time Section\n    let dateTimeHTML = '';\n    if (weatherData) {\n        const now = new Date();\n        const day = now.toLocaleString('en-US', {\n            weekday: 'short'\n        });\n        const date = now.getDate();\n        const month = now.toLocaleString('en-US', {\n            month: 'long'\n        });\n        const time = now.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n        let sunrise = '', sunset = '';\n        if (weatherData.sys && weatherData.sys.sunrise && weatherData.sys.sunset) {\n            sunrise = new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n            });\n            sunset = new Date(weatherData.sys.sunset * 1000).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n            });\n        }\n        dateTimeHTML = `\n      <div class=\"date-time-section\">\n        <div class=\"date-big\"><span class=\"date-num\">${date}<sup>th</sup></span> <span class=\"date-day\">${day}</span></div>\n        <div class=\"date-month\">${month}</div>\n        <div class=\"date-time-row\">\n          <span class=\"date-time-clock\">${time}</span>\n          <span class=\"date-sunrise\"><span class=\"sun-icon\">\\u{1F305}</span>${sunrise}</span>\n          <span class=\"date-sunset\"><span class=\"sunset-icon\">\\u{1F307}</span>${sunset}</span>\n        </div>\n      </div>\n    `;\n    } else dateTimeHTML = `<div class=\"date-time-section\"><div class=\"date-big\"><span class=\"date-num\">--<sup>th</sup></span> <span class=\"date-day\">---</span></div><div class=\"date-month\">------</div><div class=\"date-time-row\"><span class=\"date-time-clock\">--:--</span><span class=\"date-sunrise\"><span class=\"sun-icon\">\\u{1F305}</span>--:--</span><span class=\"date-sunset\"><span class=\"sunset-icon\">\\u{1F307}</span>--:--</span></div></div>`;\n    // Quote Section\n    const quoteHTML = (0, $41971cb266c44f05$export$b8de66447d69562a)();\n    // Main App Layout\n    const app = document.getElementById('app');\n    const isMobile = window.innerWidth <= 768;\n    if ($ce77af30fc9a6e63$var$currentView === 'fiveDays') app.innerHTML = `\n      <div id=\"header-root\"></div>\n      ${navButtonsHTML}\n      ${mainContentHTML}\n      ${(0, $7619bfc5988c6f4f$export$f78842bd8df93f12)()}\n    `;\n    else app.innerHTML = `\n      <div id=\"header-root\"></div>\n      <div class=\"weather-right-group\">\n        ${weatherCardHTML}\n        ${navButtonsHTML}\n      </div>\n      ${mainContentHTML}\n      ${$ce77af30fc9a6e63$var$currentView === 'today' ? dateTimeHTML : ''}\n      ${$ce77af30fc9a6e63$var$currentView === 'today' ? quoteHTML : ''}\n      ${(0, $7619bfc5988c6f4f$export$f78842bd8df93f12)()}\n    `;\n    // Add or remove right-align class based on currentView\n    const weatherCard = document.querySelector('.today-weather-card');\n    const navButtons = document.getElementById('nav-buttons');\n    if ($ce77af30fc9a6e63$var$currentView === 'today') {\n        if (weatherCard) weatherCard.classList.add('right-align');\n        if (navButtons) navButtons.classList.add('right-align');\n    } else {\n        if (weatherCard) weatherCard.classList.remove('right-align');\n        if (navButtons) navButtons.classList.remove('right-align');\n    }\n    // Always re-initialize the header after rendering\n    (0, $d16ff8997fd7b72f$export$311ccb8ac074141f)(async (city)=>{\n        $ce77af30fc9a6e63$var$currentView = 'today';\n        $ce77af30fc9a6e63$var$expandedDate = '';\n        $ce77af30fc9a6e63$var$showChart = false;\n        await $ce77af30fc9a6e63$var$updateDashboard(city);\n    });\n    // Move header into place\n    let headerRoot = document.getElementById('header-root');\n    if (!headerRoot) {\n        headerRoot = document.createElement('div');\n        headerRoot.id = 'header-root';\n        document.querySelector('.header-searchbar-root').appendChild(headerRoot);\n    }\n    // Add event listeners for nav buttons\n    const btnToday = document.getElementById('btn-today');\n    const btnFiveDays = document.getElementById('btn-five-days');\n    if (btnToday) btnToday.onclick = ()=>{\n        if ($ce77af30fc9a6e63$var$currentView !== 'today') {\n            $ce77af30fc9a6e63$var$currentView = 'today';\n            $ce77af30fc9a6e63$var$expandedDate = '';\n            $ce77af30fc9a6e63$var$showChart = false;\n            // Ensure dropdown is hidden when switching views\n            const dd = document.getElementById('country-dropdown-container');\n            if (dd) dd.style.display = 'none';\n            $ce77af30fc9a6e63$var$updateDashboard($ce77af30fc9a6e63$var$currentCity);\n        }\n    };\n    if (btnFiveDays) btnFiveDays.onclick = ()=>{\n        if ($ce77af30fc9a6e63$var$currentView !== 'fiveDays') {\n            $ce77af30fc9a6e63$var$currentView = 'fiveDays';\n            $ce77af30fc9a6e63$var$expandedDate = '';\n            $ce77af30fc9a6e63$var$showChart = false;\n            // Ensure dropdown is hidden when switching views\n            const dd = document.getElementById('country-dropdown-container');\n            if (dd) dd.style.display = 'none';\n            $ce77af30fc9a6e63$var$updateDashboard($ce77af30fc9a6e63$var$currentCity);\n        }\n    };\n    // Add event listeners for More Info and Show Chart buttons\n    if ($ce77af30fc9a6e63$var$currentView === 'fiveDays' && forecastData) {\n        document.querySelectorAll('.more-info-btn').forEach((btn)=>{\n            btn.onclick = (e)=>{\n                $ce77af30fc9a6e63$var$allExpanded = !$ce77af30fc9a6e63$var$allExpanded;\n                $ce77af30fc9a6e63$var$updateDashboard($ce77af30fc9a6e63$var$currentCity);\n            };\n        });\n        const showChartBtn = document.getElementById('show-chart-btn');\n        if (showChartBtn) showChartBtn.onclick = (e)=>{\n            // Ripple effect\n            const ripple = document.createElement('span');\n            ripple.className = 'ripple';\n            const rect = showChartBtn.getBoundingClientRect();\n            ripple.style.width = ripple.style.height = Math.max(rect.width, rect.height) + 'px';\n            ripple.style.left = e.clientX - rect.left - rect.width / 2 + 'px';\n            ripple.style.top = e.clientY - rect.top - rect.height / 2 + 'px';\n            showChartBtn.appendChild(ripple);\n            setTimeout(()=>ripple.remove(), 600);\n            // Toggle chart without triggering loading/fetch\n            $ce77af30fc9a6e63$var$showChart = !$ce77af30fc9a6e63$var$showChart;\n            $ce77af30fc9a6e63$var$renderDashboard($ce77af30fc9a6e63$var$lastWeatherData, $ce77af30fc9a6e63$var$lastForecastData);\n        };\n    }\n}\nasync function $ce77af30fc9a6e63$var$setCityBackground(city, weatherDesc, countryName) {\n    const overlay = document.querySelector('.background-overlay');\n    if (!city) {\n        document.body.style.backgroundImage = '';\n        if (overlay) {\n            overlay.style.backgroundImage = '';\n            overlay.style.opacity = '0';\n        }\n        return;\n    }\n    // Show loading state\n    if (overlay) {\n        overlay.style.opacity = '0.3';\n        overlay.style.transition = 'opacity 0.5s ease-in-out';\n    }\n    let imageUrl = await (0, $56ca17bb174b0ce3$export$f13749ff409e4cfa)(city, weatherDesc, countryName);\n    if (imageUrl) {\n        if (overlay) {\n            overlay.style.display = 'block';\n            overlay.style.backgroundImage = `url('${imageUrl}')`;\n            overlay.style.backgroundSize = 'cover';\n            overlay.style.backgroundPosition = 'center';\n            overlay.style.backgroundRepeat = 'no-repeat';\n            overlay.style.opacity = '0.6';\n            overlay.style.transition = 'opacity 0.8s ease-in-out';\n        // City name overlay removed\n        } else {\n            document.body.style.backgroundImage = `url('${imageUrl}')`;\n            document.body.style.backgroundSize = 'cover';\n            document.body.style.backgroundPosition = 'center';\n            document.body.style.backgroundRepeat = 'no-repeat';\n        }\n    } else {\n        if (overlay) {\n            overlay.style.display = 'none';\n            overlay.style.backgroundImage = '';\n            overlay.style.opacity = '0';\n        }\n        document.body.style.backgroundImage = '';\n    // City name overlay removed\n    }\n}\nasync function $ce77af30fc9a6e63$var$updateDashboard(city) {\n    $ce77af30fc9a6e63$var$currentCity = city;\n    let weatherData = null;\n    let forecastData = null;\n    $ce77af30fc9a6e63$var$errorMessage = '';\n    // Show loading state\n    $ce77af30fc9a6e63$var$showLoading(true);\n    if (city) try {\n        weatherData = await (0, $56ca17bb174b0ce3$export$59ee9e79053c2d96)(city);\n        forecastData = await (0, $56ca17bb174b0ce3$export$27118674b1c306e)(city);\n        let weatherDesc = weatherData && weatherData.weather && weatherData.weather[0] ? weatherData.weather[0].main : '';\n        let countryName = weatherData && weatherData.sys && weatherData.sys.country ? weatherData.sys.country : '';\n        weatherDesc = weatherDesc ? weatherDesc.toLowerCase() : '';\n        $ce77af30fc9a6e63$var$setCityBackground(city.split(',')[0], weatherDesc, countryName); // Pass weather description for image search\n        // Cache latest data for instant re-renders (e.g., Show Chart toggle)\n        $ce77af30fc9a6e63$var$lastWeatherData = weatherData;\n        $ce77af30fc9a6e63$var$lastForecastData = forecastData;\n    } catch (err) {\n        $ce77af30fc9a6e63$var$errorMessage = 'City or country not found. Please try another.';\n        $ce77af30fc9a6e63$var$renderDashboard(null, null);\n        $ce77af30fc9a6e63$var$setCityBackground(null, null, null);\n        $ce77af30fc9a6e63$var$showLoading(false);\n        $ce77af30fc9a6e63$var$showErrorMessage($ce77af30fc9a6e63$var$errorMessage);\n        return;\n    }\n    else $ce77af30fc9a6e63$var$setCityBackground(null, null, null);\n    // Hide loading state\n    $ce77af30fc9a6e63$var$showLoading(false);\n    $ce77af30fc9a6e63$var$renderDashboard(weatherData, forecastData);\n}\nfunction $ce77af30fc9a6e63$var$showLoading(show) {\n    let loadingElement = document.querySelector('.loading-overlay');\n    if (show) {\n        if (!loadingElement) loadingElement = $ce77af30fc9a6e63$var$createLoadingOverlay();\n        loadingElement.style.display = 'flex';\n    } else if (loadingElement) loadingElement.style.display = 'none';\n}\nfunction $ce77af30fc9a6e63$var$createLoadingOverlay() {\n    const overlay = document.createElement('div');\n    overlay.className = 'loading-overlay';\n    overlay.innerHTML = `\n    <div class=\"loading-content\">\n      <div class=\"loading-spinner\"></div>\n      <div class=\"loading-text\">Searching weather data...</div>\n    </div>\n  `;\n    document.body.appendChild(overlay);\n    return overlay;\n}\nfunction $ce77af30fc9a6e63$var$showErrorMessage(message) {\n    // Remove any existing error message\n    const existingError = document.querySelector('.error-message-overlay');\n    if (existingError) existingError.remove();\n    // Create new error message\n    const errorOverlay = document.createElement('div');\n    errorOverlay.className = 'error-message-overlay';\n    errorOverlay.innerHTML = `\n    <div class=\"error-message-content\">\n      <div class=\"error-icon\">\\u{26A0}\\u{FE0F}</div>\n      <div class=\"error-text\">${message}</div>\n    </div>\n  `;\n    document.body.appendChild(errorOverlay);\n    // Auto-dismiss after 3 seconds\n    setTimeout(()=>{\n        if (errorOverlay.parentNode) {\n            errorOverlay.style.opacity = '0';\n            errorOverlay.style.transform = 'translateY(-20px)';\n            setTimeout(()=>{\n                if (errorOverlay.parentNode) errorOverlay.remove();\n            }, 300);\n        }\n    }, 3000);\n}\nwindow.addEventListener('DOMContentLoaded', async ()=>{\n    // Initialize language system\n    (0, $7t7Z8.initLanguage)();\n    // Initialize header\n    (0, $d16ff8997fd7b72f$export$311ccb8ac074141f)(async (city)=>{\n        $ce77af30fc9a6e63$var$currentView = 'today';\n        $ce77af30fc9a6e63$var$expandedDate = '';\n        $ce77af30fc9a6e63$var$showChart = false;\n        await $ce77af30fc9a6e63$var$updateDashboard(city);\n    });\n    // Initialize footer\n    (0, $7619bfc5988c6f4f$export$4134ea2413952409)();\n    // On first load, use default city and country\n    await $ce77af30fc9a6e63$var$updateDashboard(`${$ce77af30fc9a6e63$var$DEFAULT_CITY},${$ce77af30fc9a6e63$var$DEFAULT_COUNTRY}`);\n    // Listen for language changes\n    window.addEventListener('languageChanged', ()=>{\n        $ce77af30fc9a6e63$var$updateUILanguage();\n    });\n});\n// Function to update UI language\nfunction $ce77af30fc9a6e63$var$updateUILanguage() {\n    // Re-render the dashboard with new language\n    if ($ce77af30fc9a6e63$var$lastWeatherData || $ce77af30fc9a6e63$var$lastForecastData) $ce77af30fc9a6e63$var$renderDashboard($ce77af30fc9a6e63$var$lastWeatherData, $ce77af30fc9a6e63$var$lastForecastData);\n}\n\n\n//# sourceMappingURL=weather-app.78573fd3.js.map\n","// Internationalization (i18n) for Weather App\nexport const languages = {\n  en: {\n    name: 'English',\n    flag: '🇺🇸',\n    translations: {\n      // Header\n      searchPlaceholder: 'Search for a city or country...',\n      searchButton: 'Search',\n      today: 'TODAY',\n      fiveDays: '5 DAYS',\n      selectCity: 'Select a city',\n      pleaseSearch: 'Please search for a city to see the weather.',\n      pleaseSearchForecast: 'Please search for a city to see the forecast.',\n      \n      // Weather\n      min: 'min',\n      max: 'max',\n      temperature: 'Temperature',\n      humidity: 'Humidity',\n      windSpeed: 'Wind Speed',\n      pressure: 'Pressure',\n      visibility: 'Visibility',\n      sunrise: 'Sunrise',\n      sunset: 'Sunset',\n      \n      // Navigation\n      showChart: 'Show Chart',\n      hideChart: 'Hide Chart',\n      \n      // Footer\n      footerTitle: 'Weather Dashboard',\n      footerDescription: 'Get accurate weather information for any city worldwide',\n      madeWith: 'Made with',\n      by: 'by',\n      developer: 'Weather App Team',\n      version: 'Version',\n      currentVersion: '1.0.0',\n      \n      // Language names\n      language: 'Language',\n      selectLanguage: 'Select Language'\n    }\n  },\n  es: {\n    name: 'Español',\n    flag: '🇪🇸',\n    translations: {\n      searchPlaceholder: 'Buscar una ciudad o país...',\n      searchButton: 'Buscar',\n      today: 'HOY',\n      fiveDays: '5 DÍAS',\n      selectCity: 'Selecciona una ciudad',\n      pleaseSearch: 'Por favor busca una ciudad para ver el clima.',\n      pleaseSearchForecast: 'Por favor busca una ciudad para ver el pronóstico.',\n      min: 'mín',\n      max: 'máx',\n      temperature: 'Temperatura',\n      humidity: 'Humedad',\n      windSpeed: 'Velocidad del Viento',\n      pressure: 'Presión',\n      visibility: 'Visibilidad',\n      sunrise: 'Amanecer',\n      sunset: 'Atardecer',\n      showChart: 'Mostrar Gráfico',\n      hideChart: 'Ocultar Gráfico',\n      footerTitle: 'Panel del Clima',\n      footerDescription: 'Obtén información meteorológica precisa para cualquier ciudad del mundo',\n      madeWith: 'Hecho con',\n      by: 'por',\n      developer: 'Equipo de Weather App',\n      version: 'Versión',\n      currentVersion: '1.0.0',\n      language: 'Idioma',\n      selectLanguage: 'Seleccionar Idioma'\n    }\n  },\n  fr: {\n    name: 'Français',\n    flag: '🇫🇷',\n    translations: {\n      searchPlaceholder: 'Rechercher une ville ou un pays...',\n      searchButton: 'Rechercher',\n      today: 'AUJOURD\\'HUI',\n      fiveDays: '5 JOURS',\n      selectCity: 'Sélectionnez une ville',\n      pleaseSearch: 'Veuillez rechercher une ville pour voir la météo.',\n      pleaseSearchForecast: 'Veuillez rechercher une ville pour voir les prévisions.',\n      min: 'min',\n      max: 'max',\n      temperature: 'Température',\n      humidity: 'Humidité',\n      windSpeed: 'Vitesse du Vent',\n      pressure: 'Pression',\n      visibility: 'Visibilité',\n      sunrise: 'Lever du Soleil',\n      sunset: 'Coucher du Soleil',\n      showChart: 'Afficher le Graphique',\n      hideChart: 'Masquer le Graphique',\n      footerTitle: 'Tableau de Bord Météo',\n      footerDescription: 'Obtenez des informations météorologiques précises pour n\\'importe quelle ville du monde',\n      madeWith: 'Fait avec',\n      by: 'par',\n      developer: 'Équipe Weather App',\n      version: 'Version',\n      currentVersion: '1.0.0',\n      language: 'Langue',\n      selectLanguage: 'Sélectionner la Langue'\n    }\n  },\n  de: {\n    name: 'Deutsch',\n    flag: '🇩🇪',\n    translations: {\n      searchPlaceholder: 'Nach einer Stadt oder einem Land suchen...',\n      searchButton: 'Suchen',\n      today: 'HEUTE',\n      fiveDays: '5 TAGE',\n      selectCity: 'Wählen Sie eine Stadt',\n      pleaseSearch: 'Bitte suchen Sie nach einer Stadt, um das Wetter zu sehen.',\n      pleaseSearchForecast: 'Bitte suchen Sie nach einer Stadt, um die Vorhersage zu sehen.',\n      min: 'min',\n      max: 'max',\n      temperature: 'Temperatur',\n      humidity: 'Luftfeuchtigkeit',\n      windSpeed: 'Windgeschwindigkeit',\n      pressure: 'Druck',\n      visibility: 'Sichtweite',\n      sunrise: 'Sonnenaufgang',\n      sunset: 'Sonnenuntergang',\n      showChart: 'Diagramm Anzeigen',\n      hideChart: 'Diagramm Ausblenden',\n      footerTitle: 'Wetter-Dashboard',\n      footerDescription: 'Erhalten Sie genaue Wetterinformationen für jede Stadt weltweit',\n      madeWith: 'Gemacht mit',\n      by: 'von',\n      developer: 'Weather App Team',\n      version: 'Version',\n      currentVersion: '1.0.0',\n      language: 'Sprache',\n      selectLanguage: 'Sprache Auswählen'\n    }\n  },\n  it: {\n    name: 'Italiano',\n    flag: '🇮🇹',\n    translations: {\n      searchPlaceholder: 'Cerca una città o un paese...',\n      searchButton: 'Cerca',\n      today: 'OGGI',\n      fiveDays: '5 GIORNI',\n      selectCity: 'Seleziona una città',\n      pleaseSearch: 'Per favore cerca una città per vedere il meteo.',\n      pleaseSearchForecast: 'Per favore cerca una città per vedere le previsioni.',\n      min: 'min',\n      max: 'max',\n      temperature: 'Temperatura',\n      humidity: 'Umidità',\n      windSpeed: 'Velocità del Vento',\n      pressure: 'Pressione',\n      visibility: 'Visibilità',\n      sunrise: 'Alba',\n      sunset: 'Tramonto',\n      showChart: 'Mostra Grafico',\n      hideChart: 'Nascondi Grafico',\n      footerTitle: 'Dashboard Meteo',\n      footerDescription: 'Ottieni informazioni meteorologiche precise per qualsiasi città nel mondo',\n      madeWith: 'Fatto con',\n      by: 'da',\n      developer: 'Team Weather App',\n      version: 'Versione',\n      currentVersion: '1.0.0',\n      language: 'Lingua',\n      selectLanguage: 'Seleziona Lingua'\n    }\n  },\n  pt: {\n    name: 'Português',\n    flag: '🇵🇹',\n    translations: {\n      searchPlaceholder: 'Pesquisar uma cidade ou país...',\n      searchButton: 'Pesquisar',\n      today: 'HOJE',\n      fiveDays: '5 DIAS',\n      selectCity: 'Selecione uma cidade',\n      pleaseSearch: 'Por favor pesquise uma cidade para ver o clima.',\n      pleaseSearchForecast: 'Por favor pesquise uma cidade para ver a previsão.',\n      min: 'mín',\n      max: 'máx',\n      temperature: 'Temperatura',\n      humidity: 'Umidade',\n      windSpeed: 'Velocidade do Vento',\n      pressure: 'Pressão',\n      visibility: 'Visibilidade',\n      sunrise: 'Nascer do Sol',\n      sunset: 'Pôr do Sol',\n      showChart: 'Mostrar Gráfico',\n      hideChart: 'Ocultar Gráfico',\n      footerTitle: 'Painel do Clima',\n      footerDescription: 'Obtenha informações meteorológicas precisas para qualquer cidade do mundo',\n      madeWith: 'Feito com',\n      by: 'por',\n      developer: 'Equipe Weather App',\n      version: 'Versão',\n      currentVersion: '1.0.0',\n      language: 'Idioma',\n      selectLanguage: 'Selecionar Idioma'\n    }\n  },\n  ru: {\n    name: 'Русский',\n    flag: '🇷🇺',\n    translations: {\n      searchPlaceholder: 'Поиск города или страны...',\n      searchButton: 'Поиск',\n      today: 'СЕГОДНЯ',\n      fiveDays: '5 ДНЕЙ',\n      selectCity: 'Выберите город',\n      pleaseSearch: 'Пожалуйста, найдите город, чтобы увидеть погоду.',\n      pleaseSearchForecast: 'Пожалуйста, найдите город, чтобы увидеть прогноз.',\n      min: 'мин',\n      max: 'макс',\n      temperature: 'Температура',\n      humidity: 'Влажность',\n      windSpeed: 'Скорость Ветра',\n      pressure: 'Давление',\n      visibility: 'Видимость',\n      sunrise: 'Восход',\n      sunset: 'Закат',\n      showChart: 'Показать График',\n      hideChart: 'Скрыть График',\n      footerTitle: 'Погодная Панель',\n      footerDescription: 'Получите точную информацию о погоде для любого города в мире',\n      madeWith: 'Сделано с',\n      by: 'от',\n      developer: 'Команда Weather App',\n      version: 'Версия',\n      currentVersion: '1.0.0',\n      language: 'Язык',\n      selectLanguage: 'Выбрать Язык'\n    }\n  },\n  ja: {\n    name: '日本語',\n    flag: '🇯🇵',\n    translations: {\n      searchPlaceholder: '都市や国を検索...',\n      searchButton: '検索',\n      today: '今日',\n      fiveDays: '5日間',\n      selectCity: '都市を選択',\n      pleaseSearch: '天気を見るには都市を検索してください。',\n      pleaseSearchForecast: '予報を見るには都市を検索してください。',\n      min: '最低',\n      max: '最高',\n      temperature: '気温',\n      humidity: '湿度',\n      windSpeed: '風速',\n      pressure: '気圧',\n      visibility: '視界',\n      sunrise: '日の出',\n      sunset: '日の入り',\n      showChart: 'グラフを表示',\n      hideChart: 'グラフを隠す',\n      footerTitle: '天気ダッシュボード',\n      footerDescription: '世界中のどの都市でも正確な天気情報を取得',\n      madeWith: 'で作成',\n      by: 'by',\n      developer: 'Weather App チーム',\n      version: 'バージョン',\n      currentVersion: '1.0.0',\n      language: '言語',\n      selectLanguage: '言語を選択'\n    }\n  },\n  ko: {\n    name: '한국어',\n    flag: '🇰🇷',\n    translations: {\n      searchPlaceholder: '도시나 국가 검색...',\n      searchButton: '검색',\n      today: '오늘',\n      fiveDays: '5일',\n      selectCity: '도시를 선택하세요',\n      pleaseSearch: '날씨를 보려면 도시를 검색하세요.',\n      pleaseSearchForecast: '예보를 보려면 도시를 검색하세요.',\n      min: '최저',\n      max: '최고',\n      temperature: '기온',\n      humidity: '습도',\n      windSpeed: '풍속',\n      pressure: '기압',\n      visibility: '가시거리',\n      sunrise: '일출',\n      sunset: '일몰',\n      showChart: '차트 표시',\n      hideChart: '차트 숨기기',\n      footerTitle: '날씨 대시보드',\n      footerDescription: '전 세계 어느 도시든 정확한 날씨 정보를 얻으세요',\n      madeWith: '로 제작',\n      by: 'by',\n      developer: 'Weather App 팀',\n      version: '버전',\n      currentVersion: '1.0.0',\n      language: '언어',\n      selectLanguage: '언어 선택'\n    }\n  },\n  zh: {\n    name: '中文',\n    flag: '🇨🇳',\n    translations: {\n      searchPlaceholder: '搜索城市或国家...',\n      searchButton: '搜索',\n      today: '今天',\n      fiveDays: '5天',\n      selectCity: '选择城市',\n      pleaseSearch: '请搜索城市以查看天气。',\n      pleaseSearchForecast: '请搜索城市以查看预报。',\n      min: '最低',\n      max: '最高',\n      temperature: '温度',\n      humidity: '湿度',\n      windSpeed: '风速',\n      pressure: '气压',\n      visibility: '能见度',\n      sunrise: '日出',\n      sunset: '日落',\n      showChart: '显示图表',\n      hideChart: '隐藏图表',\n      footerTitle: '天气仪表板',\n      footerDescription: '获取全球任何城市的准确天气信息',\n      madeWith: '制作',\n      by: 'by',\n      developer: 'Weather App 团队',\n      version: '版本',\n      currentVersion: '1.0.0',\n      language: '语言',\n      selectLanguage: '选择语言'\n    }\n  },\n  ar: {\n    name: 'العربية',\n    flag: '🇸🇦',\n    translations: {\n      searchPlaceholder: 'البحث عن مدينة أو بلد...',\n      searchButton: 'بحث',\n      today: 'اليوم',\n      fiveDays: '5 أيام',\n      selectCity: 'اختر مدينة',\n      pleaseSearch: 'يرجى البحث عن مدينة لرؤية الطقس.',\n      pleaseSearchForecast: 'يرجى البحث عن مدينة لرؤية التوقعات.',\n      min: 'الحد الأدنى',\n      max: 'الحد الأقصى',\n      temperature: 'درجة الحرارة',\n      humidity: 'الرطوبة',\n      windSpeed: 'سرعة الرياح',\n      pressure: 'الضغط',\n      visibility: 'الرؤية',\n      sunrise: 'شروق الشمس',\n      sunset: 'غروب الشمس',\n      showChart: 'إظهار الرسم البياني',\n      hideChart: 'إخفاء الرسم البياني',\n      footerTitle: 'لوحة الطقس',\n      footerDescription: 'احصل على معلومات دقيقة عن الطقس لأي مدينة في العالم',\n      madeWith: 'صنع بـ',\n      by: 'بواسطة',\n      developer: 'فريق تطبيق الطقس',\n      version: 'الإصدار',\n      currentVersion: '1.0.0',\n      language: 'اللغة',\n      selectLanguage: 'اختر اللغة'\n    }\n  },\n  hi: {\n    name: 'हिन्दी',\n    flag: '🇮🇳',\n    translations: {\n      searchPlaceholder: 'शहर या देश खोजें...',\n      searchButton: 'खोजें',\n      today: 'आज',\n      fiveDays: '5 दिन',\n      selectCity: 'शहर चुनें',\n      pleaseSearch: 'कृपया मौसम देखने के लिए शहर खोजें।',\n      pleaseSearchForecast: 'कृपया पूर्वानुमान देखने के लिए शहर खोजें।',\n      min: 'न्यूनतम',\n      max: 'अधिकतम',\n      temperature: 'तापमान',\n      humidity: 'आर्द्रता',\n      windSpeed: 'हवा की गति',\n      pressure: 'दबाव',\n      visibility: 'दृश्यता',\n      sunrise: 'सूर्योदय',\n      sunset: 'सूर्यास्त',\n      showChart: 'चार्ट दिखाएं',\n      hideChart: 'चार्ट छिपाएं',\n      footerTitle: 'मौसम डैशबोर्ड',\n      footerDescription: 'दुनिया के किसी भी शहर के लिए सटीक मौसम की जानकारी प्राप्त करें',\n      madeWith: 'के साथ बनाया',\n      by: 'द्वारा',\n      developer: 'Weather App टीम',\n      version: 'संस्करण',\n      currentVersion: '1.0.0',\n      language: 'भाषा',\n      selectLanguage: 'भाषा चुनें'\n    }\n  }\n};\n\n// Current language\nlet currentLanguage = 'en';\n\n// Language switcher functions\nexport function getCurrentLanguage() {\n  return currentLanguage;\n}\n\nexport function setLanguage(lang) {\n  if (languages[lang]) {\n    currentLanguage = lang;\n    localStorage.setItem('weatherAppLanguage', lang);\n    updateUILanguage();\n  }\n}\n\nexport function getTranslation(key) {\n  const lang = languages[currentLanguage];\n  return lang ? lang.translations[key] || key : key;\n}\n\nexport function getLanguageName(langCode) {\n  return languages[langCode] ? languages[langCode].name : langCode;\n}\n\nexport function getLanguageFlag(langCode) {\n  return languages[langCode] ? languages[langCode].flag : '🌐';\n}\n\n// Initialize language from localStorage\nexport function initLanguage() {\n  const savedLang = localStorage.getItem('weatherAppLanguage');\n  if (savedLang && languages[savedLang]) {\n    currentLanguage = savedLang;\n  } else {\n    // Auto-detect language from browser\n    const browserLang = navigator.language.split('-')[0];\n    if (languages[browserLang]) {\n      currentLanguage = browserLang;\n    }\n  }\n}\n\n// Update UI language\nfunction updateUILanguage() {\n  // Trigger a custom event to notify components\n  window.dispatchEvent(new CustomEvent('languageChanged', {\n    detail: { language: currentLanguage }\n  }));\n}\n\n// Get all available languages\nexport function getAvailableLanguages() {\n  return Object.keys(languages);\n}\n","import { initHeader } from './ui/header.js';\nimport { fetchCurrentWeather, fetchFiveDayForecast, fetchCityscapeImage } from './api.js';\nimport { renderTodayWeather } from './ui/home.js';\nimport { renderFiveDayForecast } from './ui/fiveDays.js';\nimport { getRandomQuote } from './ui/quote.js';\nimport { renderForecastChart } from './ui/chart.js';\nimport { renderFooter, initFooter } from './ui/footer.js';\nimport { initLanguage, getTranslation } from './i18n.js';\n\n// Main app logic\nlet DEFAULT_CITY = 'Kyiv';\nlet DEFAULT_COUNTRY = 'UA';\nlet currentCity = '';\nlet currentView = 'today'; // 'today' or 'fiveDays'\nlet expandedDate = '';\nlet allExpanded = false;\nlet showChart = false;\nlet errorMessage = '';\nlet lastWeatherData = null;\nlet lastForecastData = null;\n\nfunction renderDashboard(weatherData, forecastData) {\n  // Weather Card\n  let weatherCardHTML = '';\n  let navButtonsHTML = '';\n  if (currentView === 'today') {\n    if (weatherData) {\n      weatherCardHTML = renderTodayWeather(weatherData);\n      navButtonsHTML = `\n        <div id=\"nav-buttons\">\n          <button id=\"btn-today\" class=\"nav-btn active\">${getTranslation('today')}</button>\n          <button id=\"btn-five-days\" class=\"nav-btn\">${getTranslation('fiveDays')}</button>\n        </div>\n      `;\n    } else {\n      weatherCardHTML = `<section class=\"today-weather-card\"><div class=\"weather-card-overlay\"><div class=\"weather-card-header\"><span class=\"weather-city\">${getTranslation('selectCity')}</span></div><div class=\"weather-temp-main\">--°C</div><div class=\"weather-minmax\">${getTranslation('min')} --° / ${getTranslation('max')} --°</div></div></section>`;\n      navButtonsHTML = '';\n    }\n  } else {\n    weatherCardHTML = '';\n    navButtonsHTML = `\n      <div id=\"nav-buttons\">\n        <button id=\"btn-today\" class=\"nav-btn\">${getTranslation('today')}</button>\n        <button id=\"btn-five-days\" class=\"nav-btn active\">${getTranslation('fiveDays')}</button>\n        </div>\n      `;\n  }\n\n  // Main Content (Today or 5 Days)\n  let mainContentHTML = '';\n  if (currentView === 'today') {\n    if (weatherData) {\n      mainContentHTML = '';\n      } else {\n    mainContentHTML = `<div class=\"welcome-centered\"><div class=\"welcome-message\">${getTranslation('pleaseSearch')}</div></div>`;\n  }\n} else if (currentView === 'fiveDays') {\n  if (forecastData) {\n    // Get country information from weather data\n    let countryName = '';\n    if (weatherData && weatherData.sys && weatherData.sys.country) {\n      const countryCode = weatherData.sys.country;\n      // Use the same country names mapping from header.js\n      const countryNames = {\n        'TH': 'Thailand', 'US': 'United States', 'GB': 'United Kingdom', 'FR': 'France',\n        'UA': 'Ukraine', 'PL': 'Poland', 'AU': 'Australia', 'CA': 'Canada', 'DE': 'Germany',\n        'IT': 'Italy', 'ES': 'Spain', 'JP': 'Japan', 'CN': 'China', 'IN': 'India',\n        'BR': 'Brazil', 'MX': 'Mexico', 'RU': 'Russia', 'KR': 'South Korea',\n        'NL': 'Netherlands', 'SE': 'Sweden', 'NO': 'Norway', 'DK': 'Denmark',\n        'FI': 'Finland', 'CH': 'Switzerland', 'AT': 'Austria', 'BE': 'Belgium',\n        'PT': 'Portugal', 'GR': 'Greece', 'IE': 'Ireland', 'NZ': 'New Zealand',\n        'VN': 'Vietnam', 'SG': 'Singapore', 'MY': 'Malaysia', 'ID': 'Indonesia',\n        'PH': 'Philippines', 'TR': 'Turkey', 'SA': 'Saudi Arabia', 'AE': 'United Arab Emirates',\n        'EG': 'Egypt', 'ZA': 'South Africa', 'NG': 'Nigeria', 'KE': 'Kenya',\n        'MA': 'Morocco', 'TN': 'Tunisia', 'DZ': 'Algeria', 'LY': 'Libya',\n        'SD': 'Sudan', 'ET': 'Ethiopia', 'GH': 'Ghana', 'CI': 'Ivory Coast',\n        'SN': 'Senegal', 'ML': 'Mali', 'BF': 'Burkina Faso', 'NE': 'Niger',\n        'TD': 'Chad', 'CF': 'Central African Republic', 'CM': 'Cameroon',\n        'GQ': 'Equatorial Guinea', 'GA': 'Gabon', 'CG': 'Republic of the Congo',\n        'CD': 'Democratic Republic of the Congo', 'AO': 'Angola', 'ZM': 'Zambia',\n        'ZW': 'Zimbabwe', 'BW': 'Botswana', 'NA': 'Namibia', 'SZ': 'Eswatini',\n        'LS': 'Lesotho', 'MG': 'Madagascar', 'MU': 'Mauritius', 'SC': 'Seychelles',\n        'KM': 'Comoros', 'DJ': 'Djibouti', 'SO': 'Somalia', 'ER': 'Eritrea',\n        'SS': 'South Sudan', 'RW': 'Rwanda', 'BI': 'Burundi', 'TZ': 'Tanzania',\n        'UG': 'Uganda', 'MZ': 'Mozambique', 'MW': 'Malawi'\n      };\n      countryName = countryNames[countryCode] || countryCode;\n    }\n    mainContentHTML = renderFiveDayForecast(forecastData, allExpanded, showChart, currentCity, countryName);\n    if (showChart) {\n      mainContentHTML += renderForecastChart(forecastData);\n    }\n  } else {\n    mainContentHTML = `<div class=\"welcome-centered\"><div class=\"welcome-message\">${getTranslation('pleaseSearchForecast')}</div></div>`;\n  }\n}\n\n  // Date/Time Section\n  let dateTimeHTML = '';\n  if (weatherData) {\n    const now = new Date();\n    const day = now.toLocaleString('en-US', { weekday: 'short' });\n    const date = now.getDate();\n    const month = now.toLocaleString('en-US', { month: 'long' });\n    const time = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    let sunrise = '', sunset = '';\n    if (weatherData.sys && weatherData.sys.sunrise && weatherData.sys.sunset) {\n      sunrise = new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n      sunset = new Date(weatherData.sys.sunset * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    }\n    dateTimeHTML = `\n      <div class=\"date-time-section\">\n        <div class=\"date-big\"><span class=\"date-num\">${date}<sup>th</sup></span> <span class=\"date-day\">${day}</span></div>\n        <div class=\"date-month\">${month}</div>\n        <div class=\"date-time-row\">\n          <span class=\"date-time-clock\">${time}</span>\n          <span class=\"date-sunrise\"><span class=\"sun-icon\">🌅</span>${sunrise}</span>\n          <span class=\"date-sunset\"><span class=\"sunset-icon\">🌇</span>${sunset}</span>\n        </div>\n      </div>\n    `;\n  } else {\n    dateTimeHTML = `<div class=\"date-time-section\"><div class=\"date-big\"><span class=\"date-num\">--<sup>th</sup></span> <span class=\"date-day\">---</span></div><div class=\"date-month\">------</div><div class=\"date-time-row\"><span class=\"date-time-clock\">--:--</span><span class=\"date-sunrise\"><span class=\"sun-icon\">🌅</span>--:--</span><span class=\"date-sunset\"><span class=\"sunset-icon\">🌇</span>--:--</span></div></div>`;\n  }\n\n  // Quote Section\n  const quoteHTML = getRandomQuote();\n\n  // Main App Layout\n  const app = document.getElementById('app');\n  const isMobile = window.innerWidth <= 768;\n  \n  if (currentView === 'fiveDays') {\n    app.innerHTML = `\n      <div id=\"header-root\"></div>\n      ${navButtonsHTML}\n      ${mainContentHTML}\n      ${renderFooter()}\n    `;\n  } else {\n    app.innerHTML = `\n      <div id=\"header-root\"></div>\n      <div class=\"weather-right-group\">\n        ${weatherCardHTML}\n        ${navButtonsHTML}\n      </div>\n      ${mainContentHTML}\n      ${currentView === 'today' ? dateTimeHTML : ''}\n      ${currentView === 'today' ? quoteHTML : ''}\n      ${renderFooter()}\n    `;\n  }\n  // Add or remove right-align class based on currentView\n  const weatherCard = document.querySelector('.today-weather-card');\n  const navButtons = document.getElementById('nav-buttons');\n  if (currentView === 'today') {\n    if (weatherCard) weatherCard.classList.add('right-align');\n    if (navButtons) navButtons.classList.add('right-align');\n  } else {\n    if (weatherCard) weatherCard.classList.remove('right-align');\n    if (navButtons) navButtons.classList.remove('right-align');\n  }\n  // Always re-initialize the header after rendering\n  initHeader(async (city) => {\n    currentView = 'today';\n    expandedDate = '';\n    showChart = false;\n    await updateDashboard(city);\n  });\n\n  // Move header into place\n  let headerRoot = document.getElementById('header-root');\n  if (!headerRoot) {\n    headerRoot = document.createElement('div');\n    headerRoot.id = 'header-root';\n    document.querySelector('.header-searchbar-root').appendChild(headerRoot);\n  }\n\n  // Add event listeners for nav buttons\n  const btnToday = document.getElementById('btn-today');\n  const btnFiveDays = document.getElementById('btn-five-days');\n  if (btnToday) btnToday.onclick = () => {\n    if (currentView !== 'today') {\n      currentView = 'today';\n      expandedDate = '';\n      showChart = false;\n      // Ensure dropdown is hidden when switching views\n      const dd = document.getElementById('country-dropdown-container');\n      if (dd) dd.style.display = 'none';\n      updateDashboard(currentCity);\n    }\n  };\n  if (btnFiveDays) btnFiveDays.onclick = () => {\n    if (currentView !== 'fiveDays') {\n      currentView = 'fiveDays';\n      expandedDate = '';\n      showChart = false;\n      // Ensure dropdown is hidden when switching views\n      const dd = document.getElementById('country-dropdown-container');\n      if (dd) dd.style.display = 'none';\n      updateDashboard(currentCity);\n    }\n  };\n  // Add event listeners for More Info and Show Chart buttons\n  if (currentView === 'fiveDays' && forecastData) {\n    document.querySelectorAll('.more-info-btn').forEach(btn => {\n      btn.onclick = (e) => {\n        allExpanded = !allExpanded;\n        updateDashboard(currentCity);\n      };\n    });\n    const showChartBtn = document.getElementById('show-chart-btn');\n    if (showChartBtn) {\n      showChartBtn.onclick = (e) => {\n        // Ripple effect\n        const ripple = document.createElement('span');\n        ripple.className = 'ripple';\n        const rect = showChartBtn.getBoundingClientRect();\n        ripple.style.width = ripple.style.height = Math.max(rect.width, rect.height) + 'px';\n        ripple.style.left = (e.clientX - rect.left - rect.width/2) + 'px';\n        ripple.style.top = (e.clientY - rect.top - rect.height/2) + 'px';\n        showChartBtn.appendChild(ripple);\n        setTimeout(() => ripple.remove(), 600);\n        // Toggle chart without triggering loading/fetch\n        showChart = !showChart;\n        renderDashboard(lastWeatherData, lastForecastData);\n      };\n    }\n  }\n}\n\nasync function setCityBackground(city, weatherDesc, countryName) {\n  const overlay = document.querySelector('.background-overlay');\n  if (!city) {\n    document.body.style.backgroundImage = '';\n    if (overlay) {\n      overlay.style.backgroundImage = '';\n      overlay.style.opacity = '0';\n    }\n    return;\n  }\n  \n  // Show loading state\n  if (overlay) {\n    overlay.style.opacity = '0.3';\n    overlay.style.transition = 'opacity 0.5s ease-in-out';\n  }\n  \n  let imageUrl = await fetchCityscapeImage(city, weatherDesc, countryName);\n  \n  if (imageUrl) {\n    if (overlay) {\n      overlay.style.display = 'block';\n      overlay.style.backgroundImage = `url('${imageUrl}')`;\n      overlay.style.backgroundSize = 'cover';\n      overlay.style.backgroundPosition = 'center';\n      overlay.style.backgroundRepeat = 'no-repeat';\n      overlay.style.opacity = '0.6';\n      overlay.style.transition = 'opacity 0.8s ease-in-out';\n      \n      // City name overlay removed\n    } else {\n      document.body.style.backgroundImage = `url('${imageUrl}')`;\n      document.body.style.backgroundSize = 'cover';\n      document.body.style.backgroundPosition = 'center';\n      document.body.style.backgroundRepeat = 'no-repeat';\n    }\n  } else {\n    if (overlay) {\n      overlay.style.display = 'none';\n      overlay.style.backgroundImage = '';\n      overlay.style.opacity = '0';\n    }\n    document.body.style.backgroundImage = '';\n    \n    // City name overlay removed\n  }\n}\n\n\n\nasync function updateDashboard(city) {\n  currentCity = city;\n  let weatherData = null;\n  let forecastData = null;\n  errorMessage = '';\n  \n  // Show loading state\n  showLoading(true);\n  \n  if (city) {\n    try {\n      weatherData = await fetchCurrentWeather(city);\n      forecastData = await fetchFiveDayForecast(city);\n      let weatherDesc = weatherData && weatherData.weather && weatherData.weather[0] ? weatherData.weather[0].main : '';\n      let countryName = weatherData && weatherData.sys && weatherData.sys.country ? weatherData.sys.country : '';\n      weatherDesc = weatherDesc ? weatherDesc.toLowerCase() : '';\n      setCityBackground(city.split(',')[0], weatherDesc, countryName); // Pass weather description for image search\n      // Cache latest data for instant re-renders (e.g., Show Chart toggle)\n      lastWeatherData = weatherData;\n      lastForecastData = forecastData;\n    } catch (err) {\n      errorMessage = 'City or country not found. Please try another.';\n      renderDashboard(null, null);\n      setCityBackground(null, null, null);\n      showLoading(false);\n      showErrorMessage(errorMessage);\n      return;\n    }\n  } else {\n    setCityBackground(null, null, null);\n  }\n  \n  // Hide loading state\n  showLoading(false);\n  renderDashboard(weatherData, forecastData);\n}\n\nfunction showLoading(show) {\n  let loadingElement = document.querySelector('.loading-overlay');\n  \n  if (show) {\n    if (!loadingElement) {\n      loadingElement = createLoadingOverlay();\n    }\n    loadingElement.style.display = 'flex';\n  } else {\n    if (loadingElement) {\n      loadingElement.style.display = 'none';\n    }\n  }\n}\n\nfunction createLoadingOverlay() {\n  const overlay = document.createElement('div');\n  overlay.className = 'loading-overlay';\n  overlay.innerHTML = `\n    <div class=\"loading-content\">\n      <div class=\"loading-spinner\"></div>\n      <div class=\"loading-text\">Searching weather data...</div>\n    </div>\n  `;\n  document.body.appendChild(overlay);\n  return overlay;\n}\n\nfunction showErrorMessage(message) {\n  // Remove any existing error message\n  const existingError = document.querySelector('.error-message-overlay');\n  if (existingError) {\n    existingError.remove();\n  }\n  \n  // Create new error message\n  const errorOverlay = document.createElement('div');\n  errorOverlay.className = 'error-message-overlay';\n  errorOverlay.innerHTML = `\n    <div class=\"error-message-content\">\n      <div class=\"error-icon\">⚠️</div>\n      <div class=\"error-text\">${message}</div>\n    </div>\n  `;\n  document.body.appendChild(errorOverlay);\n  \n  // Auto-dismiss after 3 seconds\n  setTimeout(() => {\n    if (errorOverlay.parentNode) {\n      errorOverlay.style.opacity = '0';\n      errorOverlay.style.transform = 'translateY(-20px)';\n      setTimeout(() => {\n        if (errorOverlay.parentNode) {\n          errorOverlay.remove();\n        }\n      }, 300);\n    }\n  }, 3000);\n}\n\nwindow.addEventListener('DOMContentLoaded', async () => {\n  // Initialize language system\n  initLanguage();\n  \n  // Initialize header\n  initHeader(async (city) => {\n    currentView = 'today';\n    expandedDate = '';\n    showChart = false;\n    await updateDashboard(city);\n  });\n  \n  // Initialize footer\n  initFooter();\n  \n  // On first load, use default city and country\n  await updateDashboard(`${DEFAULT_CITY},${DEFAULT_COUNTRY}`);\n  \n  // Listen for language changes\n  window.addEventListener('languageChanged', () => {\n    updateUILanguage();\n  });\n});\n\n// Function to update UI language\nfunction updateUILanguage() {\n  // Re-render the dashboard with new language\n  if (lastWeatherData || lastForecastData) {\n    renderDashboard(lastWeatherData, lastForecastData);\n  }\n} ","// Header functionality for the weather app\nlet savedCities = ['Kyiv', 'Paris', 'Vinnytsia', 'Warsaw'];\nlet currentCity = 'Kyiv';\nlet hiddenCities = []; // Track cities that are added but hidden\n\n// Search state variables - simplified since we're not using real-time search\nlet searchResults = [];\nlet currentPage = 0;\nlet itemsPerPage = 4;\nlet totalPages = 0;\n\n// Country data for dropdown suggestions\nconst countryData = [\n  { name: 'Afghanistan', code: 'AF', cities: ['Kabul', 'Kandahar', 'Herat'] },\n  { name: 'Albania', code: 'AL', cities: ['Tirana', 'Durrës', 'Vlorë'] },\n  { name: 'Algeria', code: 'DZ', cities: ['Algiers', 'Oran', 'Constantine'] },\n  { name: 'Argentina', code: 'AR', cities: ['Buenos Aires', 'Córdoba', 'Rosario'] },\n  { name: 'Australia', code: 'AU', cities: ['Sydney', 'Melbourne', 'Brisbane'] },\n  { name: 'Austria', code: 'AT', cities: ['Vienna', 'Graz', 'Linz'] },\n  { name: 'Belgium', code: 'BE', cities: ['Brussels', 'Antwerp', 'Ghent'] },\n  { name: 'Brazil', code: 'BR', cities: ['São Paulo', 'Rio de Janeiro', 'Brasília'] },\n  { name: 'Canada', code: 'CA', cities: ['Toronto', 'Montreal', 'Vancouver'] },\n  { name: 'Chile', code: 'CL', cities: ['Santiago', 'Valparaíso', 'Concepción'] },\n  { name: 'China', code: 'CN', cities: ['Beijing', 'Shanghai', 'Guangzhou'] },\n  { name: 'Colombia', code: 'CO', cities: ['Bogotá', 'Medellín', 'Cali'] },\n  { name: 'Czech Republic', code: 'CZ', cities: ['Prague', 'Brno', 'Ostrava'] },\n  { name: 'Denmark', code: 'DK', cities: ['Copenhagen', 'Aarhus', 'Odense'] },\n  { name: 'Egypt', code: 'EG', cities: ['Cairo', 'Alexandria', 'Giza'] },\n  { name: 'Finland', code: 'FI', cities: ['Helsinki', 'Espoo', 'Tampere'] },\n  { name: 'France', code: 'FR', cities: ['Paris', 'Marseille', 'Lyon'] },\n  { name: 'Germany', code: 'DE', cities: ['Berlin', 'Hamburg', 'Munich'] },\n  { name: 'Greece', code: 'GR', cities: ['Athens', 'Thessaloniki', 'Patras'] },\n  { name: 'Hungary', code: 'HU', cities: ['Budapest', 'Debrecen', 'Szeged'] },\n  { name: 'India', code: 'IN', cities: ['Mumbai', 'Delhi', 'Bangalore'] },\n  { name: 'Indonesia', code: 'ID', cities: ['Jakarta', 'Surabaya', 'Bandung'] },\n  { name: 'Ireland', code: 'IE', cities: ['Dublin', 'Cork', 'Galway'] },\n  { name: 'Italy', code: 'IT', cities: ['Rome', 'Milan', 'Naples'] },\n  { name: 'Japan', code: 'JP', cities: ['Tokyo', 'Osaka', 'Nagoya'] },\n  { name: 'Kenya', code: 'KE', cities: ['Nairobi', 'Mombasa', 'Kisumu'] },\n  { name: 'Malaysia', code: 'MY', cities: ['Kuala Lumpur', 'George Town', 'Johor Bahru'] },\n  { name: 'Mexico', code: 'MX', cities: ['Mexico City', 'Guadalajara', 'Monterrey'] },\n  { name: 'Morocco', code: 'MA', cities: ['Casablanca', 'Rabat', 'Fez'] },\n  { name: 'Netherlands', code: 'NL', cities: ['Amsterdam', 'Rotterdam', 'The Hague'] },\n  { name: 'New Zealand', code: 'NZ', cities: ['Auckland', 'Wellington', 'Christchurch'] },\n  { name: 'Nigeria', code: 'NG', cities: ['Lagos', 'Kano', 'Ibadan'] },\n  { name: 'Norway', code: 'NO', cities: ['Oslo', 'Bergen', 'Trondheim'] },\n  { name: 'Philippines', code: 'PH', cities: ['Manila', 'Quezon City', 'Davao City'] },\n  { name: 'Poland', code: 'PL', cities: ['Warsaw', 'Kraków', 'Łódź'] },\n  { name: 'Portugal', code: 'PT', cities: ['Lisbon', 'Porto', 'Braga'] },\n  { name: 'Romania', code: 'RO', cities: ['Bucharest', 'Cluj-Napoca', 'Timișoara'] },\n  { name: 'Russia', code: 'RU', cities: ['Moscow', 'Saint Petersburg', 'Novosibirsk'] },\n  { name: 'Saudi Arabia', code: 'SA', cities: ['Riyadh', 'Jeddah', 'Mecca'] },\n  { name: 'Singapore', code: 'SG', cities: ['Singapore'] },\n  { name: 'South Africa', code: 'ZA', cities: ['Johannesburg', 'Cape Town', 'Durban'] },\n  { name: 'South Korea', code: 'KR', cities: ['Seoul', 'Busan', 'Incheon'] },\n  { name: 'Spain', code: 'ES', cities: ['Madrid', 'Barcelona', 'Valencia'] },\n  { name: 'Sweden', code: 'SE', cities: ['Stockholm', 'Gothenburg', 'Malmö'] },\n  { name: 'Switzerland', code: 'CH', cities: ['Zurich', 'Geneva', 'Basel'] },\n  { name: 'Thailand', code: 'TH', cities: ['Bangkok', 'Chiang Mai', 'Pattaya'] },\n  { name: 'Turkey', code: 'TR', cities: ['Istanbul', 'Ankara', 'Izmir'] },\n  { name: 'Ukraine', code: 'UA', cities: ['Kyiv', 'Kharkiv', 'Odesa'] },\n  { name: 'United Arab Emirates', code: 'AE', cities: ['Dubai', 'Abu Dhabi', 'Sharjah'] },\n  { name: 'United Kingdom', code: 'GB', cities: ['London', 'Birmingham', 'Manchester'] },\n  { name: 'United States', code: 'US', cities: ['New York', 'Los Angeles', 'Chicago'] },\n  { name: 'Vietnam', code: 'VN', cities: ['Ho Chi Minh City', 'Hanoi', 'Da Nang'] }\n];\n\nexport function initHeader(onCitySelect) {\n  const headerHTML = `\n    <header class=\"header\">\n      \n      <div class=\"header-searchbar\">\n        <div class=\"search-input-wrapper\" style=\"width: 100%; max-width: 1000px; margin: 0 auto; position: relative;\">\n          <span class=\"searchbar-icon-inside\" style=\"z-index: 5;\">🔍</span>\n          <input type=\"text\" class=\"search-input-rounded\" placeholder=\"Search for a city or country...\" id=\"city-search\" autocomplete=\"off\" spellcheck=\"false\" maxlength=\"100\" style=\"position: relative; z-index: 1; background: transparent !important; color: black !important; border: none !important; padding: 16px 110px 16px 44px !important; width: 100% !important; box-sizing: border-box !important; font-size: 16px !important; border-radius: 25px !important; outline: none !important;\">\n          <button class=\"search-btn-inside\" id=\"search-btn\" style=\"background: #1976d2 !important; color: white !important; border: none !important; border-radius: 22px !important; height: 45px !important; width: auto !important; min-width: 96px !important; padding: 0 16px !important; display: flex !important; align-items: center !important; justify-content: center !important; cursor: pointer !important; margin-right: 8px !important; box-shadow: none !important; transition: none !important; z-index: 6;\">\n            <span class=\"search-label\" style=\"font-weight: 700; letter-spacing: 0.3px;\">Search</span>\n          </button>\n          <!-- Enhanced Country Dropdown Container (aligned to input wrapper) -->\n          <div class=\"country-dropdown-container\" id=\"country-dropdown-container\" style=\"display: none; position: absolute; top: calc(100% + 8px); left: 0; width: 100%; background: #ffffff; border: 1px solid #e5e7eb; border-radius: 16px; box-shadow: 0 12px 32px rgba(0,0,0,0.12); z-index: 10000; max-height: 320px; overflow-y: auto; backdrop-filter: blur(8px);\">\n          <!-- Country suggestions will be populated here -->\n        </div>\n        </div>\n        \n        <!-- Quick Country Access Buttons -->\n        <div class=\"quick-countries\" style=\"display: flex; gap: 8px; margin-top: 12px; flex-wrap: wrap; justify-content: center;\">\n          <button class=\"quick-country-btn\" data-country=\"US\" style=\"padding: 6px 12px; background: #e3f2fd; color: #1976d2; border: 1px solid #bbdefb; border-radius: 20px; cursor: pointer; font-size: 12px; font-weight: 500; transition: all 0.2s ease;\">🇺🇸 USA</button>\n          <button class=\"quick-country-btn\" data-country=\"GB\" style=\"padding: 6px 12px; background: #e3f2fd; color: #1976d2; border: 1px solid #bbdefb; border-radius: 20px; cursor: pointer; font-size: 12px; font-weight: 500; transition: all 0.2s ease;\">🇬🇧 UK</button>\n          <button class=\"quick-country-btn\" data-country=\"PH\" style=\"padding: 6px 12px; background: #e3f2fd; color: #1976d2; border: 1px solid #bbdefb; border-radius: 20px; cursor: pointer; font-size: 12px; font-weight: 500; transition: all 0.2s ease;\">🇵🇭 Philippines</button>\n          <button class=\"quick-country-btn\" data-country=\"JP\" style=\"padding: 6px 12px; background: #e3f2fd; color: #1976d2; border: 1px solid #bbdefb; border-radius: 20px; cursor: pointer; font-size: 12px; font-weight: 500; transition: all 0.2s ease;\">🇯🇵 Japan</button>\n          <button class=\"quick-country-btn\" data-country=\"AU\" style=\"padding: 6px 12px; background: #e3f2fd; color: #1976d2; border: 1px solid #bbdefb; border-radius: 20px; cursor: pointer; font-size: 12px; font-weight: 500; transition: all 0.2s ease;\">🇦🇺 Australia</button>\n        </div>\n        \n        <!-- Search Results Container - Hidden since we're not using real-time search -->\n        <div class=\"search-results-container\" id=\"search-results-container\" style=\"display: none;\">\n          <!-- Search results functionality removed for better user experience -->\n        </div>\n      </div>\n      \n      <div class=\"header-cities-chips-container\">\n        <button class=\"scroll-arrow scroll-left\" id=\"scroll-left\">‹</button>\n        <div class=\"header-cities-chips-scroll\">\n          <div class=\"header-cities-chips\" id=\"cities-chips\">\n            ${savedCities.map(city => `\n              <button class=\"header-city-chip ${city === currentCity ? 'selected' : ''}\" data-city=\"${city}\">\n                ${city}\n                <span class=\"chip-close\" data-city=\"${city}\">×</span>\n              </button>\n            `).join('')}\n          </div>\n        </div>\n        <button class=\"scroll-arrow scroll-right\" id=\"scroll-right\">›</button>\n        <button class=\"country-button\" id=\"country-button\" style=\"display: none;\" title=\"Country Info - Double click or press 'N' to scroll to next country\">🌍</button>\n      </div>\n    </header>\n  `;\n\n  // Find or create header container\n  let headerContainer = document.querySelector('.header-searchbar-root');\n  if (!headerContainer) {\n    headerContainer = document.createElement('div');\n    headerContainer.className = 'header-searchbar-root';\n    document.body.insertBefore(headerContainer, document.body.firstChild);\n  }\n  \n  headerContainer.innerHTML = headerHTML;\n\n  // Initialize event listeners\n  initializeHeaderEvents(onCitySelect);\n  \n\n}\n\nfunction initializeHeaderEvents(onCitySelect) {\n  const searchInput = document.getElementById('city-search');\n  const searchBtn = document.getElementById('search-btn');\n  const citiesChips = document.getElementById('cities-chips');\n  const scrollLeft = document.getElementById('scroll-left');\n  const scrollRight = document.getElementById('scroll-right');\n  const countryButton = document.getElementById('country-button');\n  const searchWrapper = document.querySelector('.search-input-wrapper');\n  const countryDropdown = document.getElementById('country-dropdown-container');\n  let hoverHideTimeout;\n  const keepCountryText = true;\n\n\n  // Search functionality - completely clean and simple\n  if (searchInput) {\n    console.log('Found search input:', searchInput);\n    \n    // Basic setup - ensure the input is editable\n    searchInput.setAttribute('autocomplete', 'off');\n    searchInput.setAttribute('spellcheck', 'false');\n    searchInput.setAttribute('type', 'text');\n    searchInput.setAttribute('inputmode', 'text');\n    \n    // Remove any potential interference\n    searchInput.removeAttribute('disabled');\n    searchInput.removeAttribute('readonly');\n    searchInput.style.pointerEvents = 'auto';\n    searchInput.style.userSelect = 'auto';\n    searchInput.style.caretColor = '#000';\n    \n    // Ensure the input is not inside a form that might interfere\n    if (searchInput.form) {\n      searchInput.form.removeAttribute('autocomplete');\n    }\n    \n    // Only handle Enter key - no other interference\n    searchInput.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        const city = searchInput.value.trim();\n        if (city) {\n          handleCitySelect(city, onCitySelect, true);\n        }\n      }\n    });\n\n    // Add input event listener for dropdown suggestions\n    searchInput.addEventListener('input', (e) => {\n      const query = e.target.value.trim().toLowerCase();\n      if (query.length >= 2) {\n        showCountryDropdown(query, onCitySelect);\n      } else if (query.length === 0) {\n        // Show popular countries when input is empty\n        showPopularCountries(onCitySelect);\n      } else {\n        hideCountryDropdown();\n      }\n    });\n\n    // Show popular countries when input is focused\n    searchInput.addEventListener('focus', () => {\n      if (searchInput.value.trim().length === 0) {\n        showPopularCountries(onCitySelect);\n      }\n    });\n\n    // Hide dropdown when input loses focus (with small delay for click)\n    searchInput.addEventListener('blur', () => {\n      setTimeout(() => hideCountryDropdown(), 200);\n    });\n\n    // Show dropdown on hover over input wrapper\n    if (searchWrapper && countryDropdown) {\n      searchWrapper.addEventListener('mouseenter', () => {\n        clearTimeout(hoverHideTimeout);\n        const current = searchInput.value.trim();\n        if (current.length >= 2) {\n          showCountryDropdown(current.toLowerCase(), onCitySelect, keepCountryText);\n        } else {\n          showPopularCountries(onCitySelect, keepCountryText);\n        }\n      });\n      searchWrapper.addEventListener('mouseleave', () => {\n        hoverHideTimeout = setTimeout(() => {\n          if (!countryDropdown.matches(':hover')) {\n            hideCountryDropdown();\n          }\n        }, 150);\n      });\n      countryDropdown.addEventListener('mouseenter', () => {\n        clearTimeout(hoverHideTimeout);\n      });\n      countryDropdown.addEventListener('mouseleave', () => {\n        hoverHideTimeout = setTimeout(() => {\n          if (!searchWrapper.matches(':hover')) {\n            hideCountryDropdown();\n          }\n        }, 150);\n      });\n    }\n\n    // No other event listeners that could interfere with typing\n    \n    // Removed auto-focus to avoid showing dropdown on view switches\n  }\n\n  if (searchBtn) {\n    searchBtn.addEventListener('click', () => {\n      const city = searchInput.value.trim();\n      if (city) {\n        // Show loading state\n        const originalContent = searchBtn.innerHTML;\n        searchBtn.innerHTML = '<span style=\"color: white !important; font-size: 16px !important;\">⏳</span>';\n        searchBtn.style.background = '#666 !important';\n        searchBtn.disabled = true;\n        \n        // Perform search\n        handleCitySelect(city, onCitySelect, true);\n        \n        // Reset button after a short delay\n        setTimeout(() => {\n          searchBtn.innerHTML = originalContent;\n          searchBtn.style.background = '#1976d2 !important';\n          searchBtn.disabled = false;\n        }, 2000);\n      }\n    });\n\n    // Remove hover effects for simpler mobile-friendly behavior\n  }\n\n  // Add event listeners for quick country buttons\n  const quickCountryBtns = document.querySelectorAll('.quick-country-btn');\n  quickCountryBtns.forEach(btn => {\n    btn.addEventListener('click', () => {\n      const countryCode = btn.dataset.country;\n      const country = countryData.find(c => c.code === countryCode);\n      if (country) {\n        // Immediately show country name in input field\n        searchInput.value = country.name;\n        searchInput.placeholder = `Search cities in ${country.name}...`;\n        searchInput.focus();\n        \n        // Show cities in that country\n        showCitiesInCountry(countryCode, country.name, onCitySelect);\n        \n        // Add visual feedback\n        btn.style.background = '#1976d2';\n        btn.style.color = 'white';\n        btn.style.transform = 'scale(1.05)';\n        btn.style.boxShadow = '0 4px 12px rgba(25, 118, 210, 0.4)';\n        \n        setTimeout(() => {\n          btn.style.background = '#e3f2fd';\n          btn.style.color = '#1976d2';\n          btn.style.transform = 'scale(1)';\n          btn.style.boxShadow = 'none';\n        }, 1000);\n      }\n    });\n\n    // Add hover effects for quick country buttons\n    btn.addEventListener('mouseenter', () => {\n      btn.style.transform = 'translateY(-2px)';\n      btn.style.boxShadow = '0 4px 12px rgba(25, 118, 210, 0.3)';\n    });\n    \n    btn.addEventListener('mouseleave', () => {\n      btn.style.transform = 'translateY(0)';\n      btn.style.boxShadow = 'none';\n    });\n  });\n\n  // Removed external main search and clear buttons in favor of the inline search button\n\n\n  // City chips functionality\n  if (citiesChips) {\n    citiesChips.addEventListener('click', (e) => {\n      if (e.target.classList.contains('header-city-chip')) {\n        const city = e.target.dataset.city;\n        handleCitySelect(city, onCitySelect);\n      } else if (e.target.classList.contains('chip-close')) {\n        const city = e.target.dataset.city;\n        removeCity(city);\n      }\n    });\n  }\n\n  // Enhanced scroll functionality\n  if (scrollLeft) {\n    scrollLeft.addEventListener('click', () => {\n      console.log('Left scroll arrow clicked'); // Debug log\n      const scrollAmount = Math.min(200, citiesChips.scrollLeft);\n      citiesChips.scrollBy({ left: -scrollAmount, behavior: 'smooth' });\n      // Show country button when scroll arrow is pressed\n      showCountryButton();\n    });\n  }\n\n  if (scrollRight) {\n    scrollRight.addEventListener('click', () => {\n      console.log('Right scroll arrow clicked'); // Debug log\n      const maxScroll = citiesChips.scrollWidth - citiesChips.clientWidth;\n      const remainingScroll = maxScroll - citiesChips.scrollLeft;\n      const scrollAmount = Math.min(200, remainingScroll);\n      citiesChips.scrollBy({ left: scrollAmount, behavior: 'smooth' });\n      // Show country button when scroll arrow is pressed\n      showCountryButton();\n    });\n  }\n\n  // Add country button scrolling functionality\n  let countryButtonScrollTimeout;\n  if (countryButton) {\n    countryButton.addEventListener('click', () => {\n      handleCountryButtonClick();\n    });\n    \n    // Add scroll to next country functionality\n    countryButton.addEventListener('dblclick', () => {\n      scrollToNextCountry();\n    });\n  }\n\n\n\n  // Update scroll arrows visibility\n  updateScrollArrows();\n  citiesChips.addEventListener('scroll', updateScrollArrows);\n  \n  // Add keyboard support for scrolling\n  citiesChips.addEventListener('keydown', (e) => {\n    if (e.key === 'ArrowLeft') {\n      e.preventDefault();\n      scrollLeft.click();\n    } else if (e.key === 'ArrowRight') {\n      e.preventDefault();\n      scrollRight.click();\n    } else if (e.key === 'Enter' && e.target.classList.contains('header-city-chip')) {\n      // Handle Enter key on city chips\n      const city = e.target.dataset.city;\n      if (city) {\n        handleCitySelect(city, onCitySelect);\n      }\n    }\n  });\n  \n  // Add global keyboard support for country button scrolling\n  // REMOVED: This was interfering with typing in the search input\n  // document.addEventListener('keydown', (e) => {\n  //   if (e.key === 'n' || e.key === 'N') {\n  //     // Press 'N' to scroll to next country\n  //     e.preventDefault();\n  //     scrollToNextCountry();\n  //   }\n  // });\n\n  // Pagination controls - simplified since we're not using real-time search\n  const paginationPrev = document.getElementById('pagination-prev');\n  const paginationNext = document.getElementById('pagination-next');\n\n  // These are kept for potential future use but not actively used\n  if (paginationPrev) {\n    paginationPrev.addEventListener('click', () => {\n      console.log('Previous page clicked');\n    });\n  }\n\n  if (paginationNext) {\n    paginationNext.addEventListener('click', () => {\n      console.log('Next page clicked');\n    });\n  }\n  \n  // Add touch/swipe support for mobile\n  let startX = 0;\n  let isDragging = false;\n  \n  citiesChips.addEventListener('touchstart', (e) => {\n    startX = e.touches[0].clientX;\n    isDragging = true;\n  });\n  \n  citiesChips.addEventListener('touchmove', (e) => {\n    if (!isDragging) return;\n    e.preventDefault();\n    const currentX = e.touches[0].clientX;\n    const diff = startX - currentX;\n    citiesChips.scrollLeft += diff;\n    startX = currentX;\n  });\n  \n  citiesChips.addEventListener('touchend', () => {\n    isDragging = false;\n  });\n  \n\n\n\n}\n\nfunction handleCitySelect(city, onCitySelect, isFromSearch = false) {\n  currentCity = city;\n  \n  // Hide country button when a new city is selected\n  hideCountryButton();\n  \n  // Add city to saved cities if not already there\n  if (!savedCities.includes(city) && !hiddenCities.includes(city)) {\n    if (isFromSearch) {\n      // If from search, add to bottom of hidden cities\n      hiddenCities.push(city);\n      updateCityChips(); // Update to show hidden chips\n    } else {\n      // If from chip click or next button, add to visible cities\n      savedCities.unshift(city);\n      if (savedCities.length > 10) {\n        savedCities.pop();\n      }\n      updateCityChips();\n    }\n  } else if (savedCities.includes(city)) {\n    // Move selected city to front\n    savedCities = savedCities.filter(c => c !== city);\n    savedCities.unshift(city);\n    updateCityChips();\n  }\n\n  // Clear search input only if it's not a country selection\n  const searchInput = document.getElementById('city-search');\n  if (searchInput && !searchInput.value.includes(' - ')) {\n    searchInput.value = '';\n  }\n\n  // Call the callback\n  if (onCitySelect) {\n    onCitySelect(city);\n  }\n}\n\nfunction removeCity(city) {\n  savedCities = savedCities.filter(c => c !== city);\n  hiddenCities = hiddenCities.filter(c => c !== city); // Also remove from hidden cities\n  \n  if (currentCity === city) {\n    currentCity = savedCities[0] || 'Kyiv';\n  }\n  updateCityChips();\n  \n\n}\n\nfunction updateCityChips() {\n  const citiesChips = document.getElementById('cities-chips');\n  if (citiesChips) {\n    // Combine visible cities and hidden cities (hidden ones are at the bottom and hidden)\n    const visibleChips = savedCities.map(city => `\n      <button class=\"header-city-chip ${city === currentCity ? 'selected' : ''}\" data-city=\"${city}\">\n        ${city}\n        <span class=\"chip-close\" data-city=\"${city}\">×</span>\n      </button>\n    `);\n    \n    const hiddenChips = hiddenCities.map(city => `\n      <button class=\"header-city-chip hidden-chip ${city === currentCity ? 'selected' : ''}\" data-city=\"${city}\">\n        ${city}\n        <span class=\"chip-close\" data-city=\"${city}\">×</span>\n      </button>\n    `);\n    \n    citiesChips.innerHTML = [...visibleChips, ...hiddenChips].join('');\n  }\n}\n\n\n\n\n\nfunction updateScrollArrows() {\n  const citiesChips = document.getElementById('cities-chips');\n  const scrollLeft = document.getElementById('scroll-left');\n  const scrollRight = document.getElementById('scroll-right');\n\n  if (citiesChips && scrollLeft && scrollRight) {\n    const isAtStart = citiesChips.scrollLeft <= 5; // Small threshold for better UX\n    const isAtEnd = citiesChips.scrollLeft >= citiesChips.scrollWidth - citiesChips.clientWidth - 5;\n    const hasOverflow = citiesChips.scrollWidth > citiesChips.clientWidth;\n\n    // Show/hide arrows with smooth transitions\n    scrollLeft.style.display = (isAtStart || !hasOverflow) ? 'none' : 'flex';\n    scrollRight.style.display = (isAtEnd || !hasOverflow) ? 'none' : 'flex';\n    \n    // Add visual feedback\n    scrollLeft.style.opacity = isAtStart ? '0.5' : '1';\n    scrollRight.style.opacity = isAtEnd ? '0.5' : '1';\n  }\n}\n\nfunction showCountryButton() {\n  const countryButton = document.getElementById('country-button');\n  if (countryButton) {\n    console.log('Showing country button'); // Debug log\n    \n    // Force the button to be visible\n    countryButton.style.display = 'flex';\n    countryButton.style.visibility = 'visible';\n    countryButton.style.opacity = '1';\n    countryButton.style.transform = 'translateY(-50%) scale(1)';\n    countryButton.style.animation = 'fadeInScale 0.3s ease-out';\n    \n    // Ensure it's above other elements\n    countryButton.style.zIndex = '1000';\n    \n    // Update the title to include scrolling functionality hint\n    countryButton.title = 'Country Info - Double click or press \"N\" to scroll to next country';\n    \n    console.log('Country button styles applied:', {\n      display: countryButton.style.display,\n      opacity: countryButton.style.opacity,\n      visibility: countryButton.style.visibility\n    });\n    \n    // Country button will stay visible until next scroll arrow press or manual click\n  } else {\n    console.log('Country button not found'); // Debug log\n  }\n}\n\nfunction hideCountryButton() {\n  const countryButton = document.getElementById('country-button');\n  if (countryButton) {\n    console.log('Hiding country button'); // Debug log\n    countryButton.style.animation = 'fadeOutScale 0.3s ease-out';\n    countryButton.style.opacity = '0';\n    setTimeout(() => {\n      countryButton.style.display = 'none';\n      countryButton.style.visibility = 'hidden';\n    }, 300);\n  }\n}\n\nfunction handleCountryButtonClick() {\n  // Get current city and show country information\n  const city = currentCity;\n  if (city) {\n    // You can implement country information display here\n    // For now, let's show a simple alert with the city name\n    alert(`Country information for ${city} would be displayed here.`);\n    \n    // Hide the button after clicking\n    hideCountryButton();\n  }\n}\n\nfunction scrollToNextCountry() {\n  const citiesChips = document.getElementById('cities-chips');\n  const countryButton = document.getElementById('country-button');\n  if (!citiesChips) return;\n  \n  // Add scrolling visual feedback to country button\n  if (countryButton) {\n    countryButton.classList.add('scrolling');\n    setTimeout(() => {\n      countryButton.classList.remove('scrolling');\n    }, 1500);\n  }\n  \n  // Get all city chips\n  const cityChips = citiesChips.querySelectorAll('.header-city-chip');\n  if (cityChips.length === 0) return;\n  \n  // Find the currently selected city chip\n  const currentChip = citiesChips.querySelector('.header-city-chip.selected');\n  if (!currentChip) return;\n  \n  // Find the next city chip\n  const currentIndex = Array.from(cityChips).indexOf(currentChip);\n  const nextIndex = (currentIndex + 1) % cityChips.length;\n  const nextChip = cityChips[nextIndex];\n  \n  if (nextChip) {\n    // Scroll to the next city chip\n    nextChip.scrollIntoView({ \n      behavior: 'smooth', \n      block: 'nearest', \n      inline: 'center' \n    });\n    \n    // Select the next city\n    const nextCity = nextChip.dataset.city;\n    if (nextCity) {\n      // Simulate a click on the next city chip\n      setTimeout(() => {\n        nextChip.click();\n      }, 300);\n    }\n  }\n}\n\n// Test function to manually show country button (for debugging)\nexport function testShowCountryButton() {\n  console.log('Testing country button show function');\n  showCountryButton();\n}\n\n// Search and pagination functions - simplified since we're not using real-time search\nfunction performSearch(query, onCitySelect) {\n  // This function is kept for potential future use but not actively used\n  // since we removed real-time search functionality\n  console.log('Search function called with:', query);\n}\n\nfunction displaySearchResults() {\n  // This function is kept for potential future use but simplified\n  console.log('Display search results called');\n}\n\nfunction showSearchResults() {\n  const searchResultsContainer = document.getElementById('search-results-container');\n  if (searchResultsContainer) {\n    searchResultsContainer.style.display = 'block';\n  }\n}\n\nfunction hideSearchResults() {\n  const searchResultsContainer = document.getElementById('search-results-container');\n  if (searchResultsContainer) {\n    searchResultsContainer.style.display = 'none';\n  }\n}\n\n// Country dropdown functions\nfunction showCountryDropdown(query, onCitySelect, keepCountryText = true) {\n  const dropdownContainer = document.getElementById('country-dropdown-container');\n  if (!dropdownContainer) return;\n  const searchInput = document.getElementById('city-search');\n\n  // Filter countries and cities based on query\n  const suggestions = [];\n  \n  countryData.forEach(country => {\n    // Check if country name matches\n    if (country.name.toLowerCase().includes(query)) {\n      suggestions.push({\n        type: 'country',\n        name: country.name,\n        code: country.code,\n        display: `${country.name} (${country.code})`\n      });\n    }\n    \n    // Check if any cities match\n    country.cities.forEach(city => {\n      if (city.toLowerCase().includes(query)) {\n        suggestions.push({\n          type: 'city',\n          name: city,\n          country: country.name,\n          code: country.code,\n          display: `${city}, ${country.name}`\n        });\n      }\n    });\n  });\n\n  // Limit suggestions to 10 items\n  const limitedSuggestions = suggestions.slice(0, 10);\n\n  if (limitedSuggestions.length > 0) {\n    const suggestionsHTML = limitedSuggestions.map(item => `\n      <div class=\"dropdown-item\" data-type=\"${item.type}\" data-name=\"${item.name}\" data-country=\"${item.country || ''}\" data-code=\"${item.code}\" style=\"padding: 16px 20px; border-bottom: 1px solid #f0f0f0; cursor: pointer; transition: all 0.2s ease; background: white;\">\n        <div style=\"font-weight: 600; color: #333; font-size: 14px; margin-bottom: 4px;\">${item.display}</div>\n        <div style=\"font-size: 12px; color: #666; display: flex; align-items: center; gap: 8px;\">\n          <span style=\"padding: 4px 8px; background: ${item.type === 'city' ? '#e3f2fd' : '#f3e5f5'}; color: ${item.type === 'city' ? '#1976d2' : '#7b1fa2'}; border-radius: 12px; font-weight: 500; font-size: 11px;\">\n            ${item.type === 'city' ? '🏙️ City' : '🌍 Country'}\n          </span>\n        </div>\n      </div>\n    `).join('');\n\n    dropdownContainer.innerHTML = suggestionsHTML;\n    dropdownContainer.style.display = 'block';\n\n          // Add click event listeners to dropdown items\n      const dropdownItems = dropdownContainer.querySelectorAll('.dropdown-item');\n      dropdownItems.forEach(item => {\n        item.addEventListener('click', () => {\n          const name = item.dataset.name;\n          const country = item.dataset.country;\n          const code = item.dataset.code;\n          \n          if (item.dataset.type === 'city') {\n            // For cities, search with city name and keep country visible\n            if (country) {\n              searchInput.value = `${country} - ${name}`;\n            } else {\n              searchInput.value = name;\n            }\n            if (onCitySelect) {\n              handleCitySelect(name, onCitySelect, true);\n            }\n          } else {\n            // For countries, show cities in that country and keep country visible\n            searchInput.value = name;\n            searchInput.placeholder = `Search cities in ${name}...`;\n            // Keep the country text in input visible (do not trigger search here)\n            searchInput.focus();\n            showCitiesInCountry(code, name, onCitySelect);\n          }\n          hideCountryDropdown();\n        });\n\n      // Add hover effect\n      item.addEventListener('mouseenter', () => {\n        item.style.backgroundColor = '#f8f9fa';\n        item.style.transform = 'translateX(4px)';\n        item.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';\n        \n        // Auto-select country after hover delay\n        if (item.dataset.type === 'country') {\n          clearTimeout(item.hoverTimeout);\n          \n          // Add visual indicator for hover-to-select\n          item.style.borderLeft = '4px solid #1976d2';\n          item.style.paddingLeft = '16px';\n          item.style.backgroundColor = '#e3f2fd';\n          item.classList.add('country-hover');\n          \n          // Add auto-selection countdown indicator\n          const countdownEl = document.createElement('div');\n          countdownEl.className = 'auto-select-countdown';\n          countdownEl.style.cssText = 'position: absolute; right: 16px; top: 50%; transform: translateY(-50%); background: #1976d2; color: white; border-radius: 50%; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; font-size: 10px; font-weight: bold; animation: countdown-pulse 0.5s ease-in-out infinite;';\n          countdownEl.textContent = '3';\n          item.appendChild(countdownEl);\n          \n          let countdown = 3;\n          const countdownInterval = setInterval(() => {\n            countdown--;\n            countdownEl.textContent = countdown;\n            if (countdown <= 0) {\n              clearInterval(countdownInterval);\n              countdownEl.remove();\n            }\n          }, 167); // 500ms / 3 = ~167ms per countdown step\n          \n          item.hoverTimeout = setTimeout(() => {\n            const name = item.dataset.name;\n            const code = item.dataset.code;\n            \n            // Add auto-selection animation\n            item.classList.add('auto-select');\n            \n            // Auto-enter country name in input field\n            searchInput.value = name;\n            searchInput.placeholder = `Search cities in ${name}...`;\n            searchInput.focus();\n            \n            // Show cities in that country\n            showCitiesInCountry(code, name, onCitySelect);\n            \n            // Remove animation class after animation completes\n            setTimeout(() => {\n              item.classList.remove('auto-select');\n            }, 1000);\n          }, 500); // 500ms delay for auto-selection\n        }\n      });\n      \n      item.addEventListener('mouseleave', () => {\n        item.style.backgroundColor = 'white';\n        item.style.transform = 'translateX(0)';\n        item.style.boxShadow = 'none';\n        \n        // Clear hover timeout when mouse leaves\n        if (item.hoverTimeout) {\n          clearTimeout(item.hoverTimeout);\n        }\n        \n        // Reset visual indicators for hover-to-select\n        if (item.dataset.type === 'country') {\n          item.style.borderLeft = 'none';\n          item.style.paddingLeft = '20px';\n          item.style.backgroundColor = 'white';\n          item.classList.remove('country-hover');\n          \n          // Remove countdown element if it exists\n          const countdownEl = item.querySelector('.auto-select-countdown');\n          if (countdownEl) {\n            countdownEl.remove();\n          }\n        }\n      });\n    });\n  } else {\n    hideCountryDropdown();\n  }\n}\n\nfunction hideCountryDropdown() {\n  const dropdownContainer = document.getElementById('country-dropdown-container');\n  if (dropdownContainer) {\n    dropdownContainer.style.display = 'none';\n  }\n}\n\nfunction showPopularCountries(onCitySelect, keepCountryText = true) {\n  const dropdownContainer = document.getElementById('country-dropdown-container');\n  if (!dropdownContainer) return;\n  const searchInput = document.getElementById('city-search');\n\n  // Popular countries to show by default\n  const popularCountries = [\n    { name: 'United States', code: 'US', cities: ['New York', 'Los Angeles', 'Chicago'] },\n    { name: 'United Kingdom', code: 'GB', cities: ['London', 'Birmingham', 'Manchester'] },\n    { name: 'Philippines', code: 'PH', cities: ['Manila', 'Quezon City', 'Davao City'] },\n    { name: 'Japan', code: 'JP', cities: ['Tokyo', 'Osaka', 'Nagoya'] },\n    { name: 'Australia', code: 'AU', cities: ['Sydney', 'Melbourne', 'Brisbane'] },\n    { name: 'Canada', code: 'CA', cities: ['Toronto', 'Montreal', 'Vancouver'] },\n    { name: 'Germany', code: 'DE', cities: ['Berlin', 'Hamburg', 'Munich'] },\n    { name: 'France', code: 'FR', cities: ['Paris', 'Marseille', 'Lyon'] }\n  ];\n\n  const popularHTML = `\n    <div style=\"padding: 16px 20px; border-bottom: 2px solid #e3f2fd; background: #f8f9fa;\">\n      <div style=\"font-weight: 700; color: #1976d2; font-size: 14px; margin-bottom: 12px; text-align: center;\">🌍 Popular Countries</div>\n    </div>\n    ${popularCountries.map(country => `\n      <div class=\"dropdown-item popular-country\" data-type=\"country\" data-name=\"${country.name}\" data-code=\"${country.code}\" style=\"padding: 16px 20px; border-bottom: 1px solid #f0f0f0; cursor: pointer; transition: all 0.2s ease; background: white;\">\n        <div style=\"font-weight: 600; color: #333; font-size: 14px; margin-bottom: 4px; display: flex; align-items: center; gap: 8px;\">\n          <span style=\"font-size: 18px;\">${getCountryFlag(country.code)}</span>\n          ${country.name} (${country.code})\n        </div>\n        <div style=\"font-size: 12px; color: #666; display: flex; align-items: center; gap: 8px;\">\n          <span style=\"padding: 4px 8px; background: #f3e5f5; color: #7b1fa2; border-radius: 12px; font-weight: 500; font-size: 11px;\">\n            🌍 Country\n          </span>\n          <span style=\"color: #666;\">${country.cities.length} major cities</span>\n        </div>\n      </div>\n    `).join('')}\n  `;\n\n  dropdownContainer.innerHTML = popularHTML;\n  dropdownContainer.style.display = 'block';\n\n  // Add click event listeners to popular country items\n  const popularItems = dropdownContainer.querySelectorAll('.popular-country');\n  popularItems.forEach(item => {\n    item.addEventListener('click', () => {\n      const name = item.dataset.name;\n      const code = item.dataset.code;\n      \n      // Keep country visible in input field\n      searchInput.value = name;\n      searchInput.focus();\n      \n      // Show cities in that country\n      showCitiesInCountry(code, name, onCitySelect);\n    });\n\n    // Add hover effect\n    item.addEventListener('mouseenter', () => {\n      item.style.backgroundColor = '#f8f9fa';\n      item.style.transform = 'translateX(4px)';\n      item.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';\n      \n      // Auto-select country after hover delay\n      clearTimeout(item.hoverTimeout);\n      \n      // Add visual indicator for hover-to-select\n      item.style.borderLeft = '4px solid #1976d2';\n      item.style.paddingLeft = '16px';\n      item.style.backgroundColor = '#e3f2fd';\n      item.classList.add('country-hover');\n      \n      // Add auto-selection countdown indicator\n      const countdownEl = document.createElement('div');\n      countdownEl.className = 'auto-select-countdown';\n      countdownEl.style.cssText = 'position: absolute; right: 16px; top: 50%; transform: translateY(-50%); background: #1976d2; color: white; border-radius: 50%; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; font-size: 10px; font-weight: bold; animation: countdown-pulse 0.5s ease-in-out infinite;';\n      countdownEl.textContent = '3';\n      item.appendChild(countdownEl);\n      \n      let countdown = 3;\n      const countdownInterval = setInterval(() => {\n        countdown--;\n        countdownEl.textContent = countdown;\n        if (countdown <= 0) {\n          clearInterval(countdownInterval);\n          countdownEl.remove();\n        }\n      }, 167); // 500ms / 3 = ~167ms per countdown step\n      \n      item.hoverTimeout = setTimeout(() => {\n        const name = item.dataset.name;\n        const code = item.dataset.code;\n        \n        // Add auto-selection animation\n        item.classList.add('auto-select');\n        \n        // Auto-enter country name in input field\n        searchInput.value = name;\n        searchInput.placeholder = `Search cities in ${name}...`;\n        searchInput.focus();\n        \n        // Show cities in that country\n        showCitiesInCountry(code, name, onCitySelect);\n        \n        // Remove animation class after animation completes\n        setTimeout(() => {\n          item.classList.remove('auto-select');\n        }, 1000);\n      }, 500); // 500ms delay for auto-selection\n    });\n    \n    item.addEventListener('mouseleave', () => {\n      item.style.backgroundColor = 'white';\n      item.style.transform = 'translateX(0)';\n      item.style.boxShadow = 'none';\n      \n      // Clear hover timeout when mouse leaves\n      if (item.hoverTimeout) {\n        clearTimeout(item.hoverTimeout);\n      }\n      \n      // Reset visual indicators for hover-to-select\n      item.style.borderLeft = 'none';\n      item.style.paddingLeft = '20px';\n      item.style.backgroundColor = 'white';\n      item.classList.remove('country-hover');\n      \n      // Remove countdown element if it exists\n      const countdownEl = item.querySelector('.auto-select-countdown');\n      if (countdownEl) {\n        countdownEl.remove();\n      }\n    });\n  });\n}\n\nfunction getCountryFlag(countryCode) {\n  const flagMap = {\n    'US': '🇺🇸', 'GB': '🇬🇧', 'PH': '🇵🇭', 'JP': '🇯🇵', 'AU': '🇦🇺', 'CA': '🇨🇦',\n    'DE': '🇩🇪', 'FR': '🇫🇷', 'IT': '🇮🇹', 'ES': '🇪🇸', 'NL': '🇳🇱', 'SE': '🇸🇪',\n    'NO': '🇳🇴', 'DK': '🇩🇰', 'FI': '🇫🇮', 'CH': '🇨🇭', 'AT': '🇦🇹', 'BE': '🇧🇪'\n  };\n  return flagMap[countryCode] || '🌍';\n}\n\nfunction showCitiesInCountry(countryCode, countryName, onCitySelect) {\n  const country = countryData.find(c => c.code === countryCode);\n  if (!country) return;\n\n  const dropdownContainer = document.getElementById('country-dropdown-container');\n  if (!dropdownContainer) return;\n  const searchInput = document.getElementById('city-search');\n\n  const citiesHTML = `\n    <div style=\"padding: 16px 20px; border-bottom: 2px solid #e3f2fd; background: #f8f9fa;\">\n      <div style=\"font-weight: 700; color: #1976d2; font-size: 14px; margin-bottom: 12px; text-align: center; display: flex; align-items: center; justify-content: space-between;\">\n        <span>🏙️ Cities in ${countryName}</span>\n        <button class=\"back-to-countries\" style=\"padding: 4px 8px; background: #1976d2; color: white; border: none; border-radius: 6px; font-size: 11px; cursor: pointer; font-weight: 500;\">← Back</button>\n      </div>\n    </div>\n    ${country.cities.map(city => `\n      <div class=\"dropdown-item\" data-type=\"city\" data-name=\"${city}\" data-country=\"${countryName}\" data-code=\"${countryCode}\" style=\"padding: 16px 20px; border-bottom: 1px solid #f0f0f0; cursor: pointer; transition: all 0.2s ease; background: white;\">\n        <div style=\"font-weight: 600; color: #333; font-size: 14px; margin-bottom: 4px;\">${city}</div>\n        <div style=\"font-size: 12px; color: #666; display: flex; align-items: center; gap: 8px;\">\n          <span style=\"padding: 4px 8px; background: #e3f2fd; color: #1976d2; border-radius: 12px; font-weight: 500; font-size: 11px;\">\n            🏙️ City in ${countryName}\n          </span>\n        </div>\n      </div>\n    `).join('')}\n  `;\n\n  dropdownContainer.innerHTML = citiesHTML;\n  dropdownContainer.style.display = 'block';\n\n  // Add click event listener for back button\n  const backButton = dropdownContainer.querySelector('.back-to-countries');\n  if (backButton) {\n    backButton.addEventListener('click', () => {\n      showPopularCountries(onCitySelect);\n    });\n  }\n\n  // Add click event listeners\n  const dropdownItems = dropdownContainer.querySelectorAll('.dropdown-item');\n  dropdownItems.forEach(item => {\n    item.addEventListener('click', () => {\n      const name = item.dataset.name;\n      const country = item.dataset.country;\n      // Keep country visible in input field\n      searchInput.value = `${country} - ${name}`;\n      if (onCitySelect) {\n        handleCitySelect(name, onCitySelect, true);\n      }\n      hideCountryDropdown();\n    });\n\n    // Add hover effect\n    item.addEventListener('mouseenter', () => {\n      item.style.backgroundColor = '#f8f9fa';\n      item.style.transform = 'translateX(4px)';\n      item.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';\n    });\n    item.addEventListener('mouseleave', () => {\n      item.style.backgroundColor = 'white';\n      item.style.transform = 'translateX(0)';\n      item.style.boxShadow = 'none';\n    });\n  });\n} ","// OpenWeatherMap API logic\n// Replace 'YOUR_API_KEY' with your actual OpenWeatherMap API key\n\nconst API_KEY = 'ccac33176c75e16a3b3c977b0ca6365c';\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/';\n\n/**\n * Fetch current weather data for a city\n * @param {string} cityName\n * @returns {Promise<Object>} Weather data\n */\nexport async function fetchCurrentWeather(cityName) {\n  const url = `${BASE_URL}weather?q=${encodeURIComponent(cityName)}&appid=${API_KEY}&units=metric`;\n  const response = await fetch(url);\n  if (!response.ok) throw new Error('City not found');\n  return response.json();\n}\n\n/**\n * Fetch 5-day forecast data for a city\n * @param {string} cityName\n * @returns {Promise<Object>} Forecast data\n */\nexport async function fetchFiveDayForecast(cityName) {\n  const url = `${BASE_URL}forecast?q=${encodeURIComponent(cityName)}&appid=${API_KEY}&units=metric`;\n  const response = await fetch(url);\n  if (!response.ok) throw new Error('City not found');\n  return response.json();\n}\n\n// Pixabay API logic\nconst PIXABAY_API_KEY = '51325887-dff4e6da46d9f05f769d357a1'; // <-- Replace with your Pixabay API key\nconst PIXABAY_BASE_URL = 'https://pixabay.com/api/';\n\n/**\n * Fetch a cityscape image from Pixabay for a given city and weather\n * @param {string} cityName\n * @param {string} [weatherDesc] - Optional weather description (e.g., 'cloudy', 'rainy')\n * @returns {Promise<string|null>} Image URL or null if not found\n */\nexport async function fetchCityscapeImage(cityName, weatherDesc, countryName) {\n  // Try multiple search strategies for better results\n  const searchQueries = [\n    // Primary search with country and weather\n    `${cityName} ${countryName || ''} ${weatherDesc || ''} cityscape skyline`.trim(),\n    // City with country\n    `${cityName} ${countryName || ''} cityscape skyline`.trim(),\n    // Just city with weather\n    `${cityName} ${weatherDesc || ''} cityscape`.trim(),\n    // Simple city search\n    `${cityName} cityscape skyline`,\n    // Fallback to just city\n    `${cityName} city`\n  ];\n\n  for (const query of searchQueries) {\n    if (!query.trim()) continue;\n    \n    const url = `${PIXABAY_BASE_URL}?key=${PIXABAY_API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&category=places&per_page=5&safesearch=true&min_width=1200&min_height=800`;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) continue;\n      const data = await response.json();\n      if (data.hits && data.hits.length > 0) {\n        // Prefer high-quality images\n        const bestImage = data.hits.find(hit => \n          hit.largeImageURL && \n          hit.imageWidth >= 1200 && \n          hit.imageHeight >= 800\n        ) || data.hits[0];\n        \n        return bestImage.largeImageURL || bestImage.webformatURL;\n      }\n    } catch (e) {\n      continue;\n    }\n  }\n  \n  return null;\n} ","import { getWeatherIcon, getWeatherDescription } from './weatherIcons.js';\n\n// Home (Today) UI logic\n// Renders today's weather for a city\n\n/**\n * Render today's weather section\n * @param {Object} weatherData - Data from OpenWeatherMap current weather API\n * @returns {string} HTML string\n */\nexport function renderTodayWeather(weatherData) {\n  if (!weatherData) return '<div class=\"error\">No weather data available.</div>';\n  const { name, main, weather, sys } = weatherData;\n  const temp = Math.round(main.temp);\n  const min = Math.round(main.temp_min);\n  const max = Math.round(main.temp_max);\n  const desc = weather[0].description;\n  const weatherCode = weather[0].id;\n  const icon = getWeatherIcon(weatherCode, true); // Use realistic weather icon\n  const country = sys && sys.country ? sys.country : '';\n  \n  // Helper function to get country name from code\n  const countryNames = {\n    'TH': 'Thailand',\n    'US': 'United States',\n    'GB': 'United Kingdom',\n    'FR': 'France',\n    'UA': 'Ukraine',\n    'PL': 'Poland',\n    'AU': 'Australia',\n    'CA': 'Canada',\n    'DE': 'Germany',\n    'IT': 'Italy',\n    'ES': 'Spain',\n    'JP': 'Japan',\n    'CN': 'China',\n    'IN': 'India',\n    'BR': 'Brazil',\n    'MX': 'Mexico',\n    'RU': 'Russia',\n    'KR': 'South Korea',\n    'NL': 'Netherlands',\n    'SE': 'Sweden',\n    'NO': 'Norway',\n    'DK': 'Denmark',\n    'FI': 'Finland',\n    'CH': 'Switzerland',\n    'AT': 'Austria',\n    'BE': 'Belgium',\n    'PT': 'Portugal',\n    'GR': 'Greece',\n    'IE': 'Ireland',\n    'NZ': 'New Zealand'\n  };\n  \n  const countryName = countryNames[country] || country;\n  const isMobile = window.innerWidth <= 768;\n  \n  return `\n    <section class=\"today-weather-card\">\n      <div class=\"weather-card-overlay\">\n        <div class=\"weather-card-header\">\n          <div style=\"display:flex;flex-direction:column;align-items:flex-start;gap:4px;\">\n            <span class=\"weather-city\">${name}</span>\n            ${countryName ? `<span style=\"font-size:${isMobile ? '0.85rem' : '0.95rem'};color:#ffd54f;font-weight:500;opacity:0.9;letter-spacing:0.3px;\">${countryName}</span>` : ''}\n          </div>\n          <span class=\"weather-icon\" style=\"font-size: 3rem; display: flex; align-items: center; justify-content: center;\">${icon}</span>\n        </div>\n        <div class=\"weather-temp-main\">${temp}&deg;C</div>\n        <div class=\"weather-minmax\">min <b>${min}&deg;</b> &nbsp; max <b>${max}&deg;</b></div>\n        <div class=\"weather-desc\">${desc}</div>\n      </div>\n    </section>\n  `;\n} ","// Weather Icon Mapping System\n// Maps OpenWeatherMap weather codes to realistic weather icons\n\nexport const weatherIcons = {\n  // Clear sky\n  800: {\n    day: '☀️',\n    night: '🌙',\n    description: 'clear sky'\n  },\n  \n  // Clouds\n  801: {\n    day: '🌤️',\n    night: '🌤️',\n    description: 'few clouds'\n  },\n  802: {\n    day: '⛅',\n    night: '⛅',\n    description: 'scattered clouds'\n  },\n  803: {\n    day: '☁️',\n    night: '☁️',\n    description: 'broken clouds'\n  },\n  804: {\n    day: '☁️',\n    night: '☁️',\n    description: 'overcast clouds'\n  },\n  \n  // Rain\n  200: {\n    day: '⛈️',\n    night: '⛈️',\n    description: 'thunderstorm with light rain'\n  },\n  201: {\n    day: '⛈️',\n    night: '⛈️',\n    description: 'thunderstorm with rain'\n  },\n  202: {\n    day: '⛈️',\n    night: '⛈️',\n    description: 'thunderstorm with heavy rain'\n  },\n  210: {\n    day: '⚡',\n    night: '⚡',\n    description: 'light thunderstorm'\n  },\n  211: {\n    day: '⚡',\n    night: '⚡',\n    description: 'thunderstorm'\n  },\n  212: {\n    day: '⚡',\n    night: '⚡',\n    description: 'heavy thunderstorm'\n  },\n  221: {\n    day: '⚡',\n    night: '⚡',\n    description: 'ragged thunderstorm'\n  },\n  230: {\n    day: '⛈️',\n    night: '⛈️',\n    description: 'thunderstorm with light drizzle'\n  },\n  231: {\n    day: '⛈️',\n    night: '⛈️',\n    description: 'thunderstorm with drizzle'\n  },\n  232: {\n    day: '⛈️',\n    night: '⛈️',\n    description: 'thunderstorm with heavy drizzle'\n  },\n  \n  // Drizzle\n  300: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'light intensity drizzle'\n  },\n  301: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'drizzle'\n  },\n  302: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'heavy intensity drizzle'\n  },\n  310: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'light intensity drizzle rain'\n  },\n  311: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'drizzle rain'\n  },\n  312: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'heavy intensity drizzle rain'\n  },\n  313: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'shower rain and drizzle'\n  },\n  314: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'heavy shower rain and drizzle'\n  },\n  321: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'shower drizzle'\n  },\n  \n  // Rain\n  500: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'light rain'\n  },\n  501: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'moderate rain'\n  },\n  502: {\n    day: '🌧️',\n    night: '🌧️',\n    description: 'heavy intensity rain'\n  },\n  503: {\n    day: '🌧️',\n    night: '🌧️',\n    description: 'very heavy rain'\n  },\n  504: {\n    day: '🌧️',\n    night: '🌧️',\n    description: 'extreme rain'\n  },\n  511: {\n    day: '🌨️',\n    night: '🌨️',\n    description: 'freezing rain'\n  },\n  520: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'light intensity shower rain'\n  },\n  521: {\n    day: '🌦️',\n    night: '🌦️',\n    description: 'shower rain'\n  },\n  522: {\n    day: '🌧️',\n    night: '🌧️',\n    description: 'heavy intensity shower rain'\n  },\n  531: {\n    day: '🌧️',\n    night: '🌧️',\n    description: 'ragged shower rain'\n  },\n  \n  // Snow\n  600: {\n    day: '🌨️',\n    night: '🌨️',\n    description: 'light snow'\n  },\n  601: {\n    day: '🌨️',\n    night: '🌨️',\n    description: 'snow'\n  },\n  602: {\n    day: '❄️',\n    night: '❄️',\n    description: 'heavy snow'\n  },\n  611: {\n    day: '🌨️',\n    night: '🌨️',\n    description: 'sleet'\n  },\n  612: {\n    day: '🌨️',\n    night: '🌨️',\n    description: 'light shower sleet'\n  },\n  613: {\n    day: '🌨️',\n    night: '🌨️',\n    description: 'shower sleet'\n  },\n  615: {\n    day: '🌨️',\n    night: '🌨️',\n    description: 'light rain and snow'\n  },\n  616: {\n    day: '🌨️',\n    night: '🌨️',\n    description: 'rain and snow'\n  },\n  620: {\n    day: '🌨️',\n    night: '🌨️',\n    description: 'light shower snow'\n  },\n  621: {\n    day: '🌨️',\n    night: '🌨️',\n    description: 'shower snow'\n  },\n  622: {\n    day: '❄️',\n    night: '❄️',\n    description: 'heavy shower snow'\n  },\n  \n  // Atmosphere\n  701: {\n    day: '🌫️',\n    night: '🌫️',\n    description: 'mist'\n  },\n  711: {\n    day: '🌫️',\n    night: '🌫️',\n    description: 'smoke'\n  },\n  721: {\n    day: '🌫️',\n    night: '🌫️',\n    description: 'haze'\n  },\n  731: {\n    day: '🌫️',\n    night: '🌫️',\n    description: 'sand/dust whirls'\n  },\n  741: {\n    day: '🌫️',\n    night: '🌫️',\n    description: 'fog'\n  },\n  751: {\n    day: '🌫️',\n    night: '🌫️',\n    description: 'sand'\n  },\n  761: {\n    day: '🌫️',\n    night: '🌫️',\n    description: 'dust'\n  },\n  762: {\n    day: '🌫️',\n    night: '🌫️',\n    description: 'volcanic ash'\n  },\n  771: {\n    day: '💨',\n    night: '💨',\n    description: 'squalls'\n  },\n  781: {\n    day: '🌪️',\n    night: '🌪️',\n    description: 'tornado'\n  }\n};\n\n// Get weather icon based on weather code and time of day\nexport function getWeatherIcon(weatherCode, isDay = true) {\n  const weather = weatherIcons[weatherCode];\n  if (!weather) {\n    return '🌤️'; // Default icon\n  }\n  \n  // Use day icon for day, night icon for night\n  return isDay ? weather.day : weather.night;\n}\n\n// Get weather description\nexport function getWeatherDescription(weatherCode) {\n  const weather = weatherIcons[weatherCode];\n  return weather ? weather.description : 'unknown';\n}\n\n// Enhanced weather icon with better visual representation\nexport function getEnhancedWeatherIcon(weatherCode, isDay = true, temperature = null) {\n  const baseIcon = getWeatherIcon(weatherCode, isDay);\n  \n  // Add temperature-based enhancements\n  if (temperature !== null) {\n    if (temperature < 0) {\n      // Cold weather enhancements\n      if (weatherCode >= 200 && weatherCode < 600) {\n        return '🌨️'; // Snow for cold rain\n      }\n    } else if (temperature > 30) {\n      // Hot weather enhancements\n      if (weatherCode === 800) {\n        return '🔥'; // Hot sun\n      }\n    }\n  }\n  \n  return baseIcon;\n}\n\n// Get weather icon for specific time periods\nexport function getTimeBasedWeatherIcon(weatherCode, hour) {\n  const isDay = hour >= 6 && hour <= 18;\n  return getWeatherIcon(weatherCode, isDay);\n}\n\n// Get weather icon with intensity\nexport function getIntensityWeatherIcon(weatherCode, intensity = 'normal') {\n  const baseIcon = getWeatherIcon(weatherCode, true);\n  \n  switch (intensity) {\n    case 'light':\n      return baseIcon + '💧';\n    case 'moderate':\n      return baseIcon + '💧💧';\n    case 'heavy':\n      return baseIcon + '💧💧💧';\n    default:\n      return baseIcon;\n  }\n}\n","import { getWeatherIcon, getWeatherDescription } from './weatherIcons.js';\n\n// Five Days UI logic\n// Renders 5-day weather forecast for a city\n\n/**\n * Render 5-day forecast section with expandable 'More Info' per day\n * @param {Object} forecastData - Data from OpenWeatherMap 5-day forecast API\n * @param {boolean} allExpanded - Whether all cards should be expanded\n * @param {boolean} showChart - Whether to show chart button\n * @param {string} cityName - The city name\n * @param {string} countryName - The country name\n * @returns {string} HTML string\n */\nexport function renderFiveDayForecast(forecastData, allExpanded = false, showChart = false, cityName = '', countryName = '') {\n  if (!forecastData || !forecastData.list) return '<div class=\"error\">No forecast data available.</div>';\n  // Group forecast by day\n  const days = {};\n  forecastData.list.forEach(item => {\n    const date = item.dt_txt.split(' ')[0];\n    if (!days[date]) days[date] = [];\n    days[date].push(item);\n  });\n  // Get one forecast per day (e.g., 12:00)\n  let daily = Object.keys(days).map(date => {\n    const noon = days[date].find(item => item.dt_txt.includes('12:00:00')) || days[date][0];\n    // Find min/max for the day\n    const temps = days[date].map(i => i.main.temp);\n    const min = Math.round(Math.min(...temps));\n    const max = Math.round(Math.max(...temps));\n    return { date, ...noon, min, max, all: days[date] };\n  }).slice(0, 5);\n\n  // Sort so Sunday is always first\n  daily = daily.sort((a, b) => {\n    const getDayIdx = date => new Date(date).getDay();\n    const aIdx = getDayIdx(a.date);\n    const bIdx = getDayIdx(b.date);\n    if (aIdx === 0 && bIdx !== 0) return -1;\n    if (aIdx !== 0 && bIdx === 0) return 1; \n    return aIdx - bIdx;\n  });\n\n  const dayNames = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n  \n  // Create location header\n  const locationHeader = cityName ? `\n    <div class=\"forecast-location-header\" style=\"text-align:center; margin-bottom:24px; padding:0 16px;\">\n      <div class=\"forecast-city-name\" style=\"font-size:1.4rem; font-weight:700; color:#fff; margin-bottom:4px; letter-spacing:0.5px;\">${cityName}</div>\n      ${countryName ? `<div class=\"forecast-country-name\" style=\"font-size:1rem; color:#ffd54f; font-weight:500; opacity:0.9; letter-spacing:0.3px;\">${countryName}</div>` : ''}\n    </div>\n  ` : '';\n  \n  return `\n    <section class=\"five-days-forecast\">\n      ${locationHeader}\n      <div class=\"forecast-cards\">\n        ${daily.map((day, idx) => {\n          const temp = Math.round(day.main.temp);\n          const desc = day.weather[0].description;\n          const weatherCode = day.weather[0].id;\n          const icon = getWeatherIcon(weatherCode, true); // Use realistic weather icon\n          const isExpanded = allExpanded;\n          // Get day name and highlight if today\n          const d = new Date(day.date);\n          const dayName = dayNames[d.getDay()];\n          const isToday = d.toDateString() === (new Date()).toDateString();\n          return `\n            <div class=\"forecast-card\" data-date=\"${day.date}\" data-expanded=\"${isExpanded}\">\n              <div class=\"forecast-day${isToday ? ' today' : ''}\">${dayName}</div>\n              <div class=\"forecast-date\">${day.date.slice(8,10)} ${d.toLocaleString('default', { month: 'short' })}</div>\n              <span style=\"font-size: 2.5rem; display: flex; align-items: center; justify-content: center; margin-bottom: 16px;\">${icon}</span>\n              <div class=\"forecast-minmax\">min <span>${day.min}&deg;</span><span class=\"minmax-divider\"></span>max <span>${day.max}&deg;</span></div>\n              <div class=\"forecast-desc\">${desc}</div>\n              <button class=\"more-info-btn\" data-date=\"${day.date}\">${isExpanded ? 'Hide Info' : 'more info'}</button>\n              ${isExpanded ? `<div class=\"more-info-section\" style=\"align-self: flex-start;\">${day.all.slice(0, 7).map(item => `\n                <div class='more-info-mini-card'>\n                  <div class='mini-time'>${item.dt_txt.slice(11,16)}</div>\n                  <span style=\"font-size: 1rem;\">${getWeatherIcon(item.weather[0].id, true)}</span>\n                  <div class='mini-temp'>${Math.round(item.main.temp)}&deg;</div>\n                  <div class='mini-detail'>🌡️ ${item.main.pressure} mm</div>\n                  <div class='mini-detail'>💧 ${item.main.humidity}%</div>\n                  <div class='mini-detail'>💨 ${Math.round(item.wind.speed)} m/s</div>\n                </div>\n              `).join('')}</div>` : ''}\n            </div>\n          `;\n        }).join('')}\n      </div>\n      <div class=\"show-chart-btn-container\">\n        <button id=\"show-chart-btn\" class=\"nav-btn\">\n          <span class=\"chart-btn-text\">${showChart ? 'Hide Chart' : 'Show Chart'}</span>\n          <span class=\"chart-btn-icon\">${showChart ? '📉' : '📈'}</span>\n        </button>\n      </div>\n    </section> \n  `;\n} \n\n","// Quotes logic\n\nconst quotes = [\n  { text: \"Wherever you go, no matter what the weather, always bring your own sunshine.\", author: \"Anthony J. D'Angelo\" },\n  { text: \"Sunshine is delicious, rain is refreshing, wind braces us up, snow is exhilarating.\", author: \"John Ruskin\" },\n  { text: \"There is no such thing as bad weather, only different kinds of good weather.\", author: \"John Ruskin\" },\n  { text: \"Some people feel the rain. Others just get wet.\", author: \"Bob Marley\" },\n  { text: \"To appreciate the beauty of a snowflake it is necessary to stand out in the cold.\", author: \"Aristotle\" },\n  { text: \"Climate is what we expect, weather is what we get.\", author: \"Mark Twain\" },\n  { text: \"The sound of the rain needs no translation.\", author: \"Alan Watts\" }\n];\n\nexport function getRandomQuote() {\n  const q = quotes[Math.floor(Math.random() * quotes.length)];\n  return `<div class=\"quote-section\">“${q.text}”<br><span class=\"quote-author\">— ${q.author}</span></div>`;\n} ","// Chart logic for 5-day forecast\n\n/**\n * Render a professional SVG line chart for 5-day forecast temperatures\n * @param {Object} forecastData - Data from OpenWeatherMap 5-day forecast API   \n * @returns {string} HTML string with SVG chart\n */\nexport function renderForecastChart(forecastData) {\n  if (!forecastData || !forecastData.list) return '';\n  \n  // Group forecast by day and get 12:00 temp\n  const days = {};\n  forecastData.list.forEach(item => {\n    const date = item.dt_txt.split(' ')[0];\n    if (!days[date]) days[date] = [];\n    days[date].push(item);\n  });\n  \n  // Use up to 5 days if available, fallback to as many as possible\n  const daily = Object.keys(days).map(date => {\n    const noon = days[date].find(item => item.dt_txt.includes('12:00:00')) || days[date][0];\n    return {\n      date,\n      temp: Math.round(noon.main.temp),\n      humidity: noon.main.humidity,\n      wind: Math.round(noon.wind.speed * 10) / 10,\n      pressure: Math.round(noon.main.pressure / 10) * 10\n    };\n  }).slice(0, 5);\n  \n  if (daily.length < 2) {\n    return `<div class='forecast-chart-section' style='background:linear-gradient(135deg,#1a2332 0%,#26334d 50%,#202a3a 100%);border-radius:20px;padding:40px 32px;box-shadow:0 12px 40px rgba(0,0,0,0.25),0 6px 20px rgba(0,0,0,0.2);max-width:720px;width:100%;margin:32px auto 0 auto;display:flex;flex-direction:column;align-items:center;justify-content:center;border:1px solid rgba(255,255,255,0.08);backdrop-filter:blur(10px);'>\n      <div style='font-size:1.25rem;font-weight:700;color:#fff;letter-spacing:0.8px;text-align:center;margin-bottom:12px;font-family:\"Inter\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,sans-serif;text-shadow:0 2px 4px rgba(0,0,0,0.3);'>5-Day Weather Analytics</div>\n      <div style='color:#fff;opacity:0.75;font-size:1.1rem;text-align:center;margin:32px 0;font-weight:500;letter-spacing:0.3px;'>Insufficient data to generate comprehensive chart.</div>\n    </div>`;\n  }\n  \n  // Responsive chart dimensions\n  const isMobile = window.innerWidth <= 768;\n  const w = isMobile ? 360 : 720;\n  const h = isMobile ? 280 : 400;\n  const pad = isMobile ? 50 : 70;\n  \n  // All data arrays\n  const temps = daily.map(d => d.temp);\n  const humidities = daily.map(d => d.humidity);\n  const winds = daily.map(d => d.wind);\n  const pressures = daily.map(d => d.pressure);\n  \n  // Find global min/max for y-axis with better scaling\n  const allY = temps.concat(humidities, winds, pressures);\n  const minY = Math.floor(Math.min(...allY) * 0.95);\n  const maxY = Math.ceil(Math.max(...allY) * 1.05);\n  \n  // Map all values to y coordinate\n  function mapY(val) {\n    return pad + ((maxY - val) / (maxY - minY)) * (h - 2 * pad);\n  }\n  \n  // Map x coordinate\n  function mapX(i) {\n    return pad + i * ((w - 2 * pad) / (daily.length - 1));\n  }\n  \n  // Points for each series\n  const tempPoints = temps.map((temp, i) => ({x: mapX(i), y: mapY(temp)}));\n  const humidityPoints = humidities.map((humidity, i) => ({x: mapX(i), y: mapY(humidity)}));\n  const windPoints = winds.map((wind, i) => ({x: mapX(i), y: mapY(wind)}));\n  const pressurePoints = pressures.map((pressure, i) => ({x: mapX(i), y: mapY(pressure)}));\n  \n  // Smooth path for temperature line\n  function getSmoothPath(pts) {\n    if (pts.length < 2) return '';\n    let d = `M${pts[0].x},${pts[0].y}`;\n    for (let i = 1; i < pts.length; i++) {\n      const prev = pts[i - 1], curr = pts[i];\n      const cpx = (prev.x + curr.x) / 2;\n      d += ` C${cpx},${prev.y} ${cpx},${curr.y} ${curr.x},${curr.y}`;\n    }\n    return d;\n  }\n  \n  const tempPath = getSmoothPath(tempPoints);\n  const humidityPath = getSmoothPath(humidityPoints);\n  const windPath = getSmoothPath(windPoints);\n  const pressurePath = getSmoothPath(pressurePoints);\n  \n  // X axis labels (day names with year)\n  const xLabels = daily.map(d => {\n    const dt = new Date(d.date);\n    const dateYear = dt.getFullYear();\n    \n    if (isMobile) {\n      const dayName = dt.toLocaleDateString('en-US', { weekday: 'short' }).substring(0, 3);\n      return `${dayName} '${dateYear.toString().slice(-2)}`;\n    } else {\n      const dayName = dt.toLocaleDateString('en-US', { weekday: 'short' });\n      return `${dayName} '${dateYear.toString().slice(-2)}`;\n    }\n  });\n  \n  // Y axis ticks\n  const yTicks = isMobile ? 5 : 6;\n  const yVals = Array.from({length: yTicks}, (_, i) => minY + (i * (maxY - minY) / (yTicks-1)));\n  \n  // Build SVG\n  return `\n    <div class=\"forecast-chart-section\" style=\"background:linear-gradient(135deg,#1a2332 0%,#26334d 50%,#202a3a 100%);border-radius:20px;padding:${isMobile ? '32px 24px 28px 24px' : '48px 40px 40px 40px'};box-shadow:0 16px 48px rgba(0,0,0,0.3),0 8px 24px rgba(0,0,0,0.25);max-width:100%;width:100%;margin:24px auto 0 auto;display:flex;flex-direction:column;align-items:center;justify-content:center;border:1px solid rgba(255,255,255,0.08);backdrop-filter:blur(12px);\">\n      <div style=\"font-size:${isMobile ? '1.1rem' : '1.3rem'};font-weight:700;color:#fff;letter-spacing:0.8px;text-align:center;margin-bottom:${isMobile ? '20px' : '24px'};font-family:'Inter',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;text-shadow:0 2px 4px rgba(0,0,0,0.3);\">5-Day Weather Analytics</div>\n      <div style=\"display:flex;align-items:center;gap:${isMobile ? '12px' : '16px'};margin-bottom:${isMobile ? '20px' : '24px'};font-size:${isMobile ? '0.75rem' : '0.85rem'};flex-wrap:wrap;justify-content:center;font-weight:600;font-family:'Inter',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;padding:16px 20px;background:rgba(255,255,255,0.05);border-radius:12px;border:1px solid rgba(255,255,255,0.1);backdrop-filter:blur(8px);\">\n        <span style=\"color:#fff;opacity:0.9;font-size:${isMobile ? '0.7rem' : '0.8rem'};font-weight:700;margin-right:8px;letter-spacing:0.4px;text-transform:uppercase;\">Metrics:</span>\n        <span style=\"display:flex;align-items:center;margin:0 4px;padding:6px 12px;background:rgba(255,152,0,0.15);border-radius:8px;border:1px solid rgba(255,152,0,0.3);\"><svg width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\"><rect width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\" fill=\"#ff9800\" rx=\"1\"/></svg> <span style=\"color:#fff;margin-left:6px;font-size:${isMobile ? '0.7rem' : '0.8rem'};font-weight:600;letter-spacing:0.2px;\">Temperature (°C)</span></span>\n        <span style=\"display:flex;align-items:center;margin:0 4px;padding:6px 12px;background:rgba(25,118,210,0.15);border-radius:8px;border:1px solid rgba(25,118,210,0.3);\"><svg width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\"><rect width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\" fill=\"#1976d2\" rx=\"1\"/></svg> <span style=\"color:#fff;margin-left:6px;font-size:${isMobile ? '0.7rem' : '0.8rem'};font-weight:600;letter-spacing:0.2px;\">Humidity (%)</span></span>\n        <span style=\"display:flex;align-items:center;margin:0 4px;padding:6px 12px;background:rgba(255,214,0,0.15);border-radius:8px;border:1px solid rgba(255,214,0,0.3);\"><svg width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\"><rect width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\" fill=\"#ffd600\" rx=\"1\"/></svg> <span style=\"color:#fff;margin-left:6px;font-size:${isMobile ? '0.7rem' : '0.8rem'};font-weight:600;letter-spacing:0.2px;\">Wind (m/s)</span></span>\n        <span style=\"display:flex;align-items:center;margin:0 4px;padding:6px 12px;background:rgba(67,160,71,0.15);border-radius:8px;border:1px solid rgba(67,160,71,0.3);\"><svg width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\"><rect width=\"${isMobile ? '12' : '14'}\" height=\"${isMobile ? '2' : '2.5'}\" fill=\"#43a047\" rx=\"1\"/></svg> <span style=\"color:#fff;margin-left:6px;font-size:${isMobile ? '0.7rem' : '0.8rem'};font-weight:600;letter-spacing:0.2px;\">Pressure (hPa)</span></span>\n      </div>\n      <div style=\"width:100%;overflow-x:auto;\">\n        <svg width=\"100%\" height=\"${h}\" viewBox=\"0 0 ${w} ${h}\" class=\"forecast-chart\" style=\"background:none;max-width:100%;display:block;margin:0 auto;\">\n          <defs>\n            <filter id=\"chartDropShadow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\n              <feDropShadow dx=\"0\" dy=\"3\" stdDeviation=\"4\" flood-color=\"#000\" flood-opacity=\"0.25\"/>\n            </filter>\n            <filter id=\"glowEffect\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n            <linearGradient id=\"chartBg\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stop-color=\"#26334d\" stop-opacity=\"0.1\"/>\n              <stop offset=\"50%\" stop-color=\"#202a3a\" stop-opacity=\"0.08\"/>\n              <stop offset=\"100%\" stop-color=\"#1a2332\" stop-opacity=\"0.12\"/>\n            </linearGradient>\n            <linearGradient id=\"tempGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stop-color=\"#ff9800\" stop-opacity=\"0.8\"/>\n              <stop offset=\"100%\" stop-color=\"#ff5722\" stop-opacity=\"1\"/>\n            </linearGradient>\n            <linearGradient id=\"humidityGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stop-color=\"#1976d2\" stop-opacity=\"0.8\"/>\n              <stop offset=\"100%\" stop-color=\"#1565c0\" stop-opacity=\"1\"/>\n            </linearGradient>\n            <linearGradient id=\"windGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stop-color=\"#ffd600\" stop-opacity=\"0.8\"/>\n              <stop offset=\"100%\" stop-color=\"#ffc107\" stop-opacity=\"1\"/>\n            </linearGradient>\n            <linearGradient id=\"pressureGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stop-color=\"#43a047\" stop-opacity=\"0.8\"/>\n              <stop offset=\"100%\" stop-color=\"#388e3c\" stop-opacity=\"1\"/>\n            </linearGradient>\n          </defs>\n          \n          <!-- Background -->\n          <rect x=\"0\" y=\"0\" width=\"${w}\" height=\"${h}\" fill=\"url(#chartBg)\" rx=\"20\"/>\n          \n          <!-- Grid lines -->\n          ${yVals.map((v,i) => `<line x1=\"${pad}\" y1=\"${pad + i*(h-2*pad)/(yTicks-1)}\" x2=\"${w-pad}\" y2=\"${pad + i*(h-2*pad)/(yTicks-1)}\" stroke=\"#fff\" stroke-width=\"0.8\" opacity=\"0.08\" />`).join('')}\n          ${tempPoints.map((p,i) => `<line x1=\"${p.x}\" y1=\"${pad}\" x2=\"${p.x}\" y2=\"${h-pad}\" stroke=\"#fff\" stroke-width=\"0.6\" opacity=\"0.06\" />`).join('')}\n          \n          <!-- X and Y axis lines -->\n          <line x1=\"${pad}\" y1=\"${pad}\" x2=\"${w-pad}\" y2=\"${pad}\" stroke=\"#fff\" stroke-width=\"1.2\" opacity=\"0.2\" />\n          <line x1=\"${pad}\" y1=\"${pad}\" x2=\"${pad}\" y2=\"${h-pad}\" stroke=\"#fff\" stroke-width=\"1.2\" opacity=\"0.2\" />\n          \n          <!-- Y axis labels -->\n          ${yVals.map((v,i) => `<text x=\"${pad-24}\" y=\"${pad + i*(h-2*pad)/(yTicks-1) + 3}\" text-anchor=\"end\" font-size=\"5\" font-weight=\"700\" fill=\"#fff\" opacity=\"0.9\" font-family='Inter',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif stroke=\"#000\" stroke-width=\"1\" letter-spacing=\"0.3\" filter=\"drop-shadow(0 1px 2px rgba(0,0,0,0.8))\">${v.toFixed(0)}</text>`).join('')}\n          \n          <!-- X axis labels -->\n          ${tempPoints.map((p,i) => `<text x=\"${p.x}\" y=\"${h-pad+22}\" text-anchor=\"middle\" font-size=\"5\" font-weight=\"700\" fill=\"#fff\" opacity=\"0.9\" font-family='Inter',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif stroke=\"#000\" stroke-width=\"1\" letter-spacing=\"0.3\" filter=\"drop-shadow(0 1px 2px rgba(0,0,0,0.8))\">${xLabels[i]}</text>`).join('')}\n          \n          <!-- Temperature line with gradient -->\n          <path d=\"${tempPath}\" fill=\"none\" stroke=\"url(#tempGradient)\" stroke-width=\"${isMobile ? '4' : '5'}\" stroke-linecap=\"round\" stroke-linejoin=\"round\" filter=\"url(#chartDropShadow)\" />\n          ${tempPoints.map(p => `<circle class=\"chart-point\" cx=\"${p.x}\" cy=\"${p.y}\" r=\"${isMobile ? '6' : '8'}\" fill=\"#26334d\" stroke=\"url(#tempGradient)\" stroke-width=\"3\" filter=\"url(#glowEffect)\" style=\"transition:all 0.2s ease;\" />`).join('')}\n          \n          <!-- Humidity line with gradient -->\n          <path d=\"${humidityPath}\" fill=\"none\" stroke=\"url(#humidityGradient)\" stroke-width=\"${isMobile ? '3' : '4'}\" stroke-dasharray=\"8 6\" stroke-linecap=\"round\" stroke-linejoin=\"round\" filter=\"url(#chartDropShadow)\" />\n          ${humidityPoints.map(p => `<circle cx=\"${p.x}\" cy=\"${p.y}\" r=\"${isMobile ? '5' : '6'}\" fill=\"#26334d\" stroke=\"url(#humidityGradient)\" stroke-width=\"2.5\" filter=\"url(#glowEffect)\" />`).join('')}\n          \n          <!-- Wind line with gradient -->\n          <path d=\"${windPath}\" fill=\"none\" stroke=\"url(#windGradient)\" stroke-width=\"${isMobile ? '3' : '4'}\" stroke-dasharray=\"3 8\" stroke-linecap=\"round\" stroke-linejoin=\"round\" filter=\"url(#chartDropShadow)\" />\n          ${windPoints.map(p => `<circle cx=\"${p.x}\" cy=\"${p.y}\" r=\"${isMobile ? '5' : '6'}\" fill=\"#26334d\" stroke=\"url(#windGradient)\" stroke-width=\"2.5\" filter=\"url(#glowEffect)\" />`).join('')}\n          \n          <!-- Pressure line with gradient -->\n          <path d=\"${pressurePath}\" fill=\"none\" stroke=\"url(#pressureGradient)\" stroke-width=\"${isMobile ? '3' : '4'}\" stroke-dasharray=\"2 6\" stroke-linecap=\"round\" stroke-linejoin=\"round\" filter=\"url(#chartDropShadow)\" />\n          ${pressurePoints.map(p => `<circle cx=\"${p.x}\" cy=\"${p.y}\" r=\"${isMobile ? '5' : '6'}\" fill=\"#26334d\" stroke=\"url(#pressureGradient)\" stroke-width=\"2.5\" filter=\"url(#glowEffect)\" />`).join('')}\n        </svg>\n      </div>\n    </div>\n  `;\n} ","import { getTranslation, getCurrentLanguage, getAvailableLanguages, getLanguageName, getLanguageFlag } from '../i18n.js';\n\nexport function renderFooter() {\n  const currentLang = getCurrentLanguage();\n  const availableLanguages = getAvailableLanguages();\n  \n  const footerHTML = `\n    <footer class=\"app-footer\">\n      <div class=\"footer-container\">\n        <div class=\"footer-main\">\n          <div class=\"footer-section\">\n            <h3 class=\"footer-title\">Weather Dashboard Pro</h3>\n            <p class=\"footer-description\">Your comprehensive weather companion providing real-time forecasts, detailed analytics, and beautiful visualizations. Stay informed with accurate weather data powered by advanced meteorological technology.</p>\n          </div>\n          \n          <div class=\"footer-section\">\n            <h4 class=\"footer-subtitle\">${getTranslation('language')}</h4>\n            <div class=\"language-selector\">\n              <button class=\"language-btn current\" data-lang=\"${currentLang}\">\n                ${getLanguageFlag(currentLang)} ${getLanguageName(currentLang)}\n              </button>\n              <div class=\"language-dropdown\">\n                ${availableLanguages.map(lang => \n                  lang !== currentLang ? \n                    `<button class=\"language-option\" data-lang=\"${lang}\">\n                      ${getLanguageFlag(lang)} ${getLanguageName(lang)}\n                    </button>` : ''\n                ).join('')}\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"footer-bottom\">\n          <div class=\"footer-info\">\n            <span class=\"footer-text\">Made with ❤️ by Weather Dashboard Team</span>\n            <span class=\"footer-version\">Version 2.0 • Powered by OpenWeatherMap API</span>\n          </div>\n        </div>\n      </div>\n    </footer>\n  `;\n  \n  return footerHTML;\n}\n\nexport function initFooter() {\n  // Add event listeners for language switching\n  document.addEventListener('click', (e) => {\n    if (e.target.classList.contains('language-option')) {\n      const lang = e.target.dataset.lang;\n      if (lang) {\n        // Import and call setLanguage function\n        import('../i18n.js').then(({ setLanguage }) => {\n          setLanguage(lang);\n        });\n      }\n    }\n  });\n  \n  // Add event listener for language dropdown toggle\n  document.addEventListener('click', (e) => {\n    if (e.target.classList.contains('language-btn')) {\n      const dropdown = e.target.nextElementSibling;\n      if (dropdown && dropdown.classList.contains('language-dropdown')) {\n        dropdown.classList.toggle('show');\n      }\n    }\n  });\n  \n  // Close dropdown when clicking outside\n  document.addEventListener('click', (e) => {\n    if (!e.target.closest('.language-selector')) {\n      const dropdowns = document.querySelectorAll('.language-dropdown');\n      dropdowns.forEach(dropdown => dropdown.classList.remove('show'));\n    }\n  });\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$57016f834fb7504d$export$604ba5624273df44","$57016f834fb7504d$export$4b6bf64406ec64af","$57016f834fb7504d$export$202e99f82f7f0395","$57016f834fb7504d$export$b2c54cc5f2ff61e9","$57016f834fb7504d$export$16fc5dbe8103e2d0","$57016f834fb7504d$export$544ea8661fa0df65","$57016f834fb7504d$export$b16cb594c618e247","$57016f834fb7504d$export$d0d68bb9ed2c643d","en","name","flag","translations","searchPlaceholder","searchButton","today","fiveDays","selectCity","pleaseSearch","pleaseSearchForecast","min","max","temperature","humidity","windSpeed","pressure","visibility","sunrise","sunset","showChart","hideChart","footerTitle","footerDescription","madeWith","by","developer","version","currentVersion","language","selectLanguage","es","fr","de","it","pt","ru","ja","ko","zh","ar","hi","$57016f834fb7504d$var$currentLanguage","lang","localStorage","setItem","dispatchEvent","CustomEvent","detail","key","langCode","savedLang","getItem","browserLang","navigator","split","keys","$d16ff8997fd7b72f$var$savedCities","$d16ff8997fd7b72f$var$currentCity","$d16ff8997fd7b72f$var$hiddenCities","$d16ff8997fd7b72f$var$countryData","cities","$d16ff8997fd7b72f$export$311ccb8ac074141f","onCitySelect","headerHTML","map","city","join","headerContainer","document","querySelector","createElement","className","body","insertBefore","firstChild","innerHTML","$d16ff8997fd7b72f$var$initializeHeaderEvents","hoverHideTimeout","searchInput","getElementById","searchBtn","citiesChips","scrollLeft","scrollRight","countryButton","searchWrapper","countryDropdown","console","log","setAttribute","removeAttribute","style","pointerEvents","userSelect","caretColor","form","addEventListener","value","trim","$d16ff8997fd7b72f$var$handleCitySelect","query","target","toLowerCase","length","$d16ff8997fd7b72f$var$showCountryDropdown","$d16ff8997fd7b72f$var$showPopularCountries","$d16ff8997fd7b72f$var$hideCountryDropdown","setTimeout","clearTimeout","current","matches","originalContent","background","disabled","quickCountryBtns","querySelectorAll","forEach","btn","countryCode","dataset","country","find","c","placeholder","focus","$d16ff8997fd7b72f$var$showCitiesInCountry","color","transform","boxShadow","classList","contains","filter","$d16ff8997fd7b72f$var$updateCityChips","scrollAmount","Math","scrollBy","left","behavior","$d16ff8997fd7b72f$var$showCountryButton","maxScroll","scrollWidth","clientWidth","alert","$d16ff8997fd7b72f$var$hideCountryButton","$d16ff8997fd7b72f$var$scrollToNextCountry","add","remove","cityChips","currentChip","nextIndex","currentIndex","Array","from","indexOf","nextChip","scrollIntoView","block","inline","nextCity","click","$d16ff8997fd7b72f$var$updateScrollArrows","preventDefault","paginationPrev","paginationNext","startX","isDragging","touches","clientX","currentX","diff","isFromSearch","includes","unshift","push","pop","isAtStart","isAtEnd","hasOverflow","display","opacity","animation","zIndex","title","keepCountryText","dropdownContainer","suggestions","type","limitedSuggestions","slice","item","dropdownItems","backgroundColor","hoverTimeout","borderLeft","paddingLeft","countdownEl","cssText","textContent","appendChild","countdown","countdownInterval","setInterval","clearInterval","popularCountries","flagMap","popularItems","countryName","backButton","$56ca17bb174b0ce3$var$API_KEY","$56ca17bb174b0ce3$var$BASE_URL","$56ca17bb174b0ce3$export$59ee9e79053c2d96","cityName","url","encodeURIComponent","response","fetch","ok","json","$56ca17bb174b0ce3$export$27118674b1c306e","$56ca17bb174b0ce3$export$f13749ff409e4cfa","weatherDesc","data","hits","bestImage","hit","largeImageURL","imageWidth","imageHeight","webformatURL","$f746a5b36ce367c2$export$6eec93b7f9719fb8","day","night","description","$f746a5b36ce367c2$export$6c248343c6ec5612","weatherCode","isDay","weather","$41971cb266c44f05$var$quotes","text","author","$7619bfc5988c6f4f$export$f78842bd8df93f12","currentLang","$7t7Z8","getCurrentLanguage","availableLanguages","getAvailableLanguages","getTranslation","getLanguageFlag","getLanguageName","$ce77af30fc9a6e63$var$currentCity","$ce77af30fc9a6e63$var$currentView","$ce77af30fc9a6e63$var$allExpanded","$ce77af30fc9a6e63$var$showChart","$ce77af30fc9a6e63$var$errorMessage","$ce77af30fc9a6e63$var$lastWeatherData","$ce77af30fc9a6e63$var$lastForecastData","$ce77af30fc9a6e63$var$renderDashboard","weatherData","forecastData","weatherCardHTML","navButtonsHTML","main","sys","temp","round","temp_min","temp_max","desc","icon","countryNames","isMobile","innerWidth","mainContentHTML","allExpanded","list","days","date","dt_txt","daily","noon","temps","i","all","sort","a","b","getDayIdx","Date","getDay","aIdx","bIdx","dayNames","locationHeader","idx","d","dayName","isToday","toDateString","toLocaleString","month","isExpanded","wind","speed","w","h","pad","humidities","winds","pressures","allY","concat","minY","floor","maxY","ceil","mapY","val","mapX","tempPoints","x","y","humidityPoints","windPoints","pressurePoints","getSmoothPath","pts","prev","curr","cpx","tempPath","humidityPath","windPath","pressurePath","xLabels","dt","dateYear","getFullYear","toLocaleDateString","weekday","substring","toString","yTicks","yVals","_","p","toFixed","dateTimeHTML","now","getDate","time","toLocaleTimeString","hour","minute","quoteHTML","q","random","app","weatherCard","navButtons","$ce77af30fc9a6e63$var$updateDashboard","headerRoot","btnToday","btnFiveDays","onclick","dd","showChartBtn","ripple","rect","getBoundingClientRect","width","height","top","clientY","$ce77af30fc9a6e63$var$setCityBackground","overlay","backgroundImage","transition","imageUrl","backgroundSize","backgroundPosition","backgroundRepeat","$ce77af30fc9a6e63$var$showLoading","$ce77af30fc9a6e63$var$showErrorMessage","message","existingError","errorOverlay","parentNode","show","loadingElement","$ce77af30fc9a6e63$var$createLoadingOverlay","initLanguage","Promise","resolve","then","setLanguage","dropdown","nextElementSibling","toggle","closest","dropdowns"],"version":3,"file":"weather-app.78573fd3.js.map"}